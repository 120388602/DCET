//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_RecastMeshObjWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.RecastMeshObj), typeof(Pathfinding.VersionedMonoBehaviour));
		L.RegFunction("GetAllInBounds", GetAllInBounds);
		L.RegFunction("GetBounds", GetBounds);
		L.RegFunction("GetMeshFilter", GetMeshFilter);
		L.RegFunction("GetCollider", GetCollider);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("bounds", get_bounds, set_bounds);
		L.RegVar("dynamic", get_dynamic, set_dynamic);
		L.RegVar("area", get_area, set_area);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllInBounds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			System.Collections.Generic.List<Pathfinding.RecastMeshObj> arg0 = (System.Collections.Generic.List<Pathfinding.RecastMeshObj>)ToLua.CheckObject(L, 1, typeof(System.Collections.Generic.List<Pathfinding.RecastMeshObj>));
			UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
			Pathfinding.RecastMeshObj.GetAllInBounds(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBounds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)ToLua.CheckObject<Pathfinding.RecastMeshObj>(L, 1);
			UnityEngine.Bounds o = obj.GetBounds();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMeshFilter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)ToLua.CheckObject<Pathfinding.RecastMeshObj>(L, 1);
			UnityEngine.MeshFilter o = obj.GetMeshFilter();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCollider(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)ToLua.CheckObject<Pathfinding.RecastMeshObj>(L, 1);
			UnityEngine.Collider o = obj.GetCollider();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)o;
			UnityEngine.Bounds ret = obj.bounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dynamic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)o;
			bool ret = obj.dynamic;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dynamic on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_area(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)o;
			int ret = obj.area;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index area on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)o;
			UnityEngine.Bounds arg0 = ToLua.ToBounds(L, 2);
			obj.bounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dynamic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.dynamic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dynamic on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_area(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RecastMeshObj obj = (Pathfinding.RecastMeshObj)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.area = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index area on a nil value");
		}
	}
}

