//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_IO_StringJsonTokenWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.IO.StringJsonToken), typeof(MongoDB.Bson.IO.JsonToken));
		L.RegFunction("New", _CreateMongoDB_Bson_IO_StringJsonToken);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("StringValue", get_StringValue, null);
		L.RegFunction("getStringValue", get_StringValue);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_IO_StringJsonToken(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				MongoDB.Bson.IO.JsonTokenType arg0 = (MongoDB.Bson.IO.JsonTokenType)LuaDLL.luaL_checknumber(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.CheckString(L, 3);
				MongoDB.Bson.IO.StringJsonToken obj = new MongoDB.Bson.IO.StringJsonToken(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.IO.StringJsonToken.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StringValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.StringJsonToken obj = (MongoDB.Bson.IO.StringJsonToken)o;
			string ret = obj.StringValue;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index StringValue on a nil value");
		}
	}
}

