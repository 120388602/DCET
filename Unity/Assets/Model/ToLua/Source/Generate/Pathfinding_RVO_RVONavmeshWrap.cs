//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_RVO_RVONavmeshWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.RVO.RVONavmesh), typeof(Pathfinding.GraphModifier));
		L.RegFunction("OnPostCacheLoad", OnPostCacheLoad);
		L.RegFunction("OnGraphsPostUpdate", OnGraphsPostUpdate);
		L.RegFunction("OnLatePostScan", OnLatePostScan);
		L.RegFunction("RemoveObstacles", RemoveObstacles);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("wallHeight", get_wallHeight, set_wallHeight);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPostCacheLoad(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.RVO.RVONavmesh obj = (Pathfinding.RVO.RVONavmesh)ToLua.CheckObject<Pathfinding.RVO.RVONavmesh>(L, 1);
			obj.OnPostCacheLoad();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGraphsPostUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.RVO.RVONavmesh obj = (Pathfinding.RVO.RVONavmesh)ToLua.CheckObject<Pathfinding.RVO.RVONavmesh>(L, 1);
			obj.OnGraphsPostUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLatePostScan(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.RVO.RVONavmesh obj = (Pathfinding.RVO.RVONavmesh)ToLua.CheckObject<Pathfinding.RVO.RVONavmesh>(L, 1);
			obj.OnLatePostScan();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveObstacles(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.RVO.RVONavmesh obj = (Pathfinding.RVO.RVONavmesh)ToLua.CheckObject<Pathfinding.RVO.RVONavmesh>(L, 1);
			obj.RemoveObstacles();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_wallHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.RVONavmesh obj = (Pathfinding.RVO.RVONavmesh)o;
			float ret = obj.wallHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wallHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_wallHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.RVONavmesh obj = (Pathfinding.RVO.RVONavmesh)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.wallHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wallHeight on a nil value");
		}
	}
}

