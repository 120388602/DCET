//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_TextFieldWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.TextField), typeof(FairyGUI.DisplayObject));
		L.RegFunction("EnableCharPositionSupport", EnableCharPositionSupport);
		L.RegFunction("Redraw", Redraw);
		L.RegFunction("HasCharacter", HasCharacter);
		L.RegFunction("GetLinesShape", GetLinesShape);
		L.RegFunction("EnsureSizeCorrect", EnsureSizeCorrect);
		L.RegFunction("Update", Update);
		L.RegFunction("OnPopulateMesh", OnPopulateMesh);
		L.RegFunction("New", _CreateFairyGUI_TextField);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("textFormat", get_textFormat, set_textFormat);
		L.RegFunction("gettextFormat", get_textFormat);
		L.RegFunction("settextFormat", set_textFormat);
		L.RegVar("align", get_align, set_align);
		L.RegFunction("getalign", get_align);
		L.RegFunction("setalign", set_align);
		L.RegVar("verticalAlign", get_verticalAlign, set_verticalAlign);
		L.RegFunction("getverticalAlign", get_verticalAlign);
		L.RegFunction("setverticalAlign", set_verticalAlign);
		L.RegVar("text", get_text, set_text);
		L.RegFunction("gettext", get_text);
		L.RegFunction("settext", set_text);
		L.RegVar("htmlText", get_htmlText, set_htmlText);
		L.RegFunction("gethtmlText", get_htmlText);
		L.RegFunction("sethtmlText", set_htmlText);
		L.RegVar("parsedText", get_parsedText, null);
		L.RegFunction("getparsedText", get_parsedText);
		L.RegVar("autoSize", get_autoSize, set_autoSize);
		L.RegFunction("getautoSize", get_autoSize);
		L.RegFunction("setautoSize", set_autoSize);
		L.RegVar("wordWrap", get_wordWrap, set_wordWrap);
		L.RegFunction("getwordWrap", get_wordWrap);
		L.RegFunction("setwordWrap", set_wordWrap);
		L.RegVar("singleLine", get_singleLine, set_singleLine);
		L.RegFunction("getsingleLine", get_singleLine);
		L.RegFunction("setsingleLine", set_singleLine);
		L.RegVar("stroke", get_stroke, set_stroke);
		L.RegFunction("getstroke", get_stroke);
		L.RegFunction("setstroke", set_stroke);
		L.RegVar("strokeColor", get_strokeColor, set_strokeColor);
		L.RegFunction("getstrokeColor", get_strokeColor);
		L.RegFunction("setstrokeColor", set_strokeColor);
		L.RegVar("shadowOffset", get_shadowOffset, set_shadowOffset);
		L.RegFunction("getshadowOffset", get_shadowOffset);
		L.RegFunction("setshadowOffset", set_shadowOffset);
		L.RegVar("textWidth", get_textWidth, null);
		L.RegFunction("gettextWidth", get_textWidth);
		L.RegVar("textHeight", get_textHeight, null);
		L.RegFunction("gettextHeight", get_textHeight);
		L.RegVar("maxWidth", get_maxWidth, set_maxWidth);
		L.RegFunction("getmaxWidth", get_maxWidth);
		L.RegFunction("setmaxWidth", set_maxWidth);
		L.RegVar("htmlElements", get_htmlElements, null);
		L.RegFunction("gethtmlElements", get_htmlElements);
		L.RegVar("lines", get_lines, null);
		L.RegFunction("getlines", get_lines);
		L.RegVar("charPositions", get_charPositions, null);
		L.RegFunction("getcharPositions", get_charPositions);
		L.RegVar("richTextField", get_richTextField, null);
		L.RegFunction("getrichTextField", get_richTextField);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_TextField(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.TextField obj = new FairyGUI.TextField();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.TextField.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableCharPositionSupport(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)ToLua.CheckObject<FairyGUI.TextField>(L, 1);
			obj.EnableCharPositionSupport();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Redraw(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)ToLua.CheckObject<FairyGUI.TextField>(L, 1);
			bool o = obj.Redraw();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasCharacter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.TextField obj = (FairyGUI.TextField)ToLua.CheckObject<FairyGUI.TextField>(L, 1);
			char arg0 = (char)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.HasCharacter(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLinesShape(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			FairyGUI.TextField obj = (FairyGUI.TextField)ToLua.CheckObject<FairyGUI.TextField>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
			System.Collections.Generic.List<UnityEngine.Rect> arg5 = (System.Collections.Generic.List<UnityEngine.Rect>)ToLua.CheckObject(L, 7, typeof(System.Collections.Generic.List<UnityEngine.Rect>));
			obj.GetLinesShape(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnsureSizeCorrect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)ToLua.CheckObject<FairyGUI.TextField>(L, 1);
			obj.EnsureSizeCorrect();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.TextField obj = (FairyGUI.TextField)ToLua.CheckObject<FairyGUI.TextField>(L, 1);
			FairyGUI.UpdateContext arg0 = (FairyGUI.UpdateContext)ToLua.CheckObject<FairyGUI.UpdateContext>(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPopulateMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.TextField obj = (FairyGUI.TextField)ToLua.CheckObject<FairyGUI.TextField>(L, 1);
			FairyGUI.VertexBuffer arg0 = (FairyGUI.VertexBuffer)ToLua.CheckObject(L, 2, typeof(FairyGUI.VertexBuffer));
			obj.OnPopulateMesh(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textFormat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.TextFormat ret = obj.textFormat;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textFormat on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_align(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.AlignType ret = obj.align;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index align on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_verticalAlign(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.VertAlignType ret = obj.verticalAlign;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index verticalAlign on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			string ret = obj.text;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_htmlText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			string ret = obj.htmlText;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index htmlText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_parsedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			string ret = obj.parsedText;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index parsedText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.AutoSizeType ret = obj.autoSize;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_wordWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			bool ret = obj.wordWrap;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wordWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_singleLine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			bool ret = obj.singleLine;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index singleLine on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stroke(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			int ret = obj.stroke;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stroke on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_strokeColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			UnityEngine.Color ret = obj.strokeColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index strokeColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shadowOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			UnityEngine.Vector2 ret = obj.shadowOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shadowOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			float ret = obj.textWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			float ret = obj.textHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			int ret = obj.maxWidth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_htmlElements(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			System.Collections.Generic.List<FairyGUI.Utils.HtmlElement> ret = obj.htmlElements;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index htmlElements on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lines(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			System.Collections.Generic.List<FairyGUI.TextField.LineInfo> ret = obj.lines;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lines on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_charPositions(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			System.Collections.Generic.List<FairyGUI.TextField.CharPosition> ret = obj.charPositions;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index charPositions on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_richTextField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.RichTextField ret = obj.richTextField;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index richTextField on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textFormat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.TextFormat arg0 = (FairyGUI.TextFormat)ToLua.CheckObject<FairyGUI.TextFormat>(L, 2);
			obj.textFormat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textFormat on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_align(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.AlignType arg0 = (FairyGUI.AlignType)LuaDLL.luaL_checknumber(L, 2);
			obj.align = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index align on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_verticalAlign(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.VertAlignType arg0 = (FairyGUI.VertAlignType)LuaDLL.luaL_checknumber(L, 2);
			obj.verticalAlign = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index verticalAlign on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.text = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index text on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_htmlText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.htmlText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index htmlText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			FairyGUI.AutoSizeType arg0 = (FairyGUI.AutoSizeType)LuaDLL.luaL_checknumber(L, 2);
			obj.autoSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_wordWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.wordWrap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wordWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_singleLine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.singleLine = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index singleLine on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stroke(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.stroke = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stroke on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_strokeColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.strokeColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index strokeColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shadowOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.shadowOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shadowOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.TextField obj = (FairyGUI.TextField)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.maxWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxWidth on a nil value");
		}
	}
}

