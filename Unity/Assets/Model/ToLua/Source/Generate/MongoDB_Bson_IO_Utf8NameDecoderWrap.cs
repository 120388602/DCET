//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_IO_Utf8NameDecoderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.IO.Utf8NameDecoder), typeof(System.Object));
		L.RegFunction("Decode", Decode);
		L.RegFunction("Inform", Inform);
		L.RegFunction("New", _CreateMongoDB_Bson_IO_Utf8NameDecoder);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.RegFunction("getInstance", get_Instance);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_IO_Utf8NameDecoder(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MongoDB.Bson.IO.Utf8NameDecoder obj = new MongoDB.Bson.IO.Utf8NameDecoder();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.IO.Utf8NameDecoder.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Decode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			MongoDB.Bson.IO.Utf8NameDecoder obj = (MongoDB.Bson.IO.Utf8NameDecoder)ToLua.CheckObject<MongoDB.Bson.IO.Utf8NameDecoder>(L, 1);
			MongoDB.Bson.IO.BsonStream arg0 = (MongoDB.Bson.IO.BsonStream)ToLua.CheckObject<MongoDB.Bson.IO.BsonStream>(L, 2);
			System.Text.UTF8Encoding arg1 = (System.Text.UTF8Encoding)ToLua.CheckObject<System.Text.UTF8Encoding>(L, 3);
			string o = obj.Decode(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Inform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.IO.Utf8NameDecoder obj = (MongoDB.Bson.IO.Utf8NameDecoder)ToLua.CheckObject<MongoDB.Bson.IO.Utf8NameDecoder>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.Inform(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, MongoDB.Bson.IO.Utf8NameDecoder.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

