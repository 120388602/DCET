//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_Examples_TurnBasedAIWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.Examples.TurnBasedAI), typeof(Pathfinding.VersionedMonoBehaviour));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("movementPoints", get_movementPoints, set_movementPoints);
		L.RegVar("blockManager", get_blockManager, set_blockManager);
		L.RegVar("blocker", get_blocker, set_blocker);
		L.RegVar("targetNode", get_targetNode, set_targetNode);
		L.RegVar("traversalProvider", get_traversalProvider, set_traversalProvider);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_movementPoints(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			int ret = obj.movementPoints;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index movementPoints on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			Pathfinding.BlockManager ret = obj.blockManager;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index blockManager on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blocker(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			Pathfinding.SingleNodeBlocker ret = obj.blocker;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index blocker on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_targetNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			PF.GraphNode ret = obj.targetNode;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index targetNode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_traversalProvider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			Pathfinding.BlockManager.TraversalProvider ret = obj.traversalProvider;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index traversalProvider on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_movementPoints(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.movementPoints = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index movementPoints on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			Pathfinding.BlockManager arg0 = (Pathfinding.BlockManager)ToLua.CheckObject<Pathfinding.BlockManager>(L, 2);
			obj.blockManager = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index blockManager on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blocker(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			Pathfinding.SingleNodeBlocker arg0 = (Pathfinding.SingleNodeBlocker)ToLua.CheckObject<Pathfinding.SingleNodeBlocker>(L, 2);
			obj.blocker = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index blocker on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			PF.GraphNode arg0 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 2);
			obj.targetNode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index targetNode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_traversalProvider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Examples.TurnBasedAI obj = (Pathfinding.Examples.TurnBasedAI)o;
			Pathfinding.BlockManager.TraversalProvider arg0 = (Pathfinding.BlockManager.TraversalProvider)ToLua.CheckObject<Pathfinding.BlockManager.TraversalProvider>(L, 2);
			obj.traversalProvider = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index traversalProvider on a nil value");
		}
	}
}

