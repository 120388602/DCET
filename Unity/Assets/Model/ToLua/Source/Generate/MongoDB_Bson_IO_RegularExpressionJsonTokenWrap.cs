//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_IO_RegularExpressionJsonTokenWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.IO.RegularExpressionJsonToken), typeof(MongoDB.Bson.IO.JsonToken));
		L.RegFunction("New", _CreateMongoDB_Bson_IO_RegularExpressionJsonToken);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("RegularExpressionValue", get_RegularExpressionValue, null);
		L.RegFunction("getRegularExpressionValue", get_RegularExpressionValue);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_IO_RegularExpressionJsonToken(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				MongoDB.Bson.BsonRegularExpression arg1 = (MongoDB.Bson.BsonRegularExpression)ToLua.CheckObject<MongoDB.Bson.BsonRegularExpression>(L, 2);
				MongoDB.Bson.IO.RegularExpressionJsonToken obj = new MongoDB.Bson.IO.RegularExpressionJsonToken(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.IO.RegularExpressionJsonToken.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RegularExpressionValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.RegularExpressionJsonToken obj = (MongoDB.Bson.IO.RegularExpressionJsonToken)o;
			MongoDB.Bson.BsonRegularExpression ret = obj.RegularExpressionValue;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RegularExpressionValue on a nil value");
		}
	}
}

