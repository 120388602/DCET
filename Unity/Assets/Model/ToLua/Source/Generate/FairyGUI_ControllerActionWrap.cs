//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_ControllerActionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.ControllerAction), typeof(System.Object));
		L.RegFunction("CreateAction", CreateAction);
		L.RegFunction("Run", Run);
		L.RegFunction("Setup", Setup);
		L.RegFunction("New", _CreateFairyGUI_ControllerAction);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("fromPage", get_fromPage, set_fromPage);
		L.RegVar("toPage", get_toPage, set_toPage);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_ControllerAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.ControllerAction obj = new FairyGUI.ControllerAction();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.ControllerAction.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.ControllerAction.ActionType arg0 = (FairyGUI.ControllerAction.ActionType)LuaDLL.luaL_checknumber(L, 1);
			FairyGUI.ControllerAction o = FairyGUI.ControllerAction.CreateAction(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyGUI.ControllerAction obj = (FairyGUI.ControllerAction)ToLua.CheckObject<FairyGUI.ControllerAction>(L, 1);
			FairyGUI.Controller arg0 = (FairyGUI.Controller)ToLua.CheckObject<FairyGUI.Controller>(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.Run(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Setup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.ControllerAction obj = (FairyGUI.ControllerAction)ToLua.CheckObject<FairyGUI.ControllerAction>(L, 1);
			FairyGUI.Utils.ByteBuffer arg0 = (FairyGUI.Utils.ByteBuffer)ToLua.CheckObject<FairyGUI.Utils.ByteBuffer>(L, 2);
			obj.Setup(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fromPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ControllerAction obj = (FairyGUI.ControllerAction)o;
			string[] ret = obj.fromPage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fromPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_toPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ControllerAction obj = (FairyGUI.ControllerAction)o;
			string[] ret = obj.toPage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fromPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ControllerAction obj = (FairyGUI.ControllerAction)o;
			string[] arg0 = ToLua.CheckStringArray(L, 2);
			obj.fromPage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fromPage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_toPage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ControllerAction obj = (FairyGUI.ControllerAction)o;
			string[] arg0 = ToLua.CheckStringArray(L, 2);
			obj.toPage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toPage on a nil value");
		}
	}
}

