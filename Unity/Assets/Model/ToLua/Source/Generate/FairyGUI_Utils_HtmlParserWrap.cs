//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_Utils_HtmlParserWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.Utils.HtmlParser), typeof(System.Object));
		L.RegFunction("Parse", Parse);
		L.RegFunction("New", _CreateFairyGUI_Utils_HtmlParser);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("inst", get_inst, set_inst);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_Utils_HtmlParser(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.Utils.HtmlParser obj = new FairyGUI.Utils.HtmlParser();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.Utils.HtmlParser.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Parse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FairyGUI.Utils.HtmlParser obj = (FairyGUI.Utils.HtmlParser)ToLua.CheckObject<FairyGUI.Utils.HtmlParser>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			FairyGUI.TextFormat arg1 = (FairyGUI.TextFormat)ToLua.CheckObject<FairyGUI.TextFormat>(L, 3);
			System.Collections.Generic.List<FairyGUI.Utils.HtmlElement> arg2 = (System.Collections.Generic.List<FairyGUI.Utils.HtmlElement>)ToLua.CheckObject(L, 4, typeof(System.Collections.Generic.List<FairyGUI.Utils.HtmlElement>));
			FairyGUI.Utils.HtmlParseOptions arg3 = (FairyGUI.Utils.HtmlParseOptions)ToLua.CheckObject<FairyGUI.Utils.HtmlParseOptions>(L, 5);
			obj.Parse(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_inst(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, FairyGUI.Utils.HtmlParser.inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_inst(IntPtr L)
	{
		try
		{
			FairyGUI.Utils.HtmlParser arg0 = (FairyGUI.Utils.HtmlParser)ToLua.CheckObject<FairyGUI.Utils.HtmlParser>(L, 2);
			FairyGUI.Utils.HtmlParser.inst = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

