//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCET_Model_AppTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(DCET.Model.AppType));
		L.RegConstant("None", DCET.Model.AppType.None);
		L.RegConstant("Manager", DCET.Model.AppType.Manager);
		L.RegConstant("Realm", DCET.Model.AppType.Realm);
		L.RegConstant("Gate", DCET.Model.AppType.Gate);
		L.RegConstant("Http", DCET.Model.AppType.Http);
		L.RegConstant("DB", DCET.Model.AppType.DB);
		L.RegConstant("Location", DCET.Model.AppType.Location);
		L.RegConstant("Map", DCET.Model.AppType.Map);
		L.RegConstant("BenchmarkWebsocketServer", DCET.Model.AppType.BenchmarkWebsocketServer);
		L.RegConstant("BenchmarkWebsocketClient", DCET.Model.AppType.BenchmarkWebsocketClient);
		L.RegConstant("Robot", DCET.Model.AppType.Robot);
		L.RegConstant("Benchmark", DCET.Model.AppType.Benchmark);
		L.RegConstant("ClientH", DCET.Model.AppType.ClientH);
		L.RegConstant("ClientM", DCET.Model.AppType.ClientM);
		L.RegConstant("AllServer", DCET.Model.AppType.AllServer);
		L.EndEnum();
		TypeTraits<DCET.Model.AppType>.Check = CheckType;
		StackTraits<DCET.Model.AppType>.Push = Push;
	}

	static void Push(IntPtr L, DCET.Model.AppType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(DCET.Model.AppType), L, pos);
	}
}

