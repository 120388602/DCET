//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Microsoft_IO_RecyclableMemoryStreamManager_EventsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events), typeof(System.Diagnostics.Tracing.EventSource));
		L.RegFunction("MemoryStreamCreated", MemoryStreamCreated);
		L.RegFunction("MemoryStreamDisposed", MemoryStreamDisposed);
		L.RegFunction("MemoryStreamDoubleDispose", MemoryStreamDoubleDispose);
		L.RegFunction("MemoryStreamFinalized", MemoryStreamFinalized);
		L.RegFunction("MemoryStreamToArray", MemoryStreamToArray);
		L.RegFunction("MemoryStreamManagerInitialized", MemoryStreamManagerInitialized);
		L.RegFunction("MemoryStreamNewBlockCreated", MemoryStreamNewBlockCreated);
		L.RegFunction("MemoryStreamNewLargeBufferCreated", MemoryStreamNewLargeBufferCreated);
		L.RegFunction("MemoryStreamNonPooledLargeBufferCreated", MemoryStreamNonPooledLargeBufferCreated);
		L.RegFunction("MemoryStreamDiscardBuffer", MemoryStreamDiscardBuffer);
		L.RegFunction("MemoryStreamOverCapacity", MemoryStreamOverCapacity);
		L.RegFunction("New", _CreateMicrosoft_IO_RecyclableMemoryStreamManager_Events);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Writer", get_Writer, set_Writer);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMicrosoft_IO_RecyclableMemoryStreamManager_Events(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Microsoft.IO.RecyclableMemoryStreamManager.Events obj = new Microsoft.IO.RecyclableMemoryStreamManager.Events();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Microsoft.IO.RecyclableMemoryStreamManager.Events.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamCreated(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			System.Guid arg0 = StackTraits<System.Guid>.Check(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.MemoryStreamCreated(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamDisposed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			System.Guid arg0 = StackTraits<System.Guid>.Check(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.MemoryStreamDisposed(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamDoubleDispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			System.Guid arg0 = StackTraits<System.Guid>.Check(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			string arg4 = ToLua.CheckString(L, 6);
			obj.MemoryStreamDoubleDispose(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamFinalized(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			System.Guid arg0 = StackTraits<System.Guid>.Check(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.MemoryStreamFinalized(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamToArray(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			System.Guid arg0 = StackTraits<System.Guid>.Check(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			obj.MemoryStreamToArray(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamManagerInitialized(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.MemoryStreamManagerInitialized(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamNewBlockCreated(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.MemoryStreamNewBlockCreated(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamNewLargeBufferCreated(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			long arg1 = LuaDLL.tolua_checkint64(L, 3);
			obj.MemoryStreamNewLargeBufferCreated(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamNonPooledLargeBufferCreated(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.MemoryStreamNonPooledLargeBufferCreated(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamDiscardBuffer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			Microsoft.IO.RecyclableMemoryStreamManager.Events.MemoryStreamBufferType arg0 = (Microsoft.IO.RecyclableMemoryStreamManager.Events.MemoryStreamBufferType)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			Microsoft.IO.RecyclableMemoryStreamManager.Events.MemoryStreamDiscardReason arg2 = (Microsoft.IO.RecyclableMemoryStreamManager.Events.MemoryStreamDiscardReason)LuaDLL.luaL_checknumber(L, 4);
			obj.MemoryStreamDiscardBuffer(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MemoryStreamOverCapacity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Microsoft.IO.RecyclableMemoryStreamManager.Events obj = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 1, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			long arg1 = LuaDLL.tolua_checkint64(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			obj.MemoryStreamOverCapacity(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Writer(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Microsoft.IO.RecyclableMemoryStreamManager.Events.Writer);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Writer(IntPtr L)
	{
		try
		{
			Microsoft.IO.RecyclableMemoryStreamManager.Events arg0 = (Microsoft.IO.RecyclableMemoryStreamManager.Events)ToLua.CheckObject(L, 2, typeof(Microsoft.IO.RecyclableMemoryStreamManager.Events));
			Microsoft.IO.RecyclableMemoryStreamManager.Events.Writer = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

