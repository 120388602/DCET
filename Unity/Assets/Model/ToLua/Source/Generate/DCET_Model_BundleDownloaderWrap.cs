//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCET_Model_BundleDownloaderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DCET.Model.BundleDownloader), typeof(System.Object));
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("StartAsync", StartAsync);
		L.RegFunction("GetBundleMD5", GetBundleMD5);
		L.RegFunction("DownloadAsync", DownloadAsync);
		L.RegFunction("New", _CreateDCET_Model_BundleDownloader);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("bundles", get_bundles, set_bundles);
		L.RegVar("TotalSize", get_TotalSize, set_TotalSize);
		L.RegVar("downloadedBundles", get_downloadedBundles, set_downloadedBundles);
		L.RegVar("downloadingBundle", get_downloadingBundle, set_downloadingBundle);
		L.RegVar("webRequest", get_webRequest, set_webRequest);
		L.RegVar("Progress", get_Progress, null);
		L.RegFunction("getProgress", get_Progress);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDCET_Model_BundleDownloader(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DCET.Model.BundleDownloader obj = new DCET.Model.BundleDownloader();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DCET.Model.BundleDownloader.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)ToLua.CheckObject<DCET.Model.BundleDownloader>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)ToLua.CheckObject<DCET.Model.BundleDownloader>(L, 1);
			System.Threading.Tasks.Task o = obj.StartAsync();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBundleMD5(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DCET.Model.VersionConfig arg0 = (DCET.Model.VersionConfig)ToLua.CheckObject<DCET.Model.VersionConfig>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			string o = DCET.Model.BundleDownloader.GetBundleMD5(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DownloadAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)ToLua.CheckObject<DCET.Model.BundleDownloader>(L, 1);
			System.Threading.Tasks.Task o = obj.DownloadAsync();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bundles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			System.Collections.Generic.Queue<string> ret = obj.bundles;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bundles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TotalSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			long ret = obj.TotalSize;
			LuaDLL.tolua_pushint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TotalSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_downloadedBundles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			System.Collections.Generic.HashSet<string> ret = obj.downloadedBundles;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index downloadedBundles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_downloadingBundle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			string ret = obj.downloadingBundle;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index downloadingBundle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_webRequest(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			DCET.Model.UnityWebRequestAsync ret = obj.webRequest;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index webRequest on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Progress(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			int ret = obj.Progress;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Progress on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bundles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			System.Collections.Generic.Queue<string> arg0 = (System.Collections.Generic.Queue<string>)ToLua.CheckObject<System.Collections.Generic.Queue<string>>(L, 2);
			obj.bundles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bundles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TotalSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.TotalSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TotalSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_downloadedBundles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			System.Collections.Generic.HashSet<string> arg0 = (System.Collections.Generic.HashSet<string>)ToLua.CheckObject<System.Collections.Generic.HashSet<string>>(L, 2);
			obj.downloadedBundles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index downloadedBundles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_downloadingBundle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.downloadingBundle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index downloadingBundle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_webRequest(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCET.Model.BundleDownloader obj = (DCET.Model.BundleDownloader)o;
			DCET.Model.UnityWebRequestAsync arg0 = (DCET.Model.UnityWebRequestAsync)ToLua.CheckObject<DCET.Model.UnityWebRequestAsync>(L, 2);
			obj.webRequest = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index webRequest on a nil value");
		}
	}
}

