//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LitJson_JsonReaderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LitJson.JsonReader), typeof(System.Object));
		L.RegFunction("Close", Close);
		L.RegFunction("Read", Read);
		L.RegFunction("New", _CreateLitJson_JsonReader);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AllowComments", get_AllowComments, set_AllowComments);
		L.RegFunction("getAllowComments", get_AllowComments);
		L.RegFunction("setAllowComments", set_AllowComments);
		L.RegVar("AllowSingleQuotedStrings", get_AllowSingleQuotedStrings, set_AllowSingleQuotedStrings);
		L.RegFunction("getAllowSingleQuotedStrings", get_AllowSingleQuotedStrings);
		L.RegFunction("setAllowSingleQuotedStrings", set_AllowSingleQuotedStrings);
		L.RegVar("SkipNonMembers", get_SkipNonMembers, set_SkipNonMembers);
		L.RegFunction("getSkipNonMembers", get_SkipNonMembers);
		L.RegFunction("setSkipNonMembers", set_SkipNonMembers);
		L.RegVar("EndOfInput", get_EndOfInput, null);
		L.RegFunction("getEndOfInput", get_EndOfInput);
		L.RegVar("EndOfJson", get_EndOfJson, null);
		L.RegFunction("getEndOfJson", get_EndOfJson);
		L.RegVar("Token", get_Token, null);
		L.RegFunction("getToken", get_Token);
		L.RegVar("Value", get_Value, null);
		L.RegFunction("getValue", get_Value);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLitJson_JsonReader(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<string>(L, 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				LitJson.JsonReader obj = new LitJson.JsonReader(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<System.IO.TextReader>(L, 1))
			{
				System.IO.TextReader arg0 = (System.IO.TextReader)ToLua.ToObject(L, 1);
				LitJson.JsonReader obj = new LitJson.JsonReader(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LitJson.JsonReader.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Close(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)ToLua.CheckObject<LitJson.JsonReader>(L, 1);
			obj.Close();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Read(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)ToLua.CheckObject<LitJson.JsonReader>(L, 1);
			bool o = obj.Read();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AllowComments(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool ret = obj.AllowComments;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowComments on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AllowSingleQuotedStrings(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool ret = obj.AllowSingleQuotedStrings;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowSingleQuotedStrings on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SkipNonMembers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool ret = obj.SkipNonMembers;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SkipNonMembers on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EndOfInput(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool ret = obj.EndOfInput;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EndOfInput on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EndOfJson(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool ret = obj.EndOfJson;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EndOfJson on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Token(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			LitJson.JsonToken ret = obj.Token;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Token on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Value(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			object ret = obj.Value;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Value on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AllowComments(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AllowComments = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowComments on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AllowSingleQuotedStrings(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AllowSingleQuotedStrings = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowSingleQuotedStrings on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SkipNonMembers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LitJson.JsonReader obj = (LitJson.JsonReader)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SkipNonMembers = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SkipNonMembers on a nil value");
		}
	}
}

