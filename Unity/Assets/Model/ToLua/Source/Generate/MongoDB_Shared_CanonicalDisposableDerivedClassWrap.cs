//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Shared_CanonicalDisposableDerivedClassWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Shared.CanonicalDisposableDerivedClass), typeof(MongoDB.Shared.CanonicalDisposableClass));
		L.RegFunction("AnotherMethod", AnotherMethod);
		L.RegFunction("New", _CreateMongoDB_Shared_CanonicalDisposableDerivedClass);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Shared_CanonicalDisposableDerivedClass(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				System.IDisposable arg0 = (System.IDisposable)ToLua.CheckObject<System.IDisposable>(L, 1);
				System.IDisposable arg1 = (System.IDisposable)ToLua.CheckObject<System.IDisposable>(L, 2);
				MongoDB.Shared.CanonicalDisposableDerivedClass obj = new MongoDB.Shared.CanonicalDisposableDerivedClass(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Shared.CanonicalDisposableDerivedClass.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AnotherMethod(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MongoDB.Shared.CanonicalDisposableDerivedClass obj = (MongoDB.Shared.CanonicalDisposableDerivedClass)ToLua.CheckObject<MongoDB.Shared.CanonicalDisposableDerivedClass>(L, 1);
			obj.AnotherMethod();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

