//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCET_Model_AppTypeHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("AppTypeHelper");
		L.RegFunction("GetServerTypes", GetServerTypes);
		L.RegFunction("Is", Is);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetServerTypes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			System.Collections.Generic.List<DCET.Model.AppType> o = DCET.Model.AppTypeHelper.GetServerTypes();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Is(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DCET.Model.AppType arg0 = (DCET.Model.AppType)LuaDLL.luaL_checknumber(L, 1);
			DCET.Model.AppType arg1 = (DCET.Model.AppType)LuaDLL.luaL_checknumber(L, 2);
			bool o = DCET.Model.AppTypeHelper.Is(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

