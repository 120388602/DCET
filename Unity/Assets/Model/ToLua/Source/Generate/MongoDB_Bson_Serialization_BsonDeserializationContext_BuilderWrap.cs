//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_BsonDeserializationContext_BuilderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.BsonDeserializationContext.Builder), typeof(System.Object));
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AllowDuplicateElementNames", get_AllowDuplicateElementNames, set_AllowDuplicateElementNames);
		L.RegFunction("getAllowDuplicateElementNames", get_AllowDuplicateElementNames);
		L.RegFunction("setAllowDuplicateElementNames", set_AllowDuplicateElementNames);
		L.RegVar("DynamicArraySerializer", get_DynamicArraySerializer, set_DynamicArraySerializer);
		L.RegFunction("getDynamicArraySerializer", get_DynamicArraySerializer);
		L.RegFunction("setDynamicArraySerializer", set_DynamicArraySerializer);
		L.RegVar("DynamicDocumentSerializer", get_DynamicDocumentSerializer, set_DynamicDocumentSerializer);
		L.RegFunction("getDynamicDocumentSerializer", get_DynamicDocumentSerializer);
		L.RegFunction("setDynamicDocumentSerializer", set_DynamicDocumentSerializer);
		L.RegVar("Reader", get_Reader, null);
		L.RegFunction("getReader", get_Reader);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AllowDuplicateElementNames(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext.Builder obj = (MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)o;
			bool ret = obj.AllowDuplicateElementNames;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowDuplicateElementNames on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DynamicArraySerializer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext.Builder obj = (MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)o;
			MongoDB.Bson.Serialization.IBsonSerializer ret = obj.DynamicArraySerializer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DynamicArraySerializer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DynamicDocumentSerializer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext.Builder obj = (MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)o;
			MongoDB.Bson.Serialization.IBsonSerializer ret = obj.DynamicDocumentSerializer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DynamicDocumentSerializer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Reader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext.Builder obj = (MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)o;
			MongoDB.Bson.IO.IBsonReader ret = obj.Reader;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Reader on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AllowDuplicateElementNames(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext.Builder obj = (MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AllowDuplicateElementNames = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowDuplicateElementNames on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DynamicArraySerializer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext.Builder obj = (MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)o;
			MongoDB.Bson.Serialization.IBsonSerializer arg0 = (MongoDB.Bson.Serialization.IBsonSerializer)ToLua.CheckObject<MongoDB.Bson.Serialization.IBsonSerializer>(L, 2);
			obj.DynamicArraySerializer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DynamicArraySerializer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DynamicDocumentSerializer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext.Builder obj = (MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)o;
			MongoDB.Bson.Serialization.IBsonSerializer arg0 = (MongoDB.Bson.Serialization.IBsonSerializer)ToLua.CheckObject<MongoDB.Bson.Serialization.IBsonSerializer>(L, 2);
			obj.DynamicDocumentSerializer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DynamicDocumentSerializer on a nil value");
		}
	}
}

