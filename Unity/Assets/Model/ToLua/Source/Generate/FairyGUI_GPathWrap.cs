//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_GPathWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.GPath), typeof(System.Object));
		L.RegFunction("Create", Create);
		L.RegFunction("Clear", Clear);
		L.RegFunction("GetPointAt", GetPointAt);
		L.RegFunction("GetSegmentLength", GetSegmentLength);
		L.RegFunction("GetPointsInSegment", GetPointsInSegment);
		L.RegFunction("GetAllPoints", GetAllPoints);
		L.RegFunction("New", _CreateFairyGUI_GPath);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("length", get_length, null);
		L.RegFunction("getlength", get_length);
		L.RegVar("segmentCount", get_segmentCount, null);
		L.RegFunction("getsegmentCount", get_segmentCount);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_GPath(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.GPath obj = new FairyGUI.GPath();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.GPath.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
			System.Collections.Generic.IEnumerable<FairyGUI.GPathPoint> arg0 = (System.Collections.Generic.IEnumerable<FairyGUI.GPathPoint>)ToLua.CheckObject<System.Collections.Generic.IEnumerable<FairyGUI.GPathPoint>>(L, 2);
			obj.Create(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPointAt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 o = obj.GetPointAt(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSegmentLength(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			float o = obj.GetSegmentLength(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPointsInSegment(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				System.Collections.Generic.List<UnityEngine.Vector3> arg3 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 5, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
				obj.GetPointsInSegment(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				System.Collections.Generic.List<UnityEngine.Vector3> arg3 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 5, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
				System.Collections.Generic.List<float> arg4 = (System.Collections.Generic.List<float>)ToLua.CheckObject(L, 6, typeof(System.Collections.Generic.List<float>));
				obj.GetPointsInSegment(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7)
			{
				FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				System.Collections.Generic.List<UnityEngine.Vector3> arg3 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 5, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
				System.Collections.Generic.List<float> arg4 = (System.Collections.Generic.List<float>)ToLua.CheckObject(L, 6, typeof(System.Collections.Generic.List<float>));
				float arg5 = (float)LuaDLL.luaL_checknumber(L, 7);
				obj.GetPointsInSegment(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.GPath.GetPointsInSegment");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllPoints(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
				System.Collections.Generic.List<UnityEngine.Vector3> arg0 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
				obj.GetAllPoints(arg0);
				return 0;
			}
			else if (count == 3)
			{
				FairyGUI.GPath obj = (FairyGUI.GPath)ToLua.CheckObject<FairyGUI.GPath>(L, 1);
				System.Collections.Generic.List<UnityEngine.Vector3> arg0 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				obj.GetAllPoints(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.GPath.GetAllPoints");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_length(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPath obj = (FairyGUI.GPath)o;
			float ret = obj.length;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index length on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_segmentCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPath obj = (FairyGUI.GPath)o;
			int ret = obj.segmentCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index segmentCount on a nil value");
		}
	}
}

