//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_AdvancedSmooth_ConstantTurnWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.AdvancedSmooth.ConstantTurn), typeof(Pathfinding.AdvancedSmooth.TurnConstructor));
		L.RegFunction("Prepare", Prepare);
		L.RegFunction("TangentToTangent", TangentToTangent);
		L.RegFunction("GetPath", GetPath);
		L.RegFunction("New", _CreatePathfinding_AdvancedSmooth_ConstantTurn);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_AdvancedSmooth_ConstantTurn(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Pathfinding.AdvancedSmooth.ConstantTurn obj = new Pathfinding.AdvancedSmooth.ConstantTurn();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.AdvancedSmooth.ConstantTurn.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Prepare(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.AdvancedSmooth.ConstantTurn obj = (Pathfinding.AdvancedSmooth.ConstantTurn)ToLua.CheckObject<Pathfinding.AdvancedSmooth.ConstantTurn>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3[] arg1 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 3);
			obj.Prepare(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TangentToTangent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.AdvancedSmooth.ConstantTurn obj = (Pathfinding.AdvancedSmooth.ConstantTurn)ToLua.CheckObject<Pathfinding.AdvancedSmooth.ConstantTurn>(L, 1);
			System.Collections.Generic.List<Pathfinding.AdvancedSmooth.Turn> arg0 = (System.Collections.Generic.List<Pathfinding.AdvancedSmooth.Turn>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Pathfinding.AdvancedSmooth.Turn>));
			obj.TangentToTangent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.AdvancedSmooth.ConstantTurn obj = (Pathfinding.AdvancedSmooth.ConstantTurn)ToLua.CheckObject<Pathfinding.AdvancedSmooth.ConstantTurn>(L, 1);
			Pathfinding.AdvancedSmooth.Turn arg0 = StackTraits<Pathfinding.AdvancedSmooth.Turn>.Check(L, 2);
			System.Collections.Generic.List<UnityEngine.Vector3> arg1 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
			obj.GetPath(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

