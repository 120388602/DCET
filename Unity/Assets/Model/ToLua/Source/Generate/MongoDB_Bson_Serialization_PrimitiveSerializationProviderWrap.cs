//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_PrimitiveSerializationProviderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.PrimitiveSerializationProvider), typeof(MongoDB.Bson.Serialization.BsonSerializationProviderBase));
		L.RegFunction("GetSerializer", GetSerializer);
		L.RegFunction("New", _CreateMongoDB_Bson_Serialization_PrimitiveSerializationProvider);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_Serialization_PrimitiveSerializationProvider(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MongoDB.Bson.Serialization.PrimitiveSerializationProvider obj = new MongoDB.Bson.Serialization.PrimitiveSerializationProvider();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.Serialization.PrimitiveSerializationProvider.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSerializer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				MongoDB.Bson.Serialization.PrimitiveSerializationProvider obj = (MongoDB.Bson.Serialization.PrimitiveSerializationProvider)ToLua.CheckObject<MongoDB.Bson.Serialization.PrimitiveSerializationProvider>(L, 1);
				System.Type arg0 = ToLua.CheckMonoType(L, 2);
				MongoDB.Bson.Serialization.IBsonSerializer o = obj.GetSerializer(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3)
			{
				MongoDB.Bson.Serialization.PrimitiveSerializationProvider obj = (MongoDB.Bson.Serialization.PrimitiveSerializationProvider)ToLua.CheckObject<MongoDB.Bson.Serialization.PrimitiveSerializationProvider>(L, 1);
				System.Type arg0 = ToLua.CheckMonoType(L, 2);
				MongoDB.Bson.Serialization.IBsonSerializerRegistry arg1 = (MongoDB.Bson.Serialization.IBsonSerializerRegistry)ToLua.CheckObject<MongoDB.Bson.Serialization.IBsonSerializerRegistry>(L, 3);
				MongoDB.Bson.Serialization.IBsonSerializer o = obj.GetSerializer(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: MongoDB.Bson.Serialization.PrimitiveSerializationProvider.GetSerializer");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

