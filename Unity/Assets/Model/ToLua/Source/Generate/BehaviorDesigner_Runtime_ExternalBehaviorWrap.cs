//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BehaviorDesigner_Runtime_ExternalBehaviorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BehaviorDesigner.Runtime.ExternalBehavior), typeof(UnityEngine.ScriptableObject));
		L.RegFunction("GetBehaviorSource", GetBehaviorSource);
		L.RegFunction("SetBehaviorSource", SetBehaviorSource);
		L.RegFunction("GetObject", GetObject);
		L.RegFunction("GetOwnerName", GetOwnerName);
		L.RegFunction("Init", Init);
		L.RegFunction("FindTaskWithName", FindTaskWithName);
		L.RegFunction("FindTasksWithName", FindTasksWithName);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("BehaviorSource", get_BehaviorSource, set_BehaviorSource);
		L.RegFunction("getBehaviorSource", get_BehaviorSource);
		L.RegFunction("setBehaviorSource", set_BehaviorSource);
		L.RegVar("Initialized", get_Initialized, null);
		L.RegFunction("getInitialized", get_Initialized);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBehaviorSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 1);
			BehaviorDesigner.Runtime.BehaviorSource o = obj.GetBehaviorSource();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetBehaviorSource(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 1);
			BehaviorDesigner.Runtime.BehaviorSource arg0 = (BehaviorDesigner.Runtime.BehaviorSource)ToLua.CheckObject<BehaviorDesigner.Runtime.BehaviorSource>(L, 2);
			obj.SetBehaviorSource(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 1);
			UnityEngine.Object o = obj.GetObject();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetOwnerName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 1);
			string o = obj.GetOwnerName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindTaskWithName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			BehaviorDesigner.Runtime.Tasks.Task o = obj.FindTaskWithName(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindTasksWithName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)ToLua.CheckObject<BehaviorDesigner.Runtime.ExternalBehavior>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.Generic.List<BehaviorDesigner.Runtime.Tasks.Task> o = obj.FindTasksWithName(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BehaviorSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)o;
			BehaviorDesigner.Runtime.BehaviorSource ret = obj.BehaviorSource;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BehaviorSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Initialized(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)o;
			bool ret = obj.Initialized;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Initialized on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BehaviorSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.ExternalBehavior obj = (BehaviorDesigner.Runtime.ExternalBehavior)o;
			BehaviorDesigner.Runtime.BehaviorSource arg0 = (BehaviorDesigner.Runtime.BehaviorSource)ToLua.CheckObject<BehaviorDesigner.Runtime.BehaviorSource>(L, 2);
			obj.BehaviorSource = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BehaviorSource on a nil value");
		}
	}
}

