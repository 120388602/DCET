//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Shared_CanonicalDisposableStructWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Shared.CanonicalDisposableStruct), null);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("SomeMethod", SomeMethod);
		L.RegFunction("New", _CreateMongoDB_Shared_CanonicalDisposableStruct);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegFunction("default", __default__);
		L.RegFunction("__clone__", __clone__);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Shared_CanonicalDisposableStruct(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				System.IDisposable arg0 = (System.IDisposable)ToLua.CheckObject<System.IDisposable>(L, 1);
				MongoDB.Shared.CanonicalDisposableStruct obj = new MongoDB.Shared.CanonicalDisposableStruct(arg0);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 0)
			{
				MongoDB.Shared.CanonicalDisposableStruct obj = new MongoDB.Shared.CanonicalDisposableStruct();
				ToLua.PushValue(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Shared.CanonicalDisposableStruct.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MongoDB.Shared.CanonicalDisposableStruct obj = (MongoDB.Shared.CanonicalDisposableStruct)ToLua.CheckObject(L, 1, typeof(MongoDB.Shared.CanonicalDisposableStruct));
			obj.Dispose();
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SomeMethod(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MongoDB.Shared.CanonicalDisposableStruct obj = (MongoDB.Shared.CanonicalDisposableStruct)ToLua.CheckObject(L, 1, typeof(MongoDB.Shared.CanonicalDisposableStruct));
			obj.SomeMethod();
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __default__(IntPtr L)
	{
		try
		{
			var o = new MongoDB.Shared.CanonicalDisposableStruct();
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __clone__(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			var obj = (MongoDB.Shared.CanonicalDisposableStruct)ToLua.CheckObject(L, 1, typeof(MongoDB.Shared.CanonicalDisposableStruct));
			var o = obj;
			ToLua.PushValue(L, o);
			ToLua.SetBack(L, 1, obj);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

