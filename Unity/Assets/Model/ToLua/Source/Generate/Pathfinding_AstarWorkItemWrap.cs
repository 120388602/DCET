//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_AstarWorkItemWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.AstarWorkItem), null);
		L.RegFunction("New", _CreatePathfinding_AstarWorkItem);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("init", get_init, set_init);
		L.RegVar("initWithContext", get_initWithContext, set_initWithContext);
		L.RegVar("update", get_update, set_update);
		L.RegVar("updateWithContext", get_updateWithContext, set_updateWithContext);
		L.RegFunction("default", __default__);
		L.RegFunction("__clone__", __clone__);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_AstarWorkItem(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<System.Func<bool,bool>>(L, 1))
			{
				System.Func<bool,bool> arg0 = (System.Func<bool,bool>)ToLua.ToObject(L, 1);
				Pathfinding.AstarWorkItem obj = new Pathfinding.AstarWorkItem(arg0);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<System.Func<Pathfinding.IWorkItemContext,bool,bool>>(L, 1))
			{
				System.Func<Pathfinding.IWorkItemContext,bool,bool> arg0 = (System.Func<Pathfinding.IWorkItemContext,bool,bool>)ToLua.ToObject(L, 1);
				Pathfinding.AstarWorkItem obj = new Pathfinding.AstarWorkItem(arg0);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<System.Action>(L, 1))
			{
				System.Action arg0 = (System.Action)ToLua.ToObject(L, 1);
				Pathfinding.AstarWorkItem obj = new Pathfinding.AstarWorkItem(arg0);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<System.Action<Pathfinding.IWorkItemContext>>(L, 1))
			{
				System.Action<Pathfinding.IWorkItemContext> arg0 = (System.Action<Pathfinding.IWorkItemContext>)ToLua.ToObject(L, 1);
				Pathfinding.AstarWorkItem obj = new Pathfinding.AstarWorkItem(arg0);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Action, System.Func<bool,bool>>(L, 1))
			{
				System.Action arg0 = (System.Action)ToLua.ToObject(L, 1);
				System.Func<bool,bool> arg1 = (System.Func<bool,bool>)ToLua.ToObject(L, 2);
				Pathfinding.AstarWorkItem obj = new Pathfinding.AstarWorkItem(arg0, arg1);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Action<Pathfinding.IWorkItemContext>, System.Func<Pathfinding.IWorkItemContext,bool,bool>>(L, 1))
			{
				System.Action<Pathfinding.IWorkItemContext> arg0 = (System.Action<Pathfinding.IWorkItemContext>)ToLua.ToObject(L, 1);
				System.Func<Pathfinding.IWorkItemContext,bool,bool> arg1 = (System.Func<Pathfinding.IWorkItemContext,bool,bool>)ToLua.ToObject(L, 2);
				Pathfinding.AstarWorkItem obj = new Pathfinding.AstarWorkItem(arg0, arg1);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 0)
			{
				Pathfinding.AstarWorkItem obj = new Pathfinding.AstarWorkItem();
				ToLua.PushValue(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.AstarWorkItem.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_init(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Action ret = obj.init;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index init on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_initWithContext(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Action<Pathfinding.IWorkItemContext> ret = obj.initWithContext;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index initWithContext on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_update(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Func<bool,bool> ret = obj.update;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index update on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updateWithContext(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Func<Pathfinding.IWorkItemContext,bool,bool> ret = obj.updateWithContext;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateWithContext on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_init(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.init = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index init on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_initWithContext(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Action<Pathfinding.IWorkItemContext> arg0 = (System.Action<Pathfinding.IWorkItemContext>)ToLua.CheckDelegate<System.Action<Pathfinding.IWorkItemContext>>(L, 2);
			obj.initWithContext = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index initWithContext on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_update(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Func<bool,bool> arg0 = (System.Func<bool,bool>)ToLua.CheckDelegate<System.Func<bool,bool>>(L, 2);
			obj.update = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index update on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updateWithContext(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AstarWorkItem obj = (Pathfinding.AstarWorkItem)o;
			System.Func<Pathfinding.IWorkItemContext,bool,bool> arg0 = (System.Func<Pathfinding.IWorkItemContext,bool,bool>)ToLua.CheckDelegate<System.Func<Pathfinding.IWorkItemContext,bool,bool>>(L, 2);
			obj.updateWithContext = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateWithContext on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __default__(IntPtr L)
	{
		try
		{
			var o = new Pathfinding.AstarWorkItem();
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __clone__(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			var obj = (Pathfinding.AstarWorkItem)ToLua.CheckObject(L, 1, typeof(Pathfinding.AstarWorkItem));
			var o = obj;
			ToLua.PushValue(L, o);
			ToLua.SetBack(L, 1, obj);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

