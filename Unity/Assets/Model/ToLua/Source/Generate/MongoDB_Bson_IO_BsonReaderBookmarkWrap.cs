//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_IO_BsonReaderBookmarkWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.IO.BsonReaderBookmark), typeof(System.Object));
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("State", get_State, null);
		L.RegFunction("getState", get_State);
		L.RegVar("CurrentBsonType", get_CurrentBsonType, null);
		L.RegFunction("getCurrentBsonType", get_CurrentBsonType);
		L.RegVar("CurrentName", get_CurrentName, null);
		L.RegFunction("getCurrentName", get_CurrentName);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_State(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.BsonReaderBookmark obj = (MongoDB.Bson.IO.BsonReaderBookmark)o;
			MongoDB.Bson.IO.BsonReaderState ret = obj.State;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index State on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurrentBsonType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.BsonReaderBookmark obj = (MongoDB.Bson.IO.BsonReaderBookmark)o;
			MongoDB.Bson.BsonType ret = obj.CurrentBsonType;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CurrentBsonType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurrentName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.BsonReaderBookmark obj = (MongoDB.Bson.IO.BsonReaderBookmark)o;
			string ret = obj.CurrentName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CurrentName on a nil value");
		}
	}
}

