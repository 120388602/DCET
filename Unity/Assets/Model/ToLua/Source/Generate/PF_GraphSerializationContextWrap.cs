//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PF_GraphSerializationContextWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PF.GraphSerializationContext), typeof(System.Object));
		L.RegFunction("SerializeNodeReference", SerializeNodeReference);
		L.RegFunction("DeserializeNodeReference", DeserializeNodeReference);
		L.RegFunction("SerializeVector3", SerializeVector3);
		L.RegFunction("DeserializeVector3", DeserializeVector3);
		L.RegFunction("SerializeInt3", SerializeInt3);
		L.RegFunction("DeserializeInt3", DeserializeInt3);
		L.RegFunction("DeserializeInt", DeserializeInt);
		L.RegFunction("DeserializeFloat", DeserializeFloat);
		L.RegFunction("New", _CreatePF_GraphSerializationContext);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("reader", get_reader, null);
		L.RegVar("writer", get_writer, null);
		L.RegVar("graphIndex", get_graphIndex, null);
		L.RegVar("meta", get_meta, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePF_GraphSerializationContext(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				System.IO.BinaryWriter arg0 = (System.IO.BinaryWriter)ToLua.CheckObject<System.IO.BinaryWriter>(L, 1);
				PF.GraphSerializationContext obj = new PF.GraphSerializationContext(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 4)
			{
				System.IO.BinaryReader arg0 = (System.IO.BinaryReader)ToLua.CheckObject<System.IO.BinaryReader>(L, 1);
				PF.GraphNode[] arg1 = ToLua.CheckObjectArray<PF.GraphNode>(L, 2);
				uint arg2 = (uint)LuaDLL.luaL_checknumber(L, 3);
				PF.GraphMeta arg3 = (PF.GraphMeta)ToLua.CheckObject<PF.GraphMeta>(L, 4);
				PF.GraphSerializationContext obj = new PF.GraphSerializationContext(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: PF.GraphSerializationContext.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SerializeNodeReference(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			PF.GraphNode arg0 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 2);
			obj.SerializeNodeReference(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeNodeReference(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			PF.GraphNode o = obj.DeserializeNodeReference();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SerializeVector3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.SerializeVector3(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeVector3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			UnityEngine.Vector3 o = obj.DeserializeVector3();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SerializeInt3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			PF.Int3 arg0 = StackTraits<PF.Int3>.Check(L, 2);
			obj.SerializeInt3(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeInt3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			PF.Int3 o = obj.DeserializeInt3();
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.DeserializeInt(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float o = obj.DeserializeFloat(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_reader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)o;
			System.IO.BinaryReader ret = obj.reader;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reader on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_writer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)o;
			System.IO.BinaryWriter ret = obj.writer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index writer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_graphIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)o;
			uint ret = obj.graphIndex;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index graphIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_meta(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.GraphSerializationContext obj = (PF.GraphSerializationContext)o;
			PF.GraphMeta ret = obj.meta;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index meta on a nil value");
		}
	}
}

