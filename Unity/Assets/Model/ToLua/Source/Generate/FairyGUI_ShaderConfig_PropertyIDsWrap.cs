//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_ShaderConfig_PropertyIDsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.ShaderConfig.PropertyIDs), typeof(System.Object));
		L.RegFunction("New", _CreateFairyGUI_ShaderConfig_PropertyIDs);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("_ClipBox", get__ClipBox, set__ClipBox);
		L.RegVar("_ClipSoftness", get__ClipSoftness, set__ClipSoftness);
		L.RegVar("_AlphaTex", get__AlphaTex, set__AlphaTex);
		L.RegVar("_StencilComp", get__StencilComp, set__StencilComp);
		L.RegVar("_Stencil", get__Stencil, set__Stencil);
		L.RegVar("_StencilOp", get__StencilOp, set__StencilOp);
		L.RegVar("_StencilReadMask", get__StencilReadMask, set__StencilReadMask);
		L.RegVar("_ColorMask", get__ColorMask, set__ColorMask);
		L.RegVar("_ColorMatrix", get__ColorMatrix, set__ColorMatrix);
		L.RegVar("_ColorOffset", get__ColorOffset, set__ColorOffset);
		L.RegVar("_BlendSrcFactor", get__BlendSrcFactor, set__BlendSrcFactor);
		L.RegVar("_BlendDstFactor", get__BlendDstFactor, set__BlendDstFactor);
		L.RegVar("_ColorOption", get__ColorOption, set__ColorOption);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_ShaderConfig_PropertyIDs(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.ShaderConfig.PropertyIDs obj = new FairyGUI.ShaderConfig.PropertyIDs();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.ShaderConfig.PropertyIDs.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__ClipBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._ClipBox;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ClipBox on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__ClipSoftness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._ClipSoftness;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ClipSoftness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__AlphaTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._AlphaTex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _AlphaTex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__StencilComp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._StencilComp;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _StencilComp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__Stencil(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._Stencil;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _Stencil on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__StencilOp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._StencilOp;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _StencilOp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__StencilReadMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._StencilReadMask;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _StencilReadMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__ColorMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._ColorMask;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__ColorMatrix(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._ColorMatrix;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorMatrix on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__ColorOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._ColorOffset;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__BlendSrcFactor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._BlendSrcFactor;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _BlendSrcFactor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__BlendDstFactor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._BlendDstFactor;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _BlendDstFactor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__ColorOption(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int ret = obj._ColorOption;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorOption on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__ClipBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._ClipBox = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ClipBox on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__ClipSoftness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._ClipSoftness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ClipSoftness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__AlphaTex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._AlphaTex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _AlphaTex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__StencilComp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._StencilComp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _StencilComp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__Stencil(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._Stencil = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _Stencil on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__StencilOp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._StencilOp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _StencilOp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__StencilReadMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._StencilReadMask = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _StencilReadMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__ColorMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._ColorMask = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__ColorMatrix(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._ColorMatrix = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorMatrix on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__ColorOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._ColorOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__BlendSrcFactor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._BlendSrcFactor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _BlendSrcFactor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__BlendDstFactor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._BlendDstFactor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _BlendDstFactor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__ColorOption(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ShaderConfig.PropertyIDs obj = (FairyGUI.ShaderConfig.PropertyIDs)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj._ColorOption = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _ColorOption on a nil value");
		}
	}
}

