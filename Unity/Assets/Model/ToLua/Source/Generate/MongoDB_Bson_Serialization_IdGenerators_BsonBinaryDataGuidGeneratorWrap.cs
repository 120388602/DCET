//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_IdGenerators_BsonBinaryDataGuidGeneratorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator), typeof(System.Object));
		L.RegFunction("GetInstance", GetInstance);
		L.RegFunction("GenerateId", GenerateId);
		L.RegFunction("IsEmpty", IsEmpty);
		L.RegFunction("New", _CreateMongoDB_Bson_Serialization_IdGenerators_BsonBinaryDataGuidGenerator);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CSharpLegacyInstance", get_CSharpLegacyInstance, null);
		L.RegFunction("getCSharpLegacyInstance", get_CSharpLegacyInstance);
		L.RegVar("JavaLegacyInstance", get_JavaLegacyInstance, null);
		L.RegFunction("getJavaLegacyInstance", get_JavaLegacyInstance);
		L.RegVar("PythonLegacyInstance", get_PythonLegacyInstance, null);
		L.RegFunction("getPythonLegacyInstance", get_PythonLegacyInstance);
		L.RegVar("StandardInstance", get_StandardInstance, null);
		L.RegFunction("getStandardInstance", get_StandardInstance);
		L.RegVar("UnspecifedInstance", get_UnspecifedInstance, null);
		L.RegFunction("getUnspecifedInstance", get_UnspecifedInstance);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_Serialization_IdGenerators_BsonBinaryDataGuidGenerator(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				MongoDB.Bson.GuidRepresentation arg0 = (MongoDB.Bson.GuidRepresentation)LuaDLL.luaL_checknumber(L, 1);
				MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator obj = new MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MongoDB.Bson.GuidRepresentation arg0 = (MongoDB.Bson.GuidRepresentation)LuaDLL.luaL_checknumber(L, 1);
			MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator o = MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.GetInstance(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GenerateId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator obj = (MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator)ToLua.CheckObject<MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			object o = obj.GenerateId(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsEmpty(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator obj = (MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator)ToLua.CheckObject<MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			bool o = obj.IsEmpty(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CSharpLegacyInstance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.CSharpLegacyInstance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_JavaLegacyInstance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.JavaLegacyInstance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PythonLegacyInstance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.PythonLegacyInstance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StandardInstance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.StandardInstance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnspecifedInstance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.UnspecifedInstance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

