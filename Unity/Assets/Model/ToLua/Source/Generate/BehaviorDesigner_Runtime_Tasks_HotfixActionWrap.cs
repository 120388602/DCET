//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BehaviorDesigner_Runtime_Tasks_HotfixActionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BehaviorDesigner.Runtime.Tasks.HotfixAction), typeof(BehaviorDesigner.Runtime.Tasks.Action));
		L.RegFunction("GetPriority", GetPriority);
		L.RegFunction("GetUtility", GetUtility);
		L.RegFunction("OnAwake", OnAwake);
		L.RegFunction("OnBehaviorComplete", OnBehaviorComplete);
		L.RegFunction("OnBehaviorRestart", OnBehaviorRestart);
		L.RegFunction("OnEnd", OnEnd);
		L.RegFunction("OnUpdate", OnUpdate);
		L.RegFunction("OnFixedUpdate", OnFixedUpdate);
		L.RegFunction("OnLateUpdate", OnLateUpdate);
		L.RegFunction("OnDrawGizmos", OnDrawGizmos);
		L.RegFunction("OnPause", OnPause);
		L.RegFunction("OnReset", OnReset);
		L.RegFunction("OnStart", OnStart);
		L.RegFunction("OnTick", OnTick);
		L.RegFunction("Equals", Equals);
		L.RegFunction("GetHashCode", GetHashCode);
		L.RegFunction("ToString", ToString);
		L.RegFunction("New", _CreateBehaviorDesigner_Runtime_Tasks_HotfixAction);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("behaviorTreeConfigID", get_behaviorTreeConfigID, set_behaviorTreeConfigID);
		L.RegVar("getPriority", get_getPriority, set_getPriority);
		L.RegVar("getUtility", get_getUtility, set_getUtility);
		L.RegVar("onAwake", get_onAwake, set_onAwake);
		L.RegVar("onBehaviorComplete", get_onBehaviorComplete, set_onBehaviorComplete);
		L.RegVar("onBehaviorRestart", get_onBehaviorRestart, set_onBehaviorRestart);
		L.RegVar("onEnd", get_onEnd, set_onEnd);
		L.RegVar("onUpdate", get_onUpdate, set_onUpdate);
		L.RegVar("onFixedUpdate", get_onFixedUpdate, set_onFixedUpdate);
		L.RegVar("onLateUpdate", get_onLateUpdate, set_onLateUpdate);
		L.RegVar("onDrawGizmos", get_onDrawGizmos, set_onDrawGizmos);
		L.RegVar("onPause", get_onPause, set_onPause);
		L.RegVar("onReset", get_onReset, set_onReset);
		L.RegVar("onStart", get_onStart, set_onStart);
		L.RegVar("onTick", get_onTick, set_onTick);
		L.RegVar("equals", get_equals, set_equals);
		L.RegVar("getHashCode", get_getHashCode, set_getHashCode);
		L.RegVar("toString", get_toString, set_toString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateBehaviorDesigner_Runtime_Tasks_HotfixAction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				BehaviorDesigner.Runtime.Tasks.HotfixAction obj = new BehaviorDesigner.Runtime.Tasks.HotfixAction();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: BehaviorDesigner.Runtime.Tasks.HotfixAction.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPriority(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			float o = obj.GetPriority();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUtility(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			float o = obj.GetUtility();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnAwake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnBehaviorComplete();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBehaviorRestart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnBehaviorRestart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnEnd();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnFixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnFixedUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnLateUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrawGizmos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnDrawGizmos();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.OnPause(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnReset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			obj.OnStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			BehaviorDesigner.Runtime.Tasks.TaskStatus o = obj.OnTick();
			LuaDLL.lua_pushinteger(L, (int)o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Equals(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			bool o = obj != null ? obj.Equals(arg0) : arg0 == null;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetHashCode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			int o = obj.GetHashCode();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)ToLua.CheckObject<BehaviorDesigner.Runtime.Tasks.HotfixAction>(L, 1);
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_behaviorTreeConfigID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			int ret = obj.behaviorTreeConfigID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index behaviorTreeConfigID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_getPriority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<float> ret = obj.getPriority;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getPriority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_getUtility(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<float> ret = obj.getUtility;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getUtility on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onAwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onAwake;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAwake on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onBehaviorComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onBehaviorComplete;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBehaviorComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onBehaviorRestart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onBehaviorRestart;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBehaviorRestart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onEnd;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onFixedUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onFixedUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onFixedUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onLateUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onLateUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onLateUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onDrawGizmos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onDrawGizmos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDrawGizmos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action<bool> ret = obj.onPause;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onReset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onReset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action ret = obj.onStart;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus> ret = obj.onTick;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_equals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<object,bool> ret = obj.equals;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index equals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_getHashCode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<int> ret = obj.getHashCode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getHashCode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_toString(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<string> ret = obj.toString;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toString on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_behaviorTreeConfigID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.behaviorTreeConfigID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index behaviorTreeConfigID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_getPriority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<float> arg0 = (System.Func<float>)ToLua.CheckDelegate<System.Func<float>>(L, 2);
			obj.getPriority = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getPriority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_getUtility(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<float> arg0 = (System.Func<float>)ToLua.CheckDelegate<System.Func<float>>(L, 2);
			obj.getUtility = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getUtility on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onAwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onAwake = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAwake on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onBehaviorComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onBehaviorComplete = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBehaviorComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onBehaviorRestart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onBehaviorRestart = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBehaviorRestart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onEnd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onEnd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onEnd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onFixedUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onFixedUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onFixedUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onLateUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onLateUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onLateUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onDrawGizmos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onDrawGizmos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDrawGizmos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onPause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action<bool> arg0 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 2);
			obj.onPause = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onReset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onReset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onStart = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus> arg0 = (System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus>)ToLua.CheckDelegate<System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus>>(L, 2);
			obj.onTick = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_equals(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<object,bool> arg0 = (System.Func<object,bool>)ToLua.CheckDelegate<System.Func<object,bool>>(L, 2);
			obj.equals = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index equals on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_getHashCode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<int> arg0 = (System.Func<int>)ToLua.CheckDelegate<System.Func<int>>(L, 2);
			obj.getHashCode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index getHashCode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_toString(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BehaviorDesigner.Runtime.Tasks.HotfixAction obj = (BehaviorDesigner.Runtime.Tasks.HotfixAction)o;
			System.Func<string> arg0 = (System.Func<string>)ToLua.CheckDelegate<System.Func<string>>(L, 2);
			obj.toString = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toString on a nil value");
		}
	}
}

