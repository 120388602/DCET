//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_Attributes_BsonElementAttributeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.Attributes.BsonElementAttribute), typeof(System.Attribute));
		L.RegFunction("Apply", Apply);
		L.RegFunction("New", _CreateMongoDB_Bson_Serialization_Attributes_BsonElementAttribute);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ElementName", get_ElementName, null);
		L.RegFunction("getElementName", get_ElementName);
		L.RegVar("Order", get_Order, set_Order);
		L.RegFunction("getOrder", get_Order);
		L.RegFunction("setOrder", set_Order);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_Serialization_Attributes_BsonElementAttribute(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MongoDB.Bson.Serialization.Attributes.BsonElementAttribute obj = new MongoDB.Bson.Serialization.Attributes.BsonElementAttribute();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				MongoDB.Bson.Serialization.Attributes.BsonElementAttribute obj = new MongoDB.Bson.Serialization.Attributes.BsonElementAttribute(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.Serialization.Attributes.BsonElementAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonElementAttribute)ToLua.CheckObject<MongoDB.Bson.Serialization.Attributes.BsonElementAttribute>(L, 1);
			MongoDB.Bson.Serialization.BsonMemberMap arg0 = (MongoDB.Bson.Serialization.BsonMemberMap)ToLua.CheckObject<MongoDB.Bson.Serialization.BsonMemberMap>(L, 2);
			obj.Apply(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ElementName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonElementAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonElementAttribute)o;
			string ret = obj.ElementName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ElementName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Order(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonElementAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonElementAttribute)o;
			int ret = obj.Order;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Order on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Order(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonElementAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonElementAttribute)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Order = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Order on a nil value");
		}
	}
}

