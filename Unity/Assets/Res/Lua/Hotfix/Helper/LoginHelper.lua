-- Generated by CSharp.lua Compiler
local System = System
local DCETHotfix = DCET.Hotfix
local DCETModel = DCET.Model
local DCETHotfix
System.import(function (out)
  DCETHotfix = DCET.Hotfix
end)
System.namespace("DCET.Hotfix", function (namespace)
  namespace.class("LoginHelper", function (namespace)
    local OnLoginAsync
    OnLoginAsync = function (account)
      System.async(function (async, account)
        System.try(function ()
          -- 创建一个ETModel层的Session
          local session = DCETHotfix.Game.getScene():GetComponent(DCETHotfix.NetOuterComponent):Create1(DCETModel.GlobalConfigComponent.getInstance().GlobalProto.Address)

          local default = DCETHotfix.C2R_Login()
          default:setAccount(account)
          default:setPassword("111111")
          local r2CLogin = System.cast(DCETHotfix.R2C_Login, async:await(session:Call(default)))

          DCETHotfix.Game.getScene():AddComponent(DCETHotfix.SessionComponent):setSession(DCETHotfix.Game.getScene():GetComponent(DCETHotfix.NetOuterComponent):Create1(r2CLogin:getAddress()))

          local extern = DCETHotfix.C2G_LoginGate()
          extern:setKey(r2CLogin:getKey())
          extern:setGateId(r2CLogin:getGateId())
          local g2CLoginGate = System.cast(DCETHotfix.G2C_LoginGate, async:await(DCETHotfix.SessionComponent.Instance:getSession():Call(extern)))

          DCETHotfix.Log.Info("登陆gate成功!")

          -- 创建Player
          local player = DCETHotfix.EntityFactory.CreateWithId(DCETHotfix.Game.getScene(), g2CLoginGate:getPlayerId(), DCETHotfix.Player)
          local playerComponent = DCETHotfix.Game.getScene():GetComponent(DCETHotfix.PlayerComponent)
          playerComponent:setMyPlayer(player)

          DCETHotfix.Game.getEventSystem():Run("LoginFinish" --[[EventIdType.LoginFinish]])

          -- 测试消息有成员是class类型
          local g2CPlayerInfo = System.cast(DCETHotfix.G2C_PlayerInfo, async:await(DCETHotfix.SessionComponent.Instance:getSession():Call(DCETHotfix.C2G_PlayerInfo())))
        end, function (default)
          local e = default
          DCETHotfix.Log.Error(e)
        end)
      end, true, account)
    end
    return {
      OnLoginAsync = OnLoginAsync
    }
  end)
end)
