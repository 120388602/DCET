-- Generated by CSharp.lua Compiler
local System = System
local DCETHotfix = DCET.Hotfix
local FairyGUI = FairyGUI
local DCETHotfix
System.import(function (out)
  DCETHotfix = DCET.Hotfix
end)
System.namespace("DCET.Hotfix", function (namespace)
  namespace.class("FUILoadingProgressBarAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self, go)
      self:Awake(go)
    end
    return {
      base = function (out)
        return {
          out.DCET.Hotfix.AwakeSystem_2(out.DCET.Hotfix.FUILoadingProgressBar, out.FairyGUI.GObject)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          class = { 0x6, out.DCET.Hotfix.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("FUILoadingProgressBar", function (namespace)
    local UIResName, CreateGObject, CreateGObjectAsync, CreateInstance, CreateInstanceAsync, Create, GetFormPool, Awake, 
    Dispose, class
    UIResName = "LoadingProgressBar"
    CreateGObject = function ()
      return FairyGUI.UIPackage.CreateObject("Common" --[[FUILoadingProgressBar.UIPackageName]], class.UIResName)
    end
    CreateGObjectAsync = function (result)
      FairyGUI.UIPackage.CreateObjectAsync("Common" --[[FUILoadingProgressBar.UIPackageName]], class.UIResName, result)
    end
    CreateInstance = function (domain)
      return DCETHotfix.EntityFactory.Create2(domain, CreateGObject(), class, FairyGUI.GObject)
    end
    CreateInstanceAsync = function (domain)
      local tcs = System.TaskCompletionSource()

      CreateGObjectAsync(function (go)
        tcs:SetResult(DCETHotfix.EntityFactory.Create2(domain, go, class, FairyGUI.GObject))
      end)

      return tcs:getTask()
    end
    Create = function (domain, go)
      return DCETHotfix.EntityFactory.Create2(domain, go, class, FairyGUI.GObject)
    end
    -- <summary>
    -- 通过此方法获取的FUI，在Dispose时不会释放GObject，需要自行管理（一般在配合FGUI的Pool机制时使用）。
    -- </summary>
    GetFormPool = function (domain, go)
      local fui = DCETHotfix.GObjectHelper.Get(go, class)

      if fui == nil then
        fui = Create(domain, go)
      end

      fui.isFromFGUIPool = true

      return fui
    end
    Awake = function (this, go)
      if go == nil then
        return
      end

      this.GObject = go

      if System.String.IsNullOrWhiteSpace(this:getName()) then
        this:setName(this.Id:ToString())
      end

      this.self = System.cast(FairyGUI.GProgressBar, go)

      DCETHotfix.GObjectHelper.Add(this.self, this)

      local com = go:getasCom()

      if com ~= nil then
        this.bg = System.cast(FairyGUI.GImage, com:GetChild("bg"))
        this.bar = System.cast(FairyGUI.GImage, com:GetChild("bar"))
      end
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end

      System.base(this).Dispose(this)

      DCETHotfix.GObjectHelper.Remove(this.self)
      this.self = nil
      this.bg = nil
      this.bar = nil
    end
    class = {
      base = function (out)
        return {
          out.DCET.Hotfix.FUI
        }
      end,
      UIResName = UIResName,
      CreateInstance = CreateInstance,
      CreateInstanceAsync = CreateInstanceAsync,
      Create = Create,
      GetFormPool = GetFormPool,
      Awake = Awake,
      Dispose = Dispose
    }
    return class
  end)
end)
