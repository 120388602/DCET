-- Generated by CSharp.lua Compiler
local System = System
local DCETHotfix = DCET.Hotfix
System.namespace("DCET.Hotfix", function (namespace)
  namespace.class("PatrolActionComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self, behaviorTreeParent, hotfixAction, behaviorTreeConfig)
      self:Awake(behaviorTreeParent, hotfixAction, behaviorTreeConfig)
    end
    return {
      __inherits__ = function (out)
        return {
          out.DCET.Hotfix.AwakeSystem_4(out.DCET.Hotfix.PatrolActionComponent, out.DCET.Hotfix.Entity, out.BehaviorDesigner.Runtime.Tasks.HotfixAction, out.DCET.Hotfix.BehaviorTreeConfig)
        }
      end,
      Awake = Awake
    }
  end)

  namespace.class("PatrolActionComponent", function (namespace)
    local Awake, OnTick, Patrol, Dispose, __ctor__
    __ctor__ = function (this)
      System.base(this).__ctor__(this)
    end
    Awake = function (this, behaviorTreeParent, hotfixAction, behaviorTreeConfig)
      this.hotfixAction = hotfixAction

      if this.hotfixAction ~= nil and behaviorTreeConfig ~= nil then
        this.hotfixAction.onTick = System.fn(this, OnTick)
      end
    end
    OnTick = function (this)
      Patrol(this)

      return 3 --[[TaskStatus.Running]]
    end
    Patrol = function (this)
      DCETHotfix.Log.Info("巡逻中..." .. "")
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end

      System.base(this).Dispose(this)

      if this.hotfixAction ~= nil then
        this.hotfixAction.onTick = nil
      end

      this.hotfixAction = nil
    end
    return {
      __inherits__ = function (out)
        return {
          out.DCET.Hotfix.Entity
        }
      end,
      Awake = Awake,
      Dispose = Dispose,
      __ctor__ = __ctor__
    }
  end)
end)
