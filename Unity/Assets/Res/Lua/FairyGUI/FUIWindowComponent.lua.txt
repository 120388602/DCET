-- Generated by CSharp.lua Compiler
local System = System
local DCETModel = DCET.Model
local DCETHotfix
System.import(function (out)
  DCETHotfix = DCET.Hotfix
end)
System.namespace("DCET.Hotfix", function (namespace)
  namespace.class("FUIWindowComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      local fui = self:GetParent(DCETHotfix.FUI)
      self.Window = DCETModel.GWindow()
      self.Window:setcontentPane(fui.GObject:getasCom())
    end
    return {
      __inherits__ = function (out)
        return {
          out.DCET.Hotfix.AwakeSystem_1(out.DCET.Hotfix.FUIWindowComponent)
        }
      end,
      Awake = Awake
    }
  end)

  -- <summary>
  -- 挂上这个组件，就成为了一个窗口
  -- </summary>
  namespace.class("FUIWindowComponent", function (namespace)
    local Show, Hide, getIsShowing, getModal, setModal, __ctor__
    __ctor__ = function (this)
      System.base(this).__ctor__(this)
    end
    Show = function (this)
      this.Window:Show()
    end
    Hide = function (this)
      this.Window:Hide()
    end
    getIsShowing = function (this)
      return this.Window:getisShowing()
    end
    getModal = function (this)
      return this.Window:getmodal()
    end
    setModal = function (this, value)
      this.Window:setmodal(value)
    end
    return {
      __inherits__ = function (out)
        return {
          out.DCET.Hotfix.Entity
        }
      end,
      Show = Show,
      Hide = Hide,
      getIsShowing = getIsShowing,
      getModal = getModal,
      setModal = setModal,
      __ctor__ = __ctor__
    }
  end)
end)
