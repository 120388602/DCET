-- Generated by CSharp.lua Compiler
--[[ Copyright 2016-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBsonIO
System.import(function (out)
  MongoDBBsonIO = MongoDB.Bson.IO
end)
System.namespace("MongoDB.Shared", function (namespace)
  namespace.class("ApplicationNameHelper", function (namespace)
    local EnsureApplicationNameIsValid, IsApplicationNameValid
    EnsureApplicationNameIsValid = function (applicationName, paramName)
      local message
      local default
      default, message = IsApplicationNameValid(applicationName)
      if not default then
        System.throw(System.ArgumentException(message, paramName))
      end

      return applicationName
    end
    IsApplicationNameValid = function (applicationName, message)
      if applicationName ~= nil then
        local utf8 = MongoDBBsonIO.Utf8Encodings.getStrict():GetBytes(applicationName)
        if #utf8 > 128 then
          message = "Application name exceeds 128 bytes after encoding to UTF8."
          return false, message
        end
      end

      message = nil
      return true, message
    end
    return {
      EnsureApplicationNameIsValid = EnsureApplicationNameIsValid,
      IsApplicationNameValid = IsApplicationNameValid
    }
  end)
end)
