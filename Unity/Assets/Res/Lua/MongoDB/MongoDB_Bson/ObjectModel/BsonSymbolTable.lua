-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBson
local DictStringBsonSymbol
System.import(function (out)
  MongoDBBson = MongoDB.Bson
  DictStringBsonSymbol = System.Dictionary(System.String, MongoDBBson.BsonSymbol)
end)
System.namespace("MongoDB.Bson", function (namespace)
  -- <summary>
  -- Represents the symbol table of BsonSymbols.
  -- </summary>
  namespace.class("BsonSymbolTable", function (namespace)
    local __staticLock, __symbolTable, Lookup, static
    static = function (this)
      __staticLock = System.Object()
      __symbolTable = DictStringBsonSymbol()
    end
    -- <summary>
    -- Looks up a symbol (and creates a new one if necessary).
    -- </summary>
    -- <returns>The symbol.</returns>
    Lookup = function (name)
      if name == nil then
        System.throw(System.ArgumentNullException("name"))
      end
      -- lock(__staticLock)
      do
        local symbol
        local default
        default, symbol = __symbolTable:TryGetValue(name)
        if not default then
          symbol = MongoDBBson.BsonSymbol(name)
          __symbolTable:set(name, symbol)
        end
        return symbol
      end
    end
    return {
      Lookup = Lookup,
      static = static
    }
  end)
end)
