-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local ArrayByte = System.Array(System.Byte)
local MongoDBBson
System.import(function (out)
  MongoDBBson = MongoDB.Bson
end)
System.namespace("MongoDB.Bson", function (namespace)
  -- <summary>
  -- A static class containing methods to convert to and from Guids and byte arrays in various byte orders.
  -- </summary>
  namespace.class("GuidConverter", function (namespace)
    local FromBytes, ToBytes
    -- <summary>
    -- Converts a byte array to a Guid.
    -- </summary>
    -- <param name="representation">The representation of the Guid in the byte array.</param>
    -- <returns>A Guid.</returns>
    FromBytes = function (bytes, representation)
      if #bytes ~= 16 then
        local message = System.String.Format("Length of byte array must be 16, not {0}.", #bytes)
        System.throw(System.ArgumentException(message))
      end
      bytes = System.cast(ArrayByte, bytes:Clone())
      repeat
        local default = representation
        if default == 2 --[[GuidRepresentation.CSharpLegacy]] then
          if not System.BitConverter.IsLittleEndian then
            System.Array.Reverse(bytes, 0, 4)
            System.Array.Reverse(bytes, 4, 2)
            System.Array.Reverse(bytes, 6, 2)
          end
          break
        elseif default == 3 --[[GuidRepresentation.JavaLegacy]] then
          System.Array.Reverse(bytes, 0, 8)
          System.Array.Reverse(bytes, 8, 8)
          if System.BitConverter.IsLittleEndian then
            System.Array.Reverse(bytes, 0, 4)
            System.Array.Reverse(bytes, 4, 2)
            System.Array.Reverse(bytes, 6, 2)
          end
          break
        elseif default == 4 --[[GuidRepresentation.PythonLegacy]] or default == 1 --[[GuidRepresentation.Standard]] then
          if System.BitConverter.IsLittleEndian then
            System.Array.Reverse(bytes, 0, 4)
            System.Array.Reverse(bytes, 4, 2)
            System.Array.Reverse(bytes, 6, 2)
          end
          break
        elseif default == 0 --[[GuidRepresentation.Unspecified]] then
          System.throw(System.InvalidOperationException("Unable to convert byte array to Guid because GuidRepresentation is Unspecified."))
        else
          System.throw(System.new(MongoDBBson.BsonInternalException, 2, "Unexpected GuidRepresentation."))
        end
      until 1
      return System.Guid(bytes)
    end
    -- <summary>
    -- Converts a Guid to a byte array.
    -- </summary>
    -- <param name="guidRepresentation">The representation of the Guid in the byte array.</param>
    -- <returns>A byte array.</returns>
    ToBytes = function (guid, guidRepresentation)
      local bytes = System.cast(ArrayByte, guid:ToByteArray():Clone())
      repeat
        local default = guidRepresentation
        if default == 2 --[[GuidRepresentation.CSharpLegacy]] then
          if not System.BitConverter.IsLittleEndian then
            System.Array.Reverse(bytes, 0, 4)
            System.Array.Reverse(bytes, 4, 2)
            System.Array.Reverse(bytes, 6, 2)
          end
          break
        elseif default == 3 --[[GuidRepresentation.JavaLegacy]] then
          if System.BitConverter.IsLittleEndian then
            System.Array.Reverse(bytes, 0, 4)
            System.Array.Reverse(bytes, 4, 2)
            System.Array.Reverse(bytes, 6, 2)
          end
          System.Array.Reverse(bytes, 0, 8)
          System.Array.Reverse(bytes, 8, 8)
          break
        elseif default == 4 --[[GuidRepresentation.PythonLegacy]] or default == 1 --[[GuidRepresentation.Standard]] then
          if System.BitConverter.IsLittleEndian then
            System.Array.Reverse(bytes, 0, 4)
            System.Array.Reverse(bytes, 4, 2)
            System.Array.Reverse(bytes, 6, 2)
          end
          break
        elseif default == 0 --[[GuidRepresentation.Unspecified]] then
          System.throw(System.InvalidOperationException("Unable to convert Guid to byte array because GuidRepresentation is Unspecified."))
        else
          System.throw(System.ArgumentException("Invalid guidRepresentation: " .. guidRepresentation:EnumToString(MongoDBBson.GuidRepresentation) .. ".", "guidRepresentation" --[[nameof(guidRepresentation)]]))
        end
      until 1
      return bytes
    end
    return {
      FromBytes = FromBytes,
      ToBytes = ToBytes
    }
  end)
end)
