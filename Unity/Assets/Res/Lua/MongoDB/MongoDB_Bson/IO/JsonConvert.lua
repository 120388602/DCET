-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local SystemGlobalization = System.Globalization
local ArrayString = System.Array(System.String)
local MongoDBBson
System.import(function (out)
  MongoDBBson = MongoDB.Bson
end)
System.namespace("MongoDB.Bson.IO", function (namespace)
  -- <summary>
  -- Encodes and decodes scalar values to JSON compatible strings.
  -- </summary>
  namespace.class("JsonConvert", function (namespace)
    local ToBoolean, ToDateTime, ToDateTimeOffset, ToDecimal, ToDecimal128, ToDouble, ToInt16, ToInt32, 
    ToInt64, ToSingle, ToString, ToString1, ToString2, ToString3, ToString4, ToString5, 
    ToString6, ToString7, ToString8, ToString9, ToString10, ToString11, ToString12, ToUInt16, 
    ToUInt32, ToUInt64
    -- <summary>
    -- Converts a string to a Boolean.
    -- </summary>
    -- <returns>A Boolean.</returns>
    ToBoolean = function (value)
      return System.Boolean.Parse(value)
    end
    -- <summary>
    -- Converts a string to a DateTime.
    -- </summary>
    -- <returns>A DateTime.</returns>
    ToDateTime = function (value)
      local formats = ArrayString("yyyy-MM-ddK", "yyyy-MM-ddTHH:mm:ssK", "yyyy-MM-ddTHH:mm:ss.FFFFFFFK")
      local style = 80 --[[DateTimeStyles.AdjustToUniversal | DateTimeStyles.AssumeUniversal]]
      return System.DateTime.ParseExact(value, formats, SystemGlobalization.DateTimeFormatInfo.getInvariantInfo(), style)
    end
    -- <summary>
    -- Converts a string to a DateTimeOffset.
    -- </summary>
    -- <returns> A DateTimeOffset.</returns>
    ToDateTimeOffset = function (value)
      return System.DateTimeOffset.ParseExact(value, "yyyy-MM-ddTHH:mm:ss.FFFFFFFK", SystemGlobalization.DateTimeFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a string to a Decimal.
    -- </summary>
    -- <returns>A Decimal.</returns>
    ToDecimal = function (value)
      return System.Double.Parse(value, SystemGlobalization.NumberFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a string to a <see cref="Decimal128"/>.
    -- </summary>
    -- <returns>A <see cref="Decimal128"/>.</returns>
    ToDecimal128 = function (value)
      return MongoDBBson.Decimal128.Parse(value)
    end
    -- <summary>
    -- Converts a string to a Double.
    -- </summary>
    -- <returns>A Double.</returns>
    ToDouble = function (value)
      return System.Double.Parse(value, SystemGlobalization.NumberFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a string to an Int16.
    -- </summary>
    -- <returns>An Int16.</returns>
    ToInt16 = function (value)
      return System.Int16.Parse(value)
    end
    -- <summary>
    -- Converts a string to an Int32.
    -- </summary>
    -- <returns>An Int32.</returns>
    ToInt32 = function (value)
      return System.Int32.Parse(value)
    end
    -- <summary>
    -- Converts a string to an Int64.
    -- </summary>
    -- <returns>An Int64.</returns>
    ToInt64 = function (value)
      return System.Int64.Parse(value)
    end
    -- <summary>
    -- Converts a string to a Single.
    -- </summary>
    -- <returns>A Single.</returns>
    ToSingle = function (value)
      return System.Single.Parse(value, SystemGlobalization.NumberFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a Boolean to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString = function (value)
      return value and "true" or "false"
    end
    -- <summary>
    -- Converts a DateTime to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString1 = function (value)
      return value:ToString("yyyy-MM-ddTHH:mm:ss.FFFFFFFK", SystemGlobalization.DateTimeFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a DateTimeOffset to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString2 = function (value)
      return value:ToString("yyyy-MM-ddTHH:mm:ss.FFFFFFFK", SystemGlobalization.DateTimeFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a Decimal to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString3 = function (value)
      return value:ToString("G", SystemGlobalization.NumberFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a <see cref="Decimal128"/> to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString4 = function (value)
      return value:ToString()
    end
    -- <summary>
    -- Converts a Double to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString5 = function (value)
      return value:ToString("G17", SystemGlobalization.NumberFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts a Single to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString6 = function (value)
      return value:ToString("R", SystemGlobalization.NumberFormatInfo.getInvariantInfo())
    end
    -- <summary>
    -- Converts an Int32 to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString7 = function (value)
      return value:ToString()
    end
    -- <summary>
    -- Converts an Int64 to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString8 = function (value)
      return value:ToString()
    end
    -- <summary>
    -- Converts an Int16 to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString9 = function (value)
      return value:ToString()
    end
    -- <summary>
    -- Converts a UInt32 to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString10 = function (value)
      return value:ToString()
    end
    -- <summary>
    -- Converts a UInt64 to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString11 = function (value)
      return value:ToString()
    end
    -- <summary>
    -- Converts a UInt16 to a string.
    -- </summary>
    -- <returns>A string.</returns>
    ToString12 = function (value)
      return value:ToString()
    end
    -- <summary>
    -- Converts a string to a UInt16.
    -- </summary>
    -- <returns>A UInt16.</returns>
    ToUInt16 = function (value)
      return System.UInt16.Parse(value)
    end
    -- <summary>
    -- Converts a string to a UInt32.
    -- </summary>
    -- <returns>A UInt32.</returns>
    ToUInt32 = function (value)
      return System.UInt32.Parse(value)
    end
    -- <summary>
    -- Converts a string to a UInt64.
    -- </summary>
    -- <returns>A UInt64.</returns>
    ToUInt64 = function (value)
      return System.UInt64.Parse(value)
    end
    return {
      ToBoolean = ToBoolean,
      ToDateTime = ToDateTime,
      ToDateTimeOffset = ToDateTimeOffset,
      ToDecimal = ToDecimal,
      ToDecimal128 = ToDecimal128,
      ToDouble = ToDouble,
      ToInt16 = ToInt16,
      ToInt32 = ToInt32,
      ToInt64 = ToInt64,
      ToSingle = ToSingle,
      ToString = ToString,
      ToString1 = ToString1,
      ToString2 = ToString2,
      ToString3 = ToString3,
      ToString4 = ToString4,
      ToString5 = ToString5,
      ToString6 = ToString6,
      ToString7 = ToString7,
      ToString8 = ToString8,
      ToString9 = ToString9,
      ToString10 = ToString10,
      ToString11 = ToString11,
      ToString12 = ToString12,
      ToUInt16 = ToUInt16,
      ToUInt32 = ToUInt32,
      ToUInt64 = ToUInt64,
      __metadata__ = function (out)
        return {
          methods = {
            { "ToString", 0x18E, ToString10, System.UInt32, System.String, System.CLSCompliantAttribute(false) },
            { "ToString", 0x18E, ToString11, System.UInt64, System.String, System.CLSCompliantAttribute(false) },
            { "ToString", 0x18E, ToString12, System.UInt16, System.String, System.CLSCompliantAttribute(false) },
            { "ToUInt16", 0x18E, ToUInt16, System.String, System.UInt16, System.CLSCompliantAttribute(false) },
            { "ToUInt32", 0x18E, ToUInt32, System.String, System.UInt32, System.CLSCompliantAttribute(false) },
            { "ToUInt64", 0x18E, ToUInt64, System.String, System.UInt64, System.CLSCompliantAttribute(false) }
          }
        }
      end
    }
  end)
end)
