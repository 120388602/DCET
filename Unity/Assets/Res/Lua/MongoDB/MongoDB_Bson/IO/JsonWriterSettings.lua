-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local SystemText = System.Text
local MongoDBBsonIO
System.import(function (out)
  MongoDBBsonIO = MongoDB.Bson.IO
end)
System.namespace("MongoDB.Bson.IO", function (namespace)
  -- <summary>
  -- Represents settings for a JsonWriter.
  -- </summary>
  namespace.class("JsonWriterSettings", function (namespace)
    local __defaults, getDefaults, setDefaults, getEncoding, setEncoding, getIndent, setIndent, getIndentChars, 
    setIndentChars, getNewLineChars, setNewLineChars, getOutputMode, setOutputMode, getShellVersion, setShellVersion, Clone1, 
    CloneImplementation, class, __ctor__
    -- <summary>
    -- Initializes a new instance of the JsonWriterSettings class.
    -- </summary>
    __ctor__ = function (this)
      this._encoding = SystemText.Encoding.getUTF8()
      MongoDBBsonIO.BsonWriterSettings.__ctor__[1](this)
    end
    getDefaults = function ()
      if __defaults == nil then
        __defaults = class()
      end
      return __defaults
    end
    setDefaults = function (value)
      __defaults = value
    end
    getEncoding = function (this)
      return this._encoding
    end
    setEncoding = function (this, value)
      if this:getIsFrozen() then
        System.throw(System.InvalidOperationException("JsonWriterSettings is frozen."))
      end
      this._encoding = value
    end
    getIndent = function (this)
      return this._indent
    end
    setIndent = function (this, value)
      if this:getIsFrozen() then
        System.throw(System.InvalidOperationException("JsonWriterSettings is frozen."))
      end
      this._indent = value
    end
    getIndentChars = function (this)
      return this._indentChars
    end
    setIndentChars = function (this, value)
      if this:getIsFrozen() then
        System.throw(System.InvalidOperationException("JsonWriterSettings is frozen."))
      end
      this._indentChars = value
    end
    getNewLineChars = function (this)
      return this._newLineChars
    end
    setNewLineChars = function (this, value)
      if this:getIsFrozen() then
        System.throw(System.InvalidOperationException("JsonWriterSettings is frozen."))
      end
      this._newLineChars = value
    end
    getOutputMode = function (this)
      return this._outputMode
    end
    setOutputMode = function (this, value)
      if this:getIsFrozen() then
        System.throw(System.InvalidOperationException("JsonWriterSettings is frozen."))
      end
      this._outputMode = value
    end
    getShellVersion = function (this)
      return this._shellVersion
    end
    setShellVersion = function (this, value)
      if this:getIsFrozen() then
        System.throw(System.InvalidOperationException("JsonWriterSettings is frozen."))
      end
      this._shellVersion = value
    end
    -- <summary>
    -- Creates a clone of the settings.
    -- </summary>
    Clone1 = function (this)
      return System.cast(class, this:CloneImplementation())
    end
    -- <summary>
    -- Creates a clone of the settings.
    -- </summary>
    CloneImplementation = function (this)
      local default = class()
      setEncoding(default, this._encoding)
      default:setGuidRepresentation(this:getGuidRepresentation())
      setIndent(default, this._indent)
      setIndentChars(default, this._indentChars)
      default:setMaxSerializationDepth(this:getMaxSerializationDepth())
      setNewLineChars(default, this._newLineChars)
      setOutputMode(default, this._outputMode)
      setShellVersion(default, this._shellVersion)
      local clone = default
      return clone
    end
    class = {
      base = function (out)
        return {
          out.MongoDB.Bson.IO.BsonWriterSettings
        }
      end,
      _indent = false,
      _indentChars = "  ",
      _newLineChars = "\r\n",
      _outputMode = 1 --[[JsonOutputMode.Shell]],
      getDefaults = getDefaults,
      setDefaults = setDefaults,
      getEncoding = getEncoding,
      setEncoding = setEncoding,
      getIndent = getIndent,
      setIndent = setIndent,
      getIndentChars = getIndentChars,
      setIndentChars = setIndentChars,
      getNewLineChars = getNewLineChars,
      setNewLineChars = setNewLineChars,
      getOutputMode = getOutputMode,
      setOutputMode = setOutputMode,
      getShellVersion = getShellVersion,
      setShellVersion = setShellVersion,
      Clone1 = Clone1,
      CloneImplementation = CloneImplementation,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "__defaults", 0x9, class },
            { "_encoding", 0x1, System.Text.Encoding },
            { "_indent", 0x1, System.Boolean },
            { "_indentChars", 0x1, System.String },
            { "_newLineChars", 0x1, System.String },
            { "_outputMode", 0x1, System.Int32 },
            { "_shellVersion", 0x1, System.Version }
          },
          properties = {
            { "Defaults", 0x10E, class, getDefaults, setDefaults },
            { "Encoding", 0x106, System.Text.Encoding, getEncoding, setEncoding, System.ObsoleteAttribute("Set the Encoding when you create a StreamWriter instead (this property is ignored).") },
            { "Indent", 0x106, System.Boolean, getIndent, setIndent },
            { "IndentChars", 0x106, System.String, getIndentChars, setIndentChars },
            { "NewLineChars", 0x106, System.String, getNewLineChars, setNewLineChars },
            { "OutputMode", 0x106, System.Int32, getOutputMode, setOutputMode },
            { "ShellVersion", 0x106, System.Version, getShellVersion, setShellVersion }
          },
          class = { 0x6, System.SerializableAttribute() }
        }
      end
    }
    return class
  end)
end)
