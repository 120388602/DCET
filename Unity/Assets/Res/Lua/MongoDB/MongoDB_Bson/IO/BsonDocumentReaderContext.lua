-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBson
System.import(function (out)
  MongoDBBson = MongoDB.Bson
end)
System.namespace("MongoDB.Bson.IO", function (namespace)
  namespace.class("BsonDocumentReaderContext", function (namespace)
    local getArray, getContextType, getDocument, getIndex, setIndex, Clone, TryGetNextElement, TryGetNextValue, 
    PopContext, class, __ctor1__, __ctor2__, __ctor3__
    __ctor1__ = function (this, parentContext, contextType, array)
      this._parentContext = parentContext
      this._contextType = contextType
      this._array = array
    end
    __ctor2__ = function (this, parentContext, contextType, document)
      this._parentContext = parentContext
      this._contextType = contextType
      this._document = document
    end
    __ctor3__ = function (this, parentContext, contextType, document, array, index)
      this._parentContext = parentContext
      this._contextType = contextType
      this._document = document
      this._array = array
      this._index = index
    end
    getArray = function (this)
      return this._array
    end
    getContextType = function (this)
      return this._contextType
    end
    getDocument = function (this)
      return this._document
    end
    getIndex = function (this)
      return this._index
    end
    setIndex = function (this, value)
      this._index = value
    end
    -- <summary>
    -- Creates a clone of the context.
    -- </summary>
    Clone = function (this)
      return System.new(class, 3, this._parentContext, this._contextType, this._document, this._array, this._index)
    end
    TryGetNextElement = function (this, element)
      if this._index < this._document:getElementCount() then
        local default = this._index
        this._index = default + 1
        element = this._document:GetElement(default)
        return true, element
      else
        element = System.default(MongoDBBson.BsonElement)
        return false, element
      end
    end
    TryGetNextValue = function (this, value)
      if this._index < this._array:getCount() then
        local default = this._index
        this._index = default + 1
        value = this._array:get(default)
        return true, value
      else
        value = nil
        return false, value
      end
    end
    PopContext = function (this)
      return this._parentContext
    end
    class = {
      _contextType = 0,
      _index = 0,
      getArray = getArray,
      getContextType = getContextType,
      getDocument = getDocument,
      getIndex = getIndex,
      setIndex = setIndex,
      Clone = Clone,
      TryGetNextElement = TryGetNextElement,
      TryGetNextValue = TryGetNextValue,
      PopContext = PopContext,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__
      }
    }
    return class
  end)
end)
