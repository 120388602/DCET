-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBsonIO
System.import(function (out)
  MongoDBBsonIO = MongoDB.Bson.IO
end)
System.namespace("MongoDB.Bson.IO", function (namespace)
  -- <summary>
  -- Represents a UTF8 name decoder.
  -- </summary>
  namespace.class("Utf8NameDecoder", function (namespace)
    local __instance, getInstance, Decode, Inform, class, static
    static = function (this)
      __instance = class()
    end
    getInstance = function ()
      return __instance
    end
    -- <summary>
    -- Decodes the name.
    -- </summary>
    -- <param name="encoding">The encoding.</param>
    -- <returns>
    -- The name.
    -- </returns>
    Decode = function (this, stream, encoding)
      local utf8 = stream:ReadCStringBytes()
      return MongoDBBsonIO.Utf8Helper.DecodeUtf8String(utf8:getArray(), utf8:getOffset(), utf8:getCount(), encoding)
    end
    -- <summary>
    -- Informs the decoder of an already decoded name (so the decoder can change state if necessary).
    -- </summary>
    Inform = function (this, name)
    end
    class = {
      base = function (out)
        return {
          out.MongoDB.Bson.IO.INameDecoder
        }
      end,
      getInstance = getInstance,
      Decode = Decode,
      Inform = Inform,
      static = static
    }
    return class
  end)
end)
