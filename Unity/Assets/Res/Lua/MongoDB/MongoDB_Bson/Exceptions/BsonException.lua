-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
System.namespace("MongoDB.Bson", function (namespace)
  -- <summary>
  -- Represents a BSON exception.
  -- </summary>
  namespace.class("BsonException", function (namespace)
    local __ctor1__, __ctor2__, __ctor3__, __ctor4__, __ctor5__
    -- <summary>
    -- Initializes a new instance of the BsonException class.
    -- </summary>
    __ctor1__ = function (this)
      System.Exception.__ctor__(this)
    end
    -- <summary>
    -- Initializes a new instance of the BsonException class.
    -- </summary>
    __ctor2__ = function (this, message)
      System.Exception.__ctor__(this, message)
    end
    -- <summary>
    -- Initializes a new instance of the BsonException class.
    -- </summary>
    -- <param name="innerException">The inner exception.</param>
    __ctor3__ = function (this, message, innerException)
      System.Exception.__ctor__(this, message, innerException)
    end
    -- <summary>
    -- Initializes a new instance of the BsonException class.
    -- </summary>
    -- <param name="args">One or more args for the error message.</param>
    __ctor4__ = function (this, format, args)
      System.Exception.__ctor__(this, System.String.Format(format, args))
    end
    -- <summary>
    -- Initializes a new instance of the BsonException class (this overload used by deserialization).
    -- </summary>
    -- <param name="context">The StreamingContext.</param>
    __ctor5__ = function (this, info, context)
      System.Exception.__ctor__(this, info, context)
    end
    return {
      base = function (out, this)
        local base = System.Exception
        this.__tostring = base.__tostring
        return {
          base
        }
      end,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__,
        __ctor4__,
        __ctor5__
      },
      __metadata__ = function (out)
        return {
          class = { 0x6, System.SerializableAttribute() }
        }
      end
    }
  end)
end)
