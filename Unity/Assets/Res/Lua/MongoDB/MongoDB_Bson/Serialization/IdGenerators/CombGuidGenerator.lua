-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
System.namespace("MongoDB.Bson.Serialization.IdGenerators", function (namespace)
  -- <summary>
  -- Represents an Id generator for Guids using the COMB algorithm.
  -- </summary>
  namespace.class("CombGuidGenerator", function (namespace)
    local __instance, getInstance, GenerateId, IsEmpty, NewCombGuid, class, static
    static = function (this)
      __instance = class()
    end
    getInstance = function ()
      return __instance
    end
    -- <summary>
    -- Generates an Id for a document.
    -- </summary>
    -- <param name="document">The document.</param>
    -- <returns>An Id.</returns>
    GenerateId = function (this, container, document)
      local guid = System.Guid.NewGuid()
      local timestamp = System.DateTime.getUtcNow()
      return NewCombGuid(this, guid, timestamp)
    end
    -- <summary>
    -- Tests whether an Id is empty.
    -- </summary>
    -- <returns>True if the Id is empty.</returns>
    IsEmpty = function (this, id)
      return id == nil or System.Guid.op_Equality(System.cast(System.Guid, id), System.Guid.Empty)
    end
    -- <summary>
    -- Create a new CombGuid from a given Guid and timestamp.
    -- </summary>
    -- <param name="timestamp">The timestamp.</param>
    -- <returns>A new CombGuid created by combining the base Guid with the timestamp.</returns>
    NewCombGuid = function (this, guid, timestamp)
      -- note: Guids generated by CombGuidGenerator are only considered ascending by SQL Server which compares Guids in an unusual way
      -- to generate Guids considered ascending by MongoDB use the AscendingGuidGenerator

      local baseDate = System.DateTime(1900, 1, 1, 0, 0, 0, 0, 1 --[[DateTimeKind.Utc]])
      local days = System.toUInt16((timestamp - baseDate):getDays())
      local timeTicks = System.toInt32(System.div(timestamp:getTimeOfDay():getTicks() * 300, 10000000 --[[TimeSpan.TicksPerSecond]]))
      -- convert from .NET resolution to SQL Server resolution

      -- replace last 6 bytes of a new Guid with 2 bytes from days and 4 bytes from time of day
      -- see: The Cost of GUIDs as Primary Keys by Jimmy Nilson
      -- at: http://www.informit.com/articles/article.aspx?p=25862&seqNum=7

      local bytes = guid:ToByteArray()

      System.Array.Copy(System.BitConverter.GetBytesFromInt16(days), 0, bytes, 10, 2)
      System.Array.Copy(System.BitConverter.GetBytesFromInt32(timeTicks), 0, bytes, 12, 4)
      if System.BitConverter.IsLittleEndian then
        System.Array.Reverse(bytes, 10, 2)
        System.Array.Reverse(bytes, 12, 4)
      end

      return System.Guid(bytes)
    end
    class = {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.IIdGenerator
        }
      end,
      getInstance = getInstance,
      GenerateId = GenerateId,
      IsEmpty = IsEmpty,
      NewCombGuid = NewCombGuid,
      static = static
    }
    return class
  end)
end)
