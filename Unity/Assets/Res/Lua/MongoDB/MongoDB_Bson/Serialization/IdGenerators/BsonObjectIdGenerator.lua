-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBson
System.import(function (out)
  MongoDBBson = MongoDB.Bson
end)
System.namespace("MongoDB.Bson.Serialization.IdGenerators", function (namespace)
  -- <summary>
  -- Represents an Id generator for BsonObjectIds.
  -- </summary>
  namespace.class("BsonObjectIdGenerator", function (namespace)
    local __instance, getInstance, GenerateId, IsEmpty, class, static
    static = function (this)
      __instance = class()
    end
    getInstance = function ()
      return __instance
    end
    -- <summary>
    -- Generates an Id for a document.
    -- </summary>
    -- <param name="document">The document.</param>
    -- <returns>An Id.</returns>
    GenerateId = function (this, container, document)
      return MongoDBBson.BsonObjectId(MongoDBBson.ObjectId.GenerateNewId())
    end
    -- <summary>
    -- Tests whether an Id is empty.
    -- </summary>
    -- <returns>True if the Id is empty.</returns>
    IsEmpty = function (this, id)
      return id == nil or (System.cast(MongoDBBson.BsonValue, id)):getIsBsonNull() or MongoDBBson.ObjectId.op_Equality((System.cast(MongoDBBson.BsonObjectId, id)):getValue(), MongoDBBson.ObjectId.getEmpty())
    end
    class = {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.IIdGenerator
        }
      end,
      getInstance = getInstance,
      GenerateId = GenerateId,
      IsEmpty = IsEmpty,
      static = static
    }
    return class
  end)
end)
