-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBsonSerialization
local MongoDBAttributes
local MongoDBOptions
System.import(function (out)
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
  MongoDBAttributes = MongoDB.Bson.Serialization.Attributes
  MongoDBOptions = MongoDB.Bson.Serialization.Options
end)
System.namespace("MongoDB.Bson.Serialization.Attributes", function (namespace)
  -- <summary>
  -- Specifies the external representation and related options for this field or property.
  -- </summary>
  namespace.class("BsonRepresentationAttribute", function (namespace)
    local getRepresentation, getAllowOverflow, setAllowOverflow, getAllowTruncation, setAllowTruncation, Apply1, __ctor__
    -- <summary>
    -- Initializes a new instance of the BsonRepresentationAttribute class.
    -- </summary>
    __ctor__ = function (this, representation)
      MongoDBAttributes.BsonSerializationOptionsAttribute.__ctor__(this)
      this._representation = representation
    end
    getRepresentation = function (this)
      return this._representation
    end
    getAllowOverflow = function (this)
      return this._allowOverflow
    end
    setAllowOverflow = function (this, value)
      this._allowOverflow = value
    end
    getAllowTruncation = function (this)
      return this._allowTruncation
    end
    setAllowTruncation = function (this, value)
      this._allowTruncation = value
    end
    -- <summary>
    -- Reconfigures the specified serializer by applying this attribute to it.
    -- </summary>
    -- <returns>A reconfigured serializer.</returns>
    Apply1 = function (this, serializer)
      local representationConfigurable = System.as(serializer, MongoDBBsonSerialization.IRepresentationConfigurable)
      if representationConfigurable ~= nil then
        local reconfiguredSerializer = representationConfigurable:WithRepresentation1(this._representation)

        local converterConfigurable = System.as(reconfiguredSerializer, MongoDBBsonSerialization.IRepresentationConverterConfigurable)
        if converterConfigurable ~= nil then
          local converter = MongoDBOptions.RepresentationConverter(this._allowOverflow, this._allowTruncation)
          reconfiguredSerializer = converterConfigurable:WithConverter1(converter)
        end

        return reconfiguredSerializer
      end

      -- for backward compatibility representations of Array and Document are mapped to DictionaryRepresentations if possible
      local dictionaryRepresentationConfigurable = System.as(serializer, MongoDBBsonSerialization.IDictionaryRepresentationConfigurable)
      if dictionaryRepresentationConfigurable ~= nil then
        if this._representation == 4 --[[BsonType.Array]] or this._representation == 3 --[[BsonType.Document]] then
          local dictionaryRepresentation = (this._representation == 4 --[[BsonType.Array]]) and 1 --[[DictionaryRepresentation.ArrayOfArrays]] or 0 --[[DictionaryRepresentation.Document]]
          return dictionaryRepresentationConfigurable:WithDictionaryRepresentation3(dictionaryRepresentation)
        end
      end

      return MongoDBAttributes.BsonSerializationOptionsAttribute.Apply1(this, serializer)
    end
    return {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute
        }
      end,
      _representation = 0,
      _allowOverflow = false,
      _allowTruncation = false,
      getRepresentation = getRepresentation,
      getAllowOverflow = getAllowOverflow,
      setAllowOverflow = setAllowOverflow,
      getAllowTruncation = getAllowTruncation,
      setAllowTruncation = setAllowTruncation,
      Apply1 = Apply1,
      __ctor__ = __ctor__
    }
  end)
end)
