-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local SystemReflection = System.Reflection
local MongoDBBsonSerialization
System.import(function (out)
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
end)
System.namespace("MongoDB.Bson.Serialization.Attributes", function (namespace)
  -- <summary>
  -- Specifies the type of the serializer to use for a class.
  -- </summary>
  namespace.class("BsonSerializerAttribute", function (namespace)
    local getSerializerType, setSerializerType, Apply, CreateSerializer, __ctor1__, __ctor2__
    -- <summary>
    -- Initializes a new instance of the BsonSerializerAttribute class.
    -- </summary>
    __ctor1__ = function (this)
      System.Attribute.__ctor__(this)
    end
    -- <summary>
    -- Initializes a new instance of the BsonSerializerAttribute class.
    -- </summary>
    __ctor2__ = function (this, serializerType)
      System.Attribute.__ctor__(this)
      this._serializerType = serializerType
    end
    getSerializerType = function (this)
      return this._serializerType
    end
    setSerializerType = function (this, value)
      this._serializerType = value
    end
    -- <summary>
    -- Applies a modification to the member map.
    -- </summary>
    Apply = function (this, memberMap)
      local serializer = CreateSerializer(this, memberMap:getMemberType())
      memberMap:SetSerializer(serializer)
    end
    -- <summary>
    -- Creates a serializer for a type based on the serializer type specified by the attribute.
    -- </summary>
    -- <returns>A serializer for the type.</returns>
    CreateSerializer = function (this, type)
      local typeInfo = SystemReflection.IntrospectionExtensions.GetTypeInfo(type)
      if typeInfo:getContainsGenericParameters() then
        local message = "Cannot create a serializer because the type to serialize is an open generic type."
        System.throw(System.InvalidOperationException(message))
      end

      local serializerTypeInfo = SystemReflection.IntrospectionExtensions.GetTypeInfo(this._serializerType)
      if serializerTypeInfo:getContainsGenericParameters() and not typeInfo:getIsGenericType() then
        local message = "Cannot create a serializer because the serializer type is an open generic type and the type to serialize is not generic."
        System.throw(System.InvalidOperationException(message))
      end

      if serializerTypeInfo:getContainsGenericParameters() then
        local genericArguments = typeInfo:GetGenericArguments()
        local closedSerializerType = this._serializerType:MakeGenericType(genericArguments)
        return System.cast(MongoDBBsonSerialization.IBsonSerializer, System.Activator.CreateInstance(closedSerializerType))
      else
        return System.cast(MongoDBBsonSerialization.IBsonSerializer, System.Activator.CreateInstance(this._serializerType))
      end
    end
    return {
      base = function (out)
        return {
          System.Attribute,
          out.MongoDB.Bson.Serialization.IBsonMemberMapAttribute
        }
      end,
      getSerializerType = getSerializerType,
      setSerializerType = setSerializerType,
      Apply = Apply,
      CreateSerializer = CreateSerializer,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      }
    }
  end)
end)
