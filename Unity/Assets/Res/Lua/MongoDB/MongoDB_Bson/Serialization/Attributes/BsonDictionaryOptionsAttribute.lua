-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBsonSerialization
local MongoDBAttributes
System.import(function (out)
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
  MongoDBAttributes = MongoDB.Bson.Serialization.Attributes
end)
System.namespace("MongoDB.Bson.Serialization.Attributes", function (namespace)
  -- <summary>
  -- Specifies serialization options for a Dictionary field or property.
  -- </summary>
  namespace.class("BsonDictionaryOptionsAttribute", function (namespace)
    local getRepresentation, setRepresentation, Apply1, __ctor1__, __ctor2__
    -- <summary>
    -- Initializes a new instance of the BsonDictionaryOptionsAttribute class.
    -- </summary>
    __ctor1__ = function (this)
      MongoDBAttributes.BsonSerializationOptionsAttribute.__ctor__(this)
    end
    -- <summary>
    -- Initializes a new instance of the BsonDictionaryOptionsAttribute class.
    -- </summary>
    __ctor2__ = function (this, representation)
      MongoDBAttributes.BsonSerializationOptionsAttribute.__ctor__(this)
      this._representation = representation
    end
    getRepresentation = function (this)
      return this._representation
    end
    setRepresentation = function (this, value)
      this._representation = value
    end
    -- <summary>
    -- Reconfigures the specified serializer by applying this attribute to it.
    -- </summary>
    -- <returns>A reconfigured serializer.</returns>
    Apply1 = function (this, serializer)
      local dictionaryRepresentationConfigurable = System.as(serializer, MongoDBBsonSerialization.IDictionaryRepresentationConfigurable)
      if dictionaryRepresentationConfigurable ~= nil then
        return dictionaryRepresentationConfigurable:WithDictionaryRepresentation3(this._representation)
      end

      return MongoDBAttributes.BsonSerializationOptionsAttribute.Apply1(this, serializer)
    end
    return {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute
        }
      end,
      _representation = 0 --[[DictionaryRepresentation.Document]],
      getRepresentation = getRepresentation,
      setRepresentation = setRepresentation,
      Apply1 = Apply1,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      }
    }
  end)
end)
