-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local SystemGlobalization = System.Globalization
local SystemNet = System.Net
local SystemReflection = System.Reflection
local ArrayByte = System.Array(System.Byte)
local ArrayType = System.Array(System.Type)
local DictTypeType = System.Dictionary(System.Type, System.Type)
local MongoDBBson
local MongoDBSerializers
System.import(function (out)
  MongoDBBson = MongoDB.Bson
  MongoDBSerializers = MongoDB.Bson.Serialization.Serializers
end)
System.namespace("MongoDB.Bson.Serialization", function (namespace)
  -- <summary>
  -- Provides serializers for primitive types.
  -- </summary>
  namespace.class("PrimitiveSerializationProvider", function (namespace)
    local __serializersTypes, GetSerializer1, static
    static = function (this)
      local default = DictTypeType()
      default:AddKeyValue(System.typeof(System.Boolean), System.typeof(MongoDBSerializers.BooleanSerializer))
      default:AddKeyValue(System.typeof(System.Byte), System.typeof(MongoDBSerializers.ByteSerializer))
      default:AddKeyValue(System.typeof(ArrayByte), System.typeof(MongoDBSerializers.ByteArraySerializer))
      default:AddKeyValue(System.typeof(System.Char), System.typeof(MongoDBSerializers.CharSerializer))
      default:AddKeyValue(System.typeof(SystemGlobalization.CultureInfo), System.typeof(MongoDBSerializers.CultureInfoSerializer))
      default:AddKeyValue(System.typeof(System.DateTime), System.typeof(MongoDBSerializers.DateTimeSerializer))
      default:AddKeyValue(System.typeof(System.DateTimeOffset), System.typeof(MongoDBSerializers.DateTimeOffsetSerializer))
      default:AddKeyValue(System.typeof(System.Double), System.typeof(MongoDBSerializers.DecimalSerializer))
      default:AddKeyValue(System.typeof(MongoDBBson.Decimal128), System.typeof(MongoDBSerializers.Decimal128Serializer))
      default:AddKeyValue(System.typeof(System.Double), System.typeof(MongoDBSerializers.DoubleSerializer))
      default:AddKeyValue(System.typeof(System.Guid), System.typeof(MongoDBSerializers.GuidSerializer))
      default:AddKeyValue(System.typeof(System.Int16), System.typeof(MongoDBSerializers.Int16Serializer))
      default:AddKeyValue(System.typeof(System.Int32), System.typeof(MongoDBSerializers.Int32Serializer))
      default:AddKeyValue(System.typeof(System.Int64), System.typeof(MongoDBSerializers.Int64Serializer))
      default:AddKeyValue(System.typeof(SystemNet.IPAddress), System.typeof(MongoDBSerializers.IPAddressSerializer))
      default:AddKeyValue(System.typeof(SystemNet.IPEndPoint), System.typeof(MongoDBSerializers.IPEndPointSerializer))
      default:AddKeyValue(System.typeof(System.KeyValuePair), System.typeof(MongoDBSerializers.KeyValuePairSerializer_2))
      default:AddKeyValue(System.typeof(System.Nullable), System.typeof(MongoDBSerializers.NullableSerializer_1))
      default:AddKeyValue(System.typeof(System.Object), System.typeof(MongoDBSerializers.ObjectSerializer))
      default:AddKeyValue(System.typeof(MongoDBBson.ObjectId), System.typeof(MongoDBSerializers.ObjectIdSerializer))
      default:AddKeyValue(System.typeof(System.SByte), System.typeof(MongoDBSerializers.SByteSerializer))
      default:AddKeyValue(System.typeof(System.Single), System.typeof(MongoDBSerializers.SingleSerializer))
      default:AddKeyValue(System.typeof(System.String), System.typeof(MongoDBSerializers.StringSerializer))
      default:AddKeyValue(System.typeof(System.TimeSpan), System.typeof(MongoDBSerializers.TimeSpanSerializer))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_1))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_2))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_3))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_4))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_5))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_6))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_7))
      default:AddKeyValue(System.typeof(System.Tuple), System.typeof(MongoDBSerializers.TupleSerializer_8))
      default:AddKeyValue(System.typeof(System.UInt16), System.typeof(MongoDBSerializers.UInt16Serializer))
      default:AddKeyValue(System.typeof(System.UInt32), System.typeof(MongoDBSerializers.UInt32Serializer))
      default:AddKeyValue(System.typeof(System.UInt64), System.typeof(MongoDBSerializers.UInt64Serializer))
      default:AddKeyValue(System.typeof(System.Uri), System.typeof(MongoDBSerializers.UriSerializer))
      default:AddKeyValue(System.typeof(System.Version), System.typeof(MongoDBSerializers.VersionSerializer))
      __serializersTypes = default
    end
    GetSerializer1 = function (this, type, serializerRegistry)
      if type == nil then
        System.throw(System.ArgumentNullException("type"))
      end
      local typeInfo = SystemReflection.IntrospectionExtensions.GetTypeInfo(type)
      if typeInfo:getIsGenericType() and typeInfo:getContainsGenericParameters() then
        local message = System.String.Format("Generic type {0} has unassigned type parameters.", MongoDBBson.BsonUtils.GetFriendlyTypeName(type))
        System.throw(System.ArgumentException(message, "type"))
      end

      local serializerType
      local default
      default, serializerType = __serializersTypes:TryGetValue(type)
      if default then
        return this:CreateSerializer1(serializerType, serializerRegistry)
      end

      if typeInfo:getIsGenericType() and not typeInfo:getContainsGenericParameters() then
        local serializerTypeDefinition
        local extern
        extern, serializerTypeDefinition = __serializersTypes:TryGetValue(type:GetGenericTypeDefinition())
        if extern then
          return this:CreateGenericSerializer1(serializerTypeDefinition, SystemReflection.IntrospectionExtensions.GetTypeInfo(type):GetGenericArguments(), serializerRegistry)
        end
      end

      if typeInfo:getIsEnum() then
        return this:CreateGenericSerializer1(System.typeof(MongoDBSerializers.EnumSerializer_1), ArrayType(type), serializerRegistry)
      end

      return nil
    end
    return {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.BsonSerializationProviderBase
        }
      end,
      GetSerializer1 = GetSerializer1,
      static = static
    }
  end)
end)
