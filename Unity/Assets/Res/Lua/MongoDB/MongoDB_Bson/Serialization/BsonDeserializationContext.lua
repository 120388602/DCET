-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBson
local MongoDBBsonSerialization
System.import(function (out)
  MongoDBBson = MongoDB.Bson
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
end)
System.namespace("MongoDB.Bson.Serialization", function (namespace)
  -- <summary>
  -- Represents all the contextual information needed by a serializer to deserialize a value.
  -- </summary>
  namespace.class("BsonDeserializationContext", function (namespace)
    local getAllowDuplicateElementNames, getDynamicArraySerializer, getDynamicDocumentSerializer, getReader, CreateRoot, With, class, __ctor__
    -- <summary>
    -- Represents a builder for a BsonDeserializationContext.
    -- </summary>
    namespace.class("Builder", function (namespace)
      local getAllowDuplicateElementNames, setAllowDuplicateElementNames, getDynamicArraySerializer, setDynamicArraySerializer, getDynamicDocumentSerializer, setDynamicDocumentSerializer, getReader, Build, 
      __ctor__
      __ctor__ = function (this, other, reader)
        if reader == nil then
          System.throw(System.ArgumentNullException("reader"))
        end

        this._reader = reader
        if other ~= nil then
          this._allowDuplicateElementNames = getAllowDuplicateElementNames(other)
          this._dynamicArraySerializer = getDynamicArraySerializer(other)
          this._dynamicDocumentSerializer = getDynamicDocumentSerializer(other)
        else
          this._dynamicArraySerializer = MongoDBBson.BsonDefaults.getDynamicArraySerializer()
          this._dynamicDocumentSerializer = MongoDBBson.BsonDefaults.getDynamicDocumentSerializer()
        end
      end
      getAllowDuplicateElementNames = function (this)
        return this._allowDuplicateElementNames
      end
      setAllowDuplicateElementNames = function (this, value)
        this._allowDuplicateElementNames = value
      end
      getDynamicArraySerializer = function (this)
        return this._dynamicArraySerializer
      end
      setDynamicArraySerializer = function (this, value)
        this._dynamicArraySerializer = value
      end
      getDynamicDocumentSerializer = function (this)
        return this._dynamicDocumentSerializer
      end
      setDynamicDocumentSerializer = function (this, value)
        this._dynamicDocumentSerializer = value
      end
      getReader = function (this)
        return this._reader
      end
      -- <summary>
      -- Builds the BsonDeserializationContext instance.
      -- </summary>
      Build = function (this)
        return MongoDBBsonSerialization.BsonDeserializationContext(this._reader, this._allowDuplicateElementNames, this._dynamicArraySerializer, this._dynamicDocumentSerializer)
      end
      return {
        _allowDuplicateElementNames = false,
        getAllowDuplicateElementNames = getAllowDuplicateElementNames,
        setAllowDuplicateElementNames = setAllowDuplicateElementNames,
        getDynamicArraySerializer = getDynamicArraySerializer,
        setDynamicArraySerializer = setDynamicArraySerializer,
        getDynamicDocumentSerializer = getDynamicDocumentSerializer,
        setDynamicDocumentSerializer = setDynamicDocumentSerializer,
        getReader = getReader,
        Build = Build,
        __ctor__ = __ctor__
      }
    end)
    __ctor__ = function (this, reader, allowDuplicateElementNames, dynamicArraySerializer, dynamicDocumentSerializer)
      this._reader = reader
      this._allowDuplicateElementNames = allowDuplicateElementNames
      this._dynamicArraySerializer = dynamicArraySerializer
      this._dynamicDocumentSerializer = dynamicDocumentSerializer
    end
    getAllowDuplicateElementNames = function (this)
      return this._allowDuplicateElementNames
    end
    getDynamicArraySerializer = function (this)
      return this._dynamicArraySerializer
    end
    getDynamicDocumentSerializer = function (this)
      return this._dynamicDocumentSerializer
    end
    getReader = function (this)
      return this._reader
    end
    -- <summary>
    -- Creates a root context.
    -- </summary>
    -- <param name="configurator">The configurator.</param>
    -- <returns>
    -- A root context.
    -- </returns>
    CreateRoot = function (reader, configurator)
      local builder = class.Builder(nil, reader)
      if configurator ~= nil then
        configurator(builder)
      end
      return builder:Build()
    end
    -- <summary>
    -- Creates a new context with some values changed.
    -- </summary>
    -- <returns>
    -- A new context.
    -- </returns>
    With = function (this, configurator)
      local builder = class.Builder(this, this._reader)
      if configurator ~= nil then
        configurator(builder)
      end
      return builder:Build()
    end
    class = {
      _allowDuplicateElementNames = false,
      getAllowDuplicateElementNames = getAllowDuplicateElementNames,
      getDynamicArraySerializer = getDynamicArraySerializer,
      getDynamicDocumentSerializer = getDynamicDocumentSerializer,
      getReader = getReader,
      CreateRoot = CreateRoot,
      With = With,
      __ctor__ = __ctor__
    }
    return class
  end)
end)
