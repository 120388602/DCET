-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBsonSerialization
System.import(function (out)
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
end)
System.namespace("MongoDB.Bson.Serialization.Serializers", function (namespace)
  -- <summary>
  -- Wraps a serializer and projects using a function.
  -- </summary>
  -- <typeparam name="TTo">The type of to.</typeparam>
  namespace.class("ProjectingDeserializer_2", function (namespace)
    return function (TFrom, TTo)
      local Deserialize, __ctor__
      -- <summary>
      -- Initializes a new instance of the <see cref="ProjectingDeserializer{TFrom, TTo}"/> class.
      -- </summary>
      -- <param name="projector">The projector.</param>
      __ctor__ = function (this, fromSerializer, projector)
        this._fromSerializer = fromSerializer
        this._projector = projector
      end
      -- <summary>
      -- Deserializes a value.
      -- </summary>
      -- <param name="args">The deserialization args.</param>
      -- <returns>A deserialized value.</returns>
      Deserialize = function (this, context, args)
        local from = MongoDBBsonSerialization.IBsonSerializerExtensions.Deserialize1(this._fromSerializer, context, TFrom)
        return this._projector(from, TFrom, TTo)
      end
      return {
        base = function (out)
          return {
            out.MongoDB.Bson.Serialization.Serializers.SerializerBase_1(TTo)
          }
        end,
        Deserialize = Deserialize,
        __ctor__ = __ctor__
      }
    end
  end)
end)
