-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBsonSerialization
System.import(function (out)
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
end)
System.namespace("MongoDB.Bson.Serialization.Serializers", function (namespace)
  -- <summary>
  -- Represents a serializer for nullable values.
  -- </summary>
  namespace.class("NullableSerializer_1", function (namespace)
    return function (T)
      local Deserialize, Serialize, WithSerializer, getChildSerializer, WithChildSerializer, class, __ctor1__, __ctor2__, 
      __ctor3__
      local IBsonSerializer_1T = MongoDB.Bson.Serialization.IBsonSerializer_1(T)
      local LazyIBsonSerializer_1T = System.Lazy(IBsonSerializer_1T)
      -- <summary>
      -- Initializes a new instance of the <see cref="NullableSerializer{T}"/> class.
      -- </summary>
      __ctor1__ = function (this)
        __ctor3__(this, MongoDBBsonSerialization.BsonSerializer.getSerializerRegistry())
      end
      -- <summary>
      -- Initializes a new instance of the <see cref="NullableSerializer{T}"/> class.
      -- </summary>
      __ctor2__ = function (this, serializer)
        if serializer == nil then
          System.throw(System.ArgumentNullException("serializer"))
        end

        this._lazySerializer = LazyIBsonSerializer_1T(function ()
          return serializer
        end)
      end
      -- <summary>
      -- Initializes a new instance of the <see cref="NullableSerializer{T}" /> class.
      -- </summary>
      __ctor3__ = function (this, serializerRegistry)
        if serializerRegistry == nil then
          System.throw(System.ArgumentNullException("serializerRegistry"))
        end

        this._lazySerializer = LazyIBsonSerializer_1T(function ()
          return serializerRegistry:GetSerializer1(T)
        end)
      end
      -- <summary>
      -- Deserializes a value.
      -- </summary>
      -- <param name="args">The deserialization args.</param>
      -- <returns>A deserialized value.</returns>
      Deserialize = function (this, context, args)
        local bsonReader = context:getReader()

        local bsonType = bsonReader:GetCurrentBsonType()
        if bsonType == 10 --[[BsonType.Null]] then
          bsonReader:ReadNull()
          return nil
        else
          return MongoDBBsonSerialization.IBsonSerializerExtensions.Deserialize1(this._lazySerializer:getValue(), context, T)
        end
      end
      -- <summary>
      -- Serializes a value.
      -- </summary>
      -- <param name="args">The serialization args.</param>
      -- <param name="value">The object.</param>
      Serialize = function (this, context, args, value)
        local bsonWriter = context:getWriter()

        if value == nil then
          bsonWriter:WriteNull()
        else
          MongoDBBsonSerialization.IBsonSerializerExtensions.Serialize1(this._lazySerializer:getValue(), context, System.Nullable.Value(value), T)
        end
      end
      -- <summary>
      -- Returns a serializer that has been reconfigured with the specified serializer.
      -- </summary>
      -- <returns>
      -- The reconfigured serializer.
      -- </returns>
      WithSerializer = function (this, serializer)
        if serializer == this._lazySerializer:getValue() then
          return this
        else
          return System.new(class, 2, serializer)
        end
      end
      getChildSerializer = function (this)
        return this._lazySerializer:getValue()
      end
      WithChildSerializer = function (this, childSerializer)
        return WithSerializer(this, System.cast(IBsonSerializer_1T, childSerializer))
      end
      class = {
        base = function (out)
          return {
            out.MongoDB.Bson.Serialization.Serializers.SerializerBase_1(System.Nullable(T)),
            out.MongoDB.Bson.Serialization.IChildSerializerConfigurable
          }
        end,
        Deserialize = Deserialize,
        Serialize = Serialize,
        WithSerializer = WithSerializer,
        getChildSerializer = getChildSerializer,
        WithChildSerializer = WithChildSerializer,
        __ctor__ = {
          __ctor1__,
          __ctor2__,
          __ctor3__
        }
      }
      return class
    end
  end)
end)
