-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
System.namespace("MongoDB.Bson.Serialization.Serializers", function (namespace)
  -- <summary>
  -- Represents an abstract base class for sealed class serializers.
  -- </summary>
  namespace.class("SealedClassSerializerBase_1", function (namespace)
    return function (TValue)
      local Deserialize, Serialize, DeserializeValue, SerializeValue
      -- <summary>
      -- Deserializes a value.
      -- </summary>
      -- <param name="args">The deserialization args.</param>
      -- <returns>A deserialized value.</returns>
      Deserialize = function (this, context, args)
        local bsonReader = context:getReader()
        if bsonReader:GetCurrentBsonType() == 10 --[[BsonType.Null]] then
          bsonReader:ReadNull()
          return nil
        else
          return this:DeserializeValue(context, args:__clone__())
        end
      end
      -- <summary>
      -- Serializes a value.
      -- </summary>
      -- <param name="args">The serialization args.</param>
      -- <param name="value">The value.</param>
      Serialize = function (this, context, args, value)
        if value == nil then
          local bsonWriter = context:getWriter()
          bsonWriter:WriteNull()
        else
          this:SerializeValue(context, args:__clone__(), value)
        end
      end
      -- <summary>
      -- Deserializes a class.
      -- </summary>
      -- <param name="args">The deserialization args.</param>
      -- <returns>A deserialized value.</returns>
      DeserializeValue = function (this, context, args)
        System.throw(this:CreateCannotBeDeserializedException())
      end
      -- <summary>
      -- Serializes a value of type {TValue}.
      -- </summary>
      -- <param name="args">The serialization args.</param>
      -- <param name="value">The value.</param>
      SerializeValue = function (this, context, args, value)
        System.throw(this:CreateCannotBeSerializedException())
      end
      return {
        base = function (out)
          return {
            out.MongoDB.Bson.Serialization.Serializers.SerializerBase_1(TValue)
          }
        end,
        Deserialize = Deserialize,
        Serialize = Serialize,
        DeserializeValue = DeserializeValue,
        SerializeValue = SerializeValue
      }
    end
  end)
end)
