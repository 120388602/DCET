-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local SystemGlobalization = System.Globalization
local MongoDBBsonIO
local MongoDBBsonSerialization
local MongoDBSerializers
local MongoDBSerializerHelper
System.import(function (out)
  MongoDBBsonIO = MongoDB.Bson.IO
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
  MongoDBSerializers = MongoDB.Bson.Serialization.Serializers
  MongoDBSerializerHelper = MongoDB.Bson.Serialization.Serializers.SerializerHelper
end)
System.namespace("MongoDB.Bson.Serialization.Serializers", function (namespace)
  -- <summary>
  -- Represents a serializer for CultureInfos.
  -- </summary>
  namespace.class("CultureInfoSerializer", function (namespace)
    local DeserializeValue, SerializeValue, __ctor__
    namespace.class("Flags", function (namespace)
      return {}
    end)
    -- <summary>
    -- Initializes a new instance of the CultureInfoSerializer class.
    -- </summary>
    __ctor__ = function (this)
      this._booleanSerializer = MongoDBSerializers.BooleanSerializer()
      this._helper = MongoDBSerializers.SerializerHelper(System.Array(MongoDBSerializerHelper.Member)(MongoDBSerializerHelper.Member("Name", 1 --[[Flags.Name]], false), MongoDBSerializerHelper.Member("UseUserOverride", 2 --[[Flags.UseUserOverride]], false)))
    end
    -- <summary>
    -- Deserializes a value.
    -- </summary>
    -- <param name="args">The deserialization args.</param>
    -- <returns>A deserialized value.</returns>
    DeserializeValue = function (this, context, args)
      local bsonReader = context:getReader()

      local bsonType = bsonReader:GetCurrentBsonType()
      repeat
        local default = bsonType
        if default == 3 --[[BsonType.Document]] then
          local name = nil
          local useUserOverride = true
          this._helper:DeserializeMembers(context, function (elementName, flag)
            repeat
              local default = flag
              if default == 1 --[[Flags.Name]] then
                name = bsonReader:ReadString()
                break
              elseif default == 2 --[[Flags.UseUserOverride]] then
                useUserOverride = MongoDBBsonSerialization.IBsonSerializerExtensions.Deserialize1(this._booleanSerializer, context, System.Boolean)
                break
              end
            until 1
          end)
          return SystemGlobalization.CultureInfo(name, useUserOverride)
        elseif default == 2 --[[BsonType.String]] then
          return SystemGlobalization.CultureInfo(bsonReader:ReadString())
        else
          System.throw(this:CreateCannotDeserializeFromBsonTypeException(bsonType))
        end
      until 1
    end
    -- <summary>
    -- Serializes a value.
    -- </summary>
    -- <param name="args">The serialization args.</param>
    -- <param name="value">The object.</param>
    SerializeValue = function (this, context, args, value)
      local bsonWriter = context:getWriter()

      local useUserOverride = value:getUseUserOverride()


      if useUserOverride then
        -- the default for UseUserOverride is true so we don't need to serialize it
        bsonWriter:WriteString(value:getName())
      else
        bsonWriter:WriteStartDocument()
        MongoDBBsonIO.IBsonWriterExtensions.WriteString(bsonWriter, "Name", value:getName())
        MongoDBBsonIO.IBsonWriterExtensions.WriteBoolean(bsonWriter, "UseUserOverride", useUserOverride)
        bsonWriter:WriteEndDocument()
      end
    end
    return {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.Serializers.ClassSerializerBase_1(System.Globalization.CultureInfo)
        }
      end,
      DeserializeValue = DeserializeValue,
      SerializeValue = SerializeValue,
      __ctor__ = __ctor__
    }
  end)
end)
