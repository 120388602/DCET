-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local Linq = System.Linq.Enumerable
local SystemReflection = System.Reflection
local ListObject = System.List(System.Object)
local ListString = System.List(System.String)
local ListMemberInfo = System.List(SystemReflection.MemberInfo)
local DictStringObject = System.Dictionary(System.String, System.Object)
local MongoDBBson
System.import(function (out)
  MongoDBBson = MongoDB.Bson
end)
System.namespace("MongoDB.Bson.Serialization", function (namespace)
  -- <summary>
  -- Represents a mapping to a delegate and its arguments.
  -- </summary>
  namespace.class("BsonCreatorMap", function (namespace)
    local getArguments, getClassMap, getDelegate, getElementNames, getMemberInfo, Freeze, HasDefaultValue, SetArguments, 
    SetArguments1, CreateInstance, GetExpectedArgumentsCount, IsSameMember, ThrowFrozenException, ThrowNotFrozenException, __ctor__
    -- <summary>
    -- Initializes a new instance of the BsonCreatorMap class.
    -- </summary>
    -- <param name="memberInfo">The member info (null if none).</param>
    -- <param name="delegate">The delegate.</param>
    __ctor__ = function (this, classMap, memberInfo, delegate)
      if classMap == nil then
        System.throw(System.ArgumentNullException("classMap"))
      end
      if delegate == nil then
        System.throw(System.ArgumentNullException("delegate"))
      end

      this._classMap = classMap
      this._memberInfo = memberInfo
      this._delegate = delegate
    end
    getArguments = function (this)
      return this._arguments
    end
    getClassMap = function (this)
      return this._classMap
    end
    getDelegate = function (this)
      return this._delegate
    end
    getElementNames = function (this)
      if not this._isFrozen then
        ThrowNotFrozenException(this)
      end
      return this._elementNames
    end
    getMemberInfo = function (this)
      return this._memberInfo
    end
    -- <summary>
    -- Freezes the creator map.
    -- </summary>
    Freeze = function (this)
      if not this._isFrozen then
        local allMemberMaps = this._classMap:getAllMemberMaps()

        local elementNames = ListString()
        local defaultValues = DictStringObject()

        local expectedArgumentsCount = GetExpectedArgumentsCount(this)
        if this._arguments ~= nil then
          if #this._arguments ~= expectedArgumentsCount then
            System.throw(System.new(MongoDBBson.BsonSerializationException, 2, "Creator map for class " .. this._classMap:getClassType():getFullName() .. " has " .. expectedArgumentsCount .. " arguments, not " .. #this._arguments .. "."))
          end

          for _, argument in System.each(this._arguments) do
            local memberMap = Linq.FirstOrDefault(allMemberMaps, function (m)
              return IsSameMember(this, m:getMemberInfo(), argument)
            end)
            if memberMap == nil then
              local message = System.String.Format("Member '{0}' is not mapped.", argument:getName())
              System.throw(System.new(MongoDBBson.BsonSerializationException, 2, message))
            end
            elementNames:Add(memberMap:getElementName())
            if memberMap:getIsDefaultValueSpecified() then
              defaultValues:AddKeyValue(memberMap:getElementName(), memberMap:getDefaultValue())
            end
          end
        else
          if expectedArgumentsCount ~= 0 then
            System.throw(System.new(MongoDBBson.BsonSerializationException, 2, "Creator map for class " .. this._classMap:getClassType():getFullName() .. " has " .. expectedArgumentsCount .. " arguments, but none are configured."))
          end
        end

        this._elementNames = elementNames
        this._defaultValues = defaultValues
        this._isFrozen = true
      end
    end
    -- <summary>
    -- Gets whether there is a default value for a missing element.
    -- </summary>
    -- <returns>True if there is a default value for element name; otherwise, false.</returns>
    HasDefaultValue = function (this, elementName)
      if not this._isFrozen then
        ThrowNotFrozenException(this)
      end
      return this._defaultValues:ContainsKey(elementName)
    end
    -- <summary>
    -- Sets the arguments for the creator map.
    -- </summary>
    -- <returns>The creator map.</returns>
    SetArguments = function (this, arguments)
      if arguments == nil then
        System.throw(System.ArgumentNullException("arguments"))
      end
      if this._isFrozen then
        ThrowFrozenException(this)
      end
      local argumentsList = Linq.ToList(arguments)
      -- only enumerate once

      local expectedArgumentsCount = GetExpectedArgumentsCount(this)
      if #argumentsList ~= expectedArgumentsCount then
        System.throw(System.ArgumentException("Creator map for class " .. this._classMap:getClassType():getFullName() .. " has " .. expectedArgumentsCount .. " arguments, not " .. #argumentsList .. ".", "arguments" --[[nameof(arguments)]]))
      end

      this._arguments = argumentsList
      return this
    end
    -- <summary>
    -- Sets the arguments for the creator map.
    -- </summary>
    -- <returns>The creator map.</returns>
    SetArguments1 = function (this, argumentNames)
      if argumentNames == nil then
        System.throw(System.ArgumentNullException("argumentNames"))
      end
      if this._isFrozen then
        ThrowFrozenException(this)
      end

      local classTypeInfo = SystemReflection.IntrospectionExtensions.GetTypeInfo(this._classMap:getClassType())
      local arguments = ListMemberInfo()
      for _, argumentName in System.each(argumentNames) do
        local bindingFlags = 52 --[[BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public]]
        local memberInfos = Linq.ToArray(Linq.Where(classTypeInfo:GetMembers(bindingFlags), function (m)
          return m:getName() == argumentName and (System.is(m, SystemReflection.FieldInfo) or System.is(m, SystemReflection.PropertyInfo))
        end))
        if #memberInfos == 0 then
          local message = System.String.Format("Class '{0}' does not have a member named '{1}'.", this._classMap:getClassType():getFullName(), argumentName)
          System.throw(System.new(MongoDBBson.BsonSerializationException, 2, message))
        elseif #memberInfos > 1 then
          local message = System.String.Format("Class '{0}' has more than one member named '{1}'.", this._classMap:getClassType():getFullName(), argumentName)
          System.throw(System.new(MongoDBBson.BsonSerializationException, 2, message))
        end
        arguments:Add(memberInfos:get(0))
      end

      SetArguments(this, arguments)
      return this
    end
    CreateInstance = function (this, values)
      local arguments = ListObject()

      -- get the values for the arguments to be passed to the creator delegate
      for _, elementName in System.each(this._elementNames) do
        local argument
        local default
        default, argument = values:TryGetValue(elementName)
        if default then
          values:RemoveKey(elementName)
        else
          local extern
          extern, argument = this._defaultValues:TryGetValue(elementName)
          if not extern then
            -- shouldn't happen unless there is a bug in ChooseBestCreator
            System.throw(MongoDBBson.BsonInternalException())
          end
        end
        arguments:Add(argument)
      end

      return this._delegate:DynamicInvoke(arguments:ToArray())
    end
    GetExpectedArgumentsCount = function (this)
      local constructorInfo = System.as(this._memberInfo, SystemReflection.ConstructorInfo)
      if SystemReflection.ConstructorInfo.op_Inequality(constructorInfo, nil) then
        return #constructorInfo:GetParameters()
      end

      local methodInfo = System.as(this._memberInfo, SystemReflection.MethodInfo)
      if methodInfo ~= nil then
        return #methodInfo:GetParameters()
      end

      local delegateParameters = SystemReflection.RuntimeReflectionExtensions.GetMethodInfo(this._delegate):GetParameters()
      if #delegateParameters == 0 then
        return 0
      else
        -- check if delegate is closed over its first parameter
        if this._delegate:getTarget() ~= nil and this._delegate:getTarget():GetType() == delegateParameters:get(0):getParameterType() then
          return #delegateParameters - 1
        else
          return #delegateParameters
        end
      end
    end
    IsSameMember = function (this, a, b)
      -- two MemberInfos refer to the same member if the Module and MetadataToken are equal
      return SystemReflection.Module.op_Equality(a:getModule(), b:getModule()) and a:getMetadataToken() == b:getMetadataToken()
    end
    ThrowFrozenException = function (this)
      System.throw(System.InvalidOperationException("BsonCreatorMap is frozen."))
    end
    ThrowNotFrozenException = function (this)
      System.throw(System.InvalidOperationException("BsonCreatorMap is not frozen."))
    end
    return {
      _isFrozen = false,
      getArguments = getArguments,
      getClassMap = getClassMap,
      getDelegate = getDelegate,
      getElementNames = getElementNames,
      getMemberInfo = getMemberInfo,
      Freeze = Freeze,
      HasDefaultValue = HasDefaultValue,
      SetArguments = SetArguments,
      SetArguments1 = SetArguments1,
      CreateInstance = CreateInstance,
      __ctor__ = __ctor__
    }
  end)
end)
