-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBBson
local MongoDBBsonSerialization
local MongoDBConventions
System.import(function (out)
  MongoDBBson = MongoDB.Bson
  MongoDBBsonSerialization = MongoDB.Bson.Serialization
  MongoDBConventions = MongoDB.Bson.Serialization.Conventions
end)
System.namespace("MongoDB.Bson.Serialization.Conventions", function (namespace)
  -- <summary>
  -- Represents a discriminator convention where the discriminator is provided by the class map of the actual type.
  -- </summary>
  namespace.class("ScalarDiscriminatorConvention", function (namespace)
    local GetDiscriminator, __ctor__
    -- <summary>
    -- Initializes a new instance of the ScalarDiscriminatorConvention class.
    -- </summary>
    __ctor__ = function (this, elementName)
      MongoDBConventions.StandardDiscriminatorConvention.__ctor__(this, elementName)
    end
    -- <summary>
    -- Gets the discriminator value for an actual type.
    -- </summary>
    -- <param name="actualType">The actual type.</param>
    -- <returns>The discriminator value.</returns>
    GetDiscriminator = function (this, nominalType, actualType)
      -- TODO: this isn't quite right, not all classes are serialized using a class map serializer
      local classMap = MongoDBBsonSerialization.BsonClassMap.LookupClassMap(actualType)
      return MongoDBBson.BsonValue.op_Implicit21(classMap:getDiscriminator())
    end
    return {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention
        }
      end,
      GetDiscriminator = GetDiscriminator,
      __ctor__ = __ctor__
    }
  end)
end)
