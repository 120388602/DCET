-- Generated by CSharp.lua Compiler
--[[ Copyright 2010-present MongoDB Inc.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
]]
local System = System
local MongoDBIdGenerators
local MongoDBSerializers
System.import(function (out)
  MongoDBIdGenerators = MongoDB.Bson.Serialization.IdGenerators
  MongoDBSerializers = MongoDB.Bson.Serialization.Serializers
end)
System.namespace("MongoDB.Bson.Serialization.Conventions", function (namespace)
  -- <summary>
  -- A convention that sets the id generator for a string member with a BSON representation of ObjectId.
  -- </summary>
  namespace.class("StringObjectIdIdGeneratorConvention", function (namespace)
    local PostProcess
    -- <summary>
    -- Applies a post processing modification to the class map.
    -- </summary>
    PostProcess = function (this, classMap)
      local idMemberMap = classMap:getIdMemberMap()
      if idMemberMap ~= nil then
        if idMemberMap:getIdGenerator() == nil then
          local stringSerializer = System.as(idMemberMap:GetSerializer(), MongoDBSerializers.StringSerializer)
          if stringSerializer ~= nil and stringSerializer:getRepresentation() == 7 --[[BsonType.ObjectId]] then
            idMemberMap:SetIdGenerator(MongoDBIdGenerators.StringObjectIdGenerator.getInstance())
          end
        end
      end
    end
    return {
      base = function (out)
        return {
          out.MongoDB.Bson.Serialization.Conventions.ConventionBase,
          out.MongoDB.Bson.Serialization.Conventions.IPostProcessingConvention
        }
      end,
      PostProcess = PostProcess
    }
  end)
end)
