-- Generated by CSharp.lua Compiler
local System = System
local DictInt32Object
System.import(function (out)
  DictInt32Object = System.Dictionary(System.Int32, System.Object)
end)
System.namespace("DCET", function (namespace)
  namespace.class("Env", function (namespace)
    local get, set, Get, Set, ContainKey, Remove, Add, GetEnumerator, 
    __ctor__
    __ctor__ = function (this)
      this.values = DictInt32Object()
    end
    get = function (this, key)
      return this.values:get(key)
    end
    set = function (this, key, value)
      if this.values == nil then
        this.values = DictInt32Object()
      end
      this.values:set(key, value)
    end
    Get = function (this, key, T)
      if this.values == nil or not this.values:ContainsKey(key) then
        return System.default(T)
      end
      local value = this.values:get(key)
      local default, extern = System.try(function ()
        return true, System.cast(T, value)
      end, function (default)
        if System.is(default, System.InvalidCastException) then
          local e = default
          System.throw(System.Exception("不能把" .. System.toString(value:GetType()) .. "转换为" .. System.toString(System.typeof(T)), e))
        else
          return 1, default
        end
      end)
      if default then
        return extern
      end
    end
    Set = function (this, key, obj)
      if this.values == nil then
        this.values = DictInt32Object()
      end
      this.values:set(key, obj)
    end
    ContainKey = function (this, key)
      if this.values == nil then
        return false
      end
      return this.values:ContainsKey(key)
    end
    Remove = function (this, key)
      if this.values == nil then
        return
      end
      this.values:RemoveKey(key)
      if this.values:getCount() == 0 then
        this.values = nil
      end
    end
    Add = function (this, key, value)
      if this.values == nil then
        this.values = DictInt32Object()
      end
      this.values:set(key, value)
    end
    GetEnumerator = function (this)
      return this.values:GetEnumerator()
    end
    return {
      get = get,
      set = set,
      Get = Get,
      Set = Set,
      ContainKey = ContainKey,
      Remove = Remove,
      Add = Add,
      GetEnumerator = GetEnumerator,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "values", 0x1, System.Dictionary(System.Int32, System.Object), out.MongoDB.Bson.Serialization.Attributes.BsonElementAttribute(), out.MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute() }
          }
        }
      end
    }
  end)
end)
