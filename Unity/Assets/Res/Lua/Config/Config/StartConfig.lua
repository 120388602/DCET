-- Generated by CSharp.lua Compiler
local System = System
local DCETHotfix = DCET.Hotfix
local DCETHotfix
local ListStartConfig
System.import(function (out)
  DCETHotfix = DCET.Hotfix
  ListStartConfig = System.List(DCETHotfix.StartConfig)
end)
System.namespace("DCET.Hotfix", function (namespace)
  namespace.class("StartConfig", function (namespace)
    local Add, Get, Remove, EndInit, __ctor__
    __ctor__ = function (this)
      this.List = ListStartConfig()
      DCETHotfix.Entity.__ctor__(this)
    end
    Add = function (this, startConfig)
      startConfig.parent = this
      this.List:Add(startConfig)
    end
    Get = function (this, id)
      for _, startConfig in System.each(this.List) do
        if startConfig.Id == id then
          return startConfig
        end
      end

      return nil
    end
    Remove = function (this, startConfig)
      this.List:Remove(startConfig)
    end
    EndInit = function (this)
      DCETHotfix.Entity.EndInit(this)

      for _, startConfig in System.each(this.List) do
        startConfig.parent = this
      end
    end
    return {
      base = function (out)
        return {
          out.DCET.Hotfix.Entity
        }
      end,
      SceneInstanceId = 0,
      Add = Add,
      Get = Get,
      Remove = Remove,
      EndInit = EndInit,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "SceneInstanceId", 0x6, System.Int64, out.MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute() }
          },
          class = { 0x6, out.DCET.Hotfix.HideInHierarchy(), out.DCET.Hotfix.NoObjectPool() }
        }
      end
    }
  end)
end)
