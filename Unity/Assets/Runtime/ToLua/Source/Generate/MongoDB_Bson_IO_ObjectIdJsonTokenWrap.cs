//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_IO_ObjectIdJsonTokenWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.IO.ObjectIdJsonToken), typeof(MongoDB.Bson.IO.JsonToken));
		L.RegFunction("New", _CreateMongoDB_Bson_IO_ObjectIdJsonToken);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ObjectIdValue", get_ObjectIdValue, null);
		L.RegFunction("getObjectIdValue", get_ObjectIdValue);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_IO_ObjectIdJsonToken(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				MongoDB.Bson.ObjectId arg1 = StackTraits<MongoDB.Bson.ObjectId>.Check(L, 2);
				MongoDB.Bson.IO.ObjectIdJsonToken obj = new MongoDB.Bson.IO.ObjectIdJsonToken(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.IO.ObjectIdJsonToken.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ObjectIdValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.ObjectIdJsonToken obj = (MongoDB.Bson.IO.ObjectIdJsonToken)o;
			MongoDB.Bson.ObjectId ret = obj.ObjectIdValue;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ObjectIdValue on a nil value");
		}
	}
}

