//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_Voxels_VoxelizeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.Voxels.Voxelize), typeof(System.Object));
		L.RegFunction("BuildContours", BuildContours);
		L.RegFunction("MergeContours", MergeContours);
		L.RegFunction("SimplifyContour", SimplifyContour);
		L.RegFunction("WalkContour", WalkContour);
		L.RegFunction("GetCornerHeight", GetCornerHeight);
		L.RegFunction("RemoveDegenerateSegments", RemoveDegenerateSegments);
		L.RegFunction("CalcAreaOfPolygon2D", CalcAreaOfPolygon2D);
		L.RegFunction("Ileft", Ileft);
		L.RegFunction("Diagonal", Diagonal);
		L.RegFunction("InCone", InCone);
		L.RegFunction("Left", Left);
		L.RegFunction("LeftOn", LeftOn);
		L.RegFunction("Collinear", Collinear);
		L.RegFunction("Area2", Area2);
		L.RegFunction("Xorb", Xorb);
		L.RegFunction("IntersectProp", IntersectProp);
		L.RegFunction("Prev", Prev);
		L.RegFunction("Next", Next);
		L.RegFunction("BuildPolyMesh", BuildPolyMesh);
		L.RegFunction("CompactSpanToVector", CompactSpanToVector);
		L.RegFunction("VectorToIndex", VectorToIndex);
		L.RegFunction("Init", Init);
		L.RegFunction("VoxelizeInput", VoxelizeInput);
		L.RegFunction("DebugDrawSpans", DebugDrawSpans);
		L.RegFunction("BuildCompactField", BuildCompactField);
		L.RegFunction("BuildVoxelConnections", BuildVoxelConnections);
		L.RegFunction("VoxelToWorld", VoxelToWorld);
		L.RegFunction("VoxelToWorldInt3", VoxelToWorldInt3);
		L.RegFunction("ErodeWalkableArea", ErodeWalkableArea);
		L.RegFunction("BuildDistanceField", BuildDistanceField);
		L.RegFunction("FilterLowHeightSpans", FilterLowHeightSpans);
		L.RegFunction("FilterLedges", FilterLedges);
		L.RegFunction("ExpandRegions", ExpandRegions);
		L.RegFunction("FloodRegion", FloodRegion);
		L.RegFunction("MarkRectWithRegion", MarkRectWithRegion);
		L.RegFunction("CalculateDistanceField", CalculateDistanceField);
		L.RegFunction("BoxBlur", BoxBlur);
		L.RegFunction("BuildRegions", BuildRegions);
		L.RegFunction("FilterSmallRegions", FilterSmallRegions);
		L.RegFunction("New", _CreatePathfinding_Voxels_Voxelize);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("inputMeshes", get_inputMeshes, set_inputMeshes);
		L.RegVar("voxelWalkableClimb", get_voxelWalkableClimb, null);
		L.RegVar("voxelWalkableHeight", get_voxelWalkableHeight, null);
		L.RegVar("cellSize", get_cellSize, null);
		L.RegVar("cellHeight", get_cellHeight, null);
		L.RegVar("minRegionSize", get_minRegionSize, set_minRegionSize);
		L.RegVar("borderSize", get_borderSize, set_borderSize);
		L.RegVar("maxEdgeLength", get_maxEdgeLength, set_maxEdgeLength);
		L.RegVar("maxSlope", get_maxSlope, set_maxSlope);
		L.RegVar("relevantGraphSurfaceMode", get_relevantGraphSurfaceMode, set_relevantGraphSurfaceMode);
		L.RegVar("forcedBounds", get_forcedBounds, set_forcedBounds);
		L.RegVar("voxelArea", get_voxelArea, set_voxelArea);
		L.RegVar("countourSet", get_countourSet, set_countourSet);
		L.RegVar("width", get_width, set_width);
		L.RegVar("depth", get_depth, set_depth);
		L.RegConstant("NotConnected", 63);
		L.RegConstant("RC_CONTOUR_TESS_WALL_EDGES", 1);
		L.RegConstant("RC_CONTOUR_TESS_AREA_EDGES", 2);
		L.RegConstant("RC_CONTOUR_TESS_TILE_EDGES", 4);
		L.RegVar("transformVoxel2Graph", get_transformVoxel2Graph, null);
		L.RegFunction("gettransformVoxel2Graph", get_transformVoxel2Graph);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_Voxels_Voxelize(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6)
			{
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				float arg5 = (float)LuaDLL.luaL_checknumber(L, 6);
				Pathfinding.Voxels.Voxelize obj = new Pathfinding.Voxels.Voxelize(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.Voxels.Voxelize.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildContours(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			Pathfinding.Voxels.VoxelContourSet arg2 = (Pathfinding.Voxels.VoxelContourSet)ToLua.CheckObject<Pathfinding.Voxels.VoxelContourSet>(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			obj.BuildContours(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MergeContours(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Voxels.VoxelContour arg0 = StackTraits<Pathfinding.Voxels.VoxelContour>.Check(L, 1);
			Pathfinding.Voxels.VoxelContour arg1 = StackTraits<Pathfinding.Voxels.VoxelContour>.Check(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
			bool o = Pathfinding.Voxels.Voxelize.MergeContours(ref arg0, ref arg1, arg2, arg3);
			LuaDLL.lua_pushboolean(L, o);
			ToLua.PushValue(L, arg0);
			ToLua.PushValue(L, arg1);
			return 3;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SimplifyContour(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			System.Collections.Generic.List<int> arg1 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<int>));
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			obj.SimplifyContour(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WalkContour(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			ushort[] arg3 = ToLua.CheckNumberArray<ushort>(L, 5);
			System.Collections.Generic.List<int> arg4 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 6, typeof(System.Collections.Generic.List<int>));
			obj.WalkContour(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCornerHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
			int o = obj.GetCornerHeight(arg0, arg1, arg2, arg3, ref arg4);
			LuaDLL.lua_pushinteger(L, o);
			LuaDLL.lua_pushboolean(L, arg4);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDegenerateSegments(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			obj.RemoveDegenerateSegments(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalcAreaOfPolygon2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.CalcAreaOfPolygon2D(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Ileft(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int[] arg3 = ToLua.CheckNumberArray<int>(L, 4);
			int[] arg4 = ToLua.CheckNumberArray<int>(L, 5);
			int[] arg5 = ToLua.CheckNumberArray<int>(L, 6);
			bool o = Pathfinding.Voxels.Voxelize.Ileft(arg0, arg1, arg2, arg3, arg4, arg5);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Diagonal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int[] arg3 = ToLua.CheckNumberArray<int>(L, 4);
			int[] arg4 = ToLua.CheckNumberArray<int>(L, 5);
			bool o = Pathfinding.Voxels.Voxelize.Diagonal(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InCone(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int[] arg3 = ToLua.CheckNumberArray<int>(L, 4);
			int[] arg4 = ToLua.CheckNumberArray<int>(L, 5);
			bool o = Pathfinding.Voxels.Voxelize.InCone(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Left(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int[] arg3 = ToLua.CheckNumberArray<int>(L, 4);
			bool o = Pathfinding.Voxels.Voxelize.Left(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LeftOn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int[] arg3 = ToLua.CheckNumberArray<int>(L, 4);
			bool o = Pathfinding.Voxels.Voxelize.LeftOn(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Collinear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int[] arg3 = ToLua.CheckNumberArray<int>(L, 4);
			bool o = Pathfinding.Voxels.Voxelize.Collinear(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Area2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int[] arg3 = ToLua.CheckNumberArray<int>(L, 4);
			int o = Pathfinding.Voxels.Voxelize.Area2(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Xorb(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			bool o = Pathfinding.Voxels.Voxelize.Xorb(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntersectProp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
			int[] arg4 = ToLua.CheckNumberArray<int>(L, 5);
			bool o = Pathfinding.Voxels.Voxelize.IntersectProp(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Prev(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = Pathfinding.Voxels.Voxelize.Prev(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Next(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = Pathfinding.Voxels.Voxelize.Next(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildPolyMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			Pathfinding.Voxels.VoxelContourSet arg0 = (Pathfinding.Voxels.VoxelContourSet)ToLua.CheckObject<Pathfinding.Voxels.VoxelContourSet>(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			Pathfinding.Voxels.VoxelMesh arg2;
			obj.BuildPolyMesh(arg0, arg1, out arg2);
			ToLua.PushValue(L, arg2);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CompactSpanToVector(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Vector3 o = obj.CompactSpanToVector(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int VectorToIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			int arg1;
			int arg2;
			obj.VectorToIndex(arg0, out arg1, out arg2);
			LuaDLL.lua_pushinteger(L, arg1);
			LuaDLL.lua_pushinteger(L, arg2);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int VoxelizeInput(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			PF.GraphTransform arg0 = (PF.GraphTransform)ToLua.CheckObject<PF.GraphTransform>(L, 2);
			UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 3);
			obj.VoxelizeInput(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DebugDrawSpans(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			obj.DebugDrawSpans();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildCompactField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			obj.BuildCompactField();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildVoxelConnections(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			obj.BuildVoxelConnections();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int VoxelToWorld(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Vector3 o = obj.VoxelToWorld(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int VoxelToWorldInt3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			PF.Int3 arg0 = StackTraits<PF.Int3>.Check(L, 2);
			PF.Int3 o = obj.VoxelToWorldInt3(arg0);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ErodeWalkableArea(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ErodeWalkableArea(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildDistanceField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			obj.BuildDistanceField();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FilterLowHeightSpans(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.FilterLowHeightSpans(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FilterLedges(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			obj.FilterLedges(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExpandRegions(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 8);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			ushort[] arg2 = ToLua.CheckNumberArray<ushort>(L, 4);
			ushort[] arg3 = ToLua.CheckNumberArray<ushort>(L, 5);
			ushort[] arg4 = ToLua.CheckNumberArray<ushort>(L, 6);
			ushort[] arg5 = ToLua.CheckNumberArray<ushort>(L, 7);
			System.Collections.Generic.List<int> arg6 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 8, typeof(System.Collections.Generic.List<int>));
			ushort[] o = obj.ExpandRegions(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FloodRegion(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 9);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			uint arg3 = (uint)LuaDLL.luaL_checknumber(L, 5);
			ushort arg4 = (ushort)LuaDLL.luaL_checknumber(L, 6);
			ushort[] arg5 = ToLua.CheckNumberArray<ushort>(L, 7);
			ushort[] arg6 = ToLua.CheckNumberArray<ushort>(L, 8);
			System.Collections.Generic.List<int> arg7 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 9, typeof(System.Collections.Generic.List<int>));
			bool o = obj.FloodRegion(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MarkRectWithRegion(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			ushort arg4 = (ushort)LuaDLL.luaL_checknumber(L, 6);
			ushort[] arg5 = ToLua.CheckNumberArray<ushort>(L, 7);
			obj.MarkRectWithRegion(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalculateDistanceField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			ushort[] arg0 = ToLua.CheckNumberArray<ushort>(L, 2);
			ushort o = obj.CalculateDistanceField(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BoxBlur(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			ushort[] arg0 = ToLua.CheckNumberArray<ushort>(L, 2);
			ushort[] arg1 = ToLua.CheckNumberArray<ushort>(L, 3);
			ushort[] o = obj.BoxBlur(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BuildRegions(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			obj.BuildRegions();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FilterSmallRegions(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)ToLua.CheckObject<Pathfinding.Voxels.Voxelize>(L, 1);
			ushort[] arg0 = ToLua.CheckNumberArray<ushort>(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.FilterSmallRegions(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_inputMeshes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			System.Collections.Generic.List<Pathfinding.Voxels.RasterizationMesh> ret = obj.inputMeshes;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inputMeshes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_voxelWalkableClimb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int ret = obj.voxelWalkableClimb;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index voxelWalkableClimb on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_voxelWalkableHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			uint ret = obj.voxelWalkableHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index voxelWalkableHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cellSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			float ret = obj.cellSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cellHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			float ret = obj.cellHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minRegionSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int ret = obj.minRegionSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minRegionSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_borderSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int ret = obj.borderSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index borderSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxEdgeLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			float ret = obj.maxEdgeLength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxEdgeLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxSlope(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			float ret = obj.maxSlope;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxSlope on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_relevantGraphSurfaceMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			PF.RecastGraph.RelevantGraphSurfaceMode ret = obj.relevantGraphSurfaceMode;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index relevantGraphSurfaceMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_forcedBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			UnityEngine.Bounds ret = obj.forcedBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forcedBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_voxelArea(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			Pathfinding.Voxels.VoxelArea ret = obj.voxelArea;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index voxelArea on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_countourSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			Pathfinding.Voxels.VoxelContourSet ret = obj.countourSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index countourSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_width(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int ret = obj.width;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index width on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_depth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int ret = obj.depth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index depth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_transformVoxel2Graph(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			PF.GraphTransform ret = obj.transformVoxel2Graph;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transformVoxel2Graph on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_inputMeshes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			System.Collections.Generic.List<Pathfinding.Voxels.RasterizationMesh> arg0 = (System.Collections.Generic.List<Pathfinding.Voxels.RasterizationMesh>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Pathfinding.Voxels.RasterizationMesh>));
			obj.inputMeshes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inputMeshes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_minRegionSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.minRegionSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minRegionSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_borderSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.borderSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index borderSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxEdgeLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.maxEdgeLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxEdgeLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxSlope(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.maxSlope = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxSlope on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_relevantGraphSurfaceMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			PF.RecastGraph.RelevantGraphSurfaceMode arg0 = (PF.RecastGraph.RelevantGraphSurfaceMode)LuaDLL.luaL_checknumber(L, 2);
			obj.relevantGraphSurfaceMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index relevantGraphSurfaceMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_forcedBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			UnityEngine.Bounds arg0 = ToLua.ToBounds(L, 2);
			obj.forcedBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forcedBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_voxelArea(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			Pathfinding.Voxels.VoxelArea arg0 = (Pathfinding.Voxels.VoxelArea)ToLua.CheckObject<Pathfinding.Voxels.VoxelArea>(L, 2);
			obj.voxelArea = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index voxelArea on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_countourSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			Pathfinding.Voxels.VoxelContourSet arg0 = (Pathfinding.Voxels.VoxelContourSet)ToLua.CheckObject<Pathfinding.Voxels.VoxelContourSet>(L, 2);
			obj.countourSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index countourSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_width(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.width = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index width on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_depth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.Voxelize obj = (Pathfinding.Voxels.Voxelize)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.depth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index depth on a nil value");
		}
	}
}

