//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_Util_RetainedGizmosWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.Util.RetainedGizmos), typeof(System.Object));
		L.RegFunction("GetSingleFrameGizmoHelper", GetSingleFrameGizmoHelper);
		L.RegFunction("GetGizmoHelper", GetGizmoHelper);
		L.RegFunction("HasCachedMesh", HasCachedMesh);
		L.RegFunction("Draw", Draw);
		L.RegFunction("DrawExisting", DrawExisting);
		L.RegFunction("FinalizeDraw", FinalizeDraw);
		L.RegFunction("ClearCache", ClearCache);
		L.RegFunction("New", _CreatePathfinding_Util_RetainedGizmos);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("surfaceMaterial", get_surfaceMaterial, set_surfaceMaterial);
		L.RegVar("lineMaterial", get_lineMaterial, set_lineMaterial);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_Util_RetainedGizmos(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Pathfinding.Util.RetainedGizmos obj = new Pathfinding.Util.RetainedGizmos();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.Util.RetainedGizmos.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSingleFrameGizmoHelper(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 1);
			Pathfinding.Util.GraphGizmoHelper o = obj.GetSingleFrameGizmoHelper();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGizmoHelper(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 1);
			Pathfinding.Util.RetainedGizmos.Hasher arg0 = StackTraits<Pathfinding.Util.RetainedGizmos.Hasher>.Check(L, 2);
			Pathfinding.Util.GraphGizmoHelper o = obj.GetGizmoHelper(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasCachedMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 1);
			Pathfinding.Util.RetainedGizmos.Hasher arg0 = StackTraits<Pathfinding.Util.RetainedGizmos.Hasher>.Check(L, 2);
			bool o = obj.HasCachedMesh(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Draw(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 1);
			Pathfinding.Util.RetainedGizmos.Hasher arg0 = StackTraits<Pathfinding.Util.RetainedGizmos.Hasher>.Check(L, 2);
			bool o = obj.Draw(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawExisting(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 1);
			obj.DrawExisting();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FinalizeDraw(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 1);
			obj.FinalizeDraw();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearCache(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 1);
			obj.ClearCache();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_surfaceMaterial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)o;
			UnityEngine.Material ret = obj.surfaceMaterial;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index surfaceMaterial on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lineMaterial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)o;
			UnityEngine.Material ret = obj.lineMaterial;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lineMaterial on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_surfaceMaterial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.surfaceMaterial = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index surfaceMaterial on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lineMaterial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Util.RetainedGizmos obj = (Pathfinding.Util.RetainedGizmos)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.lineMaterial = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lineMaterial on a nil value");
		}
	}
}

