//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_GraphUpdateObjectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.GraphUpdateObject), typeof(System.Object));
		L.RegFunction("WillUpdateNode", WillUpdateNode);
		L.RegFunction("RevertFromBackup", RevertFromBackup);
		L.RegFunction("Apply", Apply);
		L.RegFunction("New", _CreatePathfinding_GraphUpdateObject);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("bounds", get_bounds, set_bounds);
		L.RegVar("requiresFloodFill", get_requiresFloodFill, set_requiresFloodFill);
		L.RegVar("updatePhysics", get_updatePhysics, set_updatePhysics);
		L.RegVar("resetPenaltyOnPhysics", get_resetPenaltyOnPhysics, set_resetPenaltyOnPhysics);
		L.RegVar("updateErosion", get_updateErosion, set_updateErosion);
		L.RegVar("nnConstraint", get_nnConstraint, set_nnConstraint);
		L.RegVar("addPenalty", get_addPenalty, set_addPenalty);
		L.RegVar("modifyWalkability", get_modifyWalkability, set_modifyWalkability);
		L.RegVar("setWalkability", get_setWalkability, set_setWalkability);
		L.RegVar("modifyTag", get_modifyTag, set_modifyTag);
		L.RegVar("setTag", get_setTag, set_setTag);
		L.RegVar("trackChangedNodes", get_trackChangedNodes, set_trackChangedNodes);
		L.RegVar("changedNodes", get_changedNodes, set_changedNodes);
		L.RegVar("shape", get_shape, set_shape);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_GraphUpdateObject(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Pathfinding.GraphUpdateObject obj = new Pathfinding.GraphUpdateObject();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				UnityEngine.Bounds arg0 = ToLua.ToBounds(L, 1);
				Pathfinding.GraphUpdateObject obj = new Pathfinding.GraphUpdateObject(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.GraphUpdateObject.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WillUpdateNode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)ToLua.CheckObject<Pathfinding.GraphUpdateObject>(L, 1);
			PF.GraphNode arg0 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 2);
			obj.WillUpdateNode(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RevertFromBackup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)ToLua.CheckObject<Pathfinding.GraphUpdateObject>(L, 1);
			obj.RevertFromBackup();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)ToLua.CheckObject<Pathfinding.GraphUpdateObject>(L, 1);
			PF.GraphNode arg0 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 2);
			obj.Apply(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			UnityEngine.Bounds ret = obj.bounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_requiresFloodFill(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.requiresFloodFill;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index requiresFloodFill on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updatePhysics(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.updatePhysics;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updatePhysics on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_resetPenaltyOnPhysics(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.resetPenaltyOnPhysics;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index resetPenaltyOnPhysics on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updateErosion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.updateErosion;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateErosion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_nnConstraint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			PF.NNConstraint ret = obj.nnConstraint;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index nnConstraint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_addPenalty(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			int ret = obj.addPenalty;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index addPenalty on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_modifyWalkability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.modifyWalkability;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index modifyWalkability on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_setWalkability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.setWalkability;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index setWalkability on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_modifyTag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.modifyTag;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index modifyTag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_setTag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			int ret = obj.setTag;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index setTag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_trackChangedNodes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool ret = obj.trackChangedNodes;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trackChangedNodes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_changedNodes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			System.Collections.Generic.List<PF.GraphNode> ret = obj.changedNodes;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index changedNodes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shape(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			Pathfinding.GraphUpdateShape ret = obj.shape;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shape on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			UnityEngine.Bounds arg0 = ToLua.ToBounds(L, 2);
			obj.bounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_requiresFloodFill(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.requiresFloodFill = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index requiresFloodFill on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updatePhysics(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.updatePhysics = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updatePhysics on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_resetPenaltyOnPhysics(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.resetPenaltyOnPhysics = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index resetPenaltyOnPhysics on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updateErosion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.updateErosion = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateErosion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_nnConstraint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			PF.NNConstraint arg0 = (PF.NNConstraint)ToLua.CheckObject<PF.NNConstraint>(L, 2);
			obj.nnConstraint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index nnConstraint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_addPenalty(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.addPenalty = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index addPenalty on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_modifyWalkability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.modifyWalkability = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index modifyWalkability on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_setWalkability(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setWalkability = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index setWalkability on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_modifyTag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.modifyTag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index modifyTag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_setTag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.setTag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index setTag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_trackChangedNodes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.trackChangedNodes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trackChangedNodes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_changedNodes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			System.Collections.Generic.List<PF.GraphNode> arg0 = (System.Collections.Generic.List<PF.GraphNode>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<PF.GraphNode>));
			obj.changedNodes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index changedNodes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shape(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GraphUpdateObject obj = (Pathfinding.GraphUpdateObject)o;
			Pathfinding.GraphUpdateShape arg0 = (Pathfinding.GraphUpdateShape)ToLua.CheckObject<Pathfinding.GraphUpdateShape>(L, 2);
			obj.shape = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shape on a nil value");
		}
	}
}

