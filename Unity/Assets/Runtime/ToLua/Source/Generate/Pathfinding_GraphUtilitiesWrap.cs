//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_GraphUtilitiesWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("GraphUtilities");
		L.RegFunction("GetContours", GetContours);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetContours(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				PF.NavGraph arg0 = (PF.NavGraph)ToLua.CheckObject<PF.NavGraph>(L, 1);
				System.Collections.Generic.List<UnityEngine.Vector3> o = Pathfinding.GraphUtilities.GetContours(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2)
			{
				PF.INavmesh arg0 = (PF.INavmesh)ToLua.CheckObject<PF.INavmesh>(L, 1);
				System.Action<System.Collections.Generic.List<PF.Int3>,bool> arg1 = (System.Action<System.Collections.Generic.List<PF.Int3>,bool>)ToLua.CheckDelegate<System.Action<System.Collections.Generic.List<PF.Int3>,bool>>(L, 2);
				Pathfinding.GraphUtilities.GetContours(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Pathfinding.GraphUtilities.GetContours");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

