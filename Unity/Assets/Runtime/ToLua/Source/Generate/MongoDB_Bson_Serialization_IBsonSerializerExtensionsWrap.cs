//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_IBsonSerializerExtensionsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("IBsonSerializerExtensions");
		L.RegFunction("Deserialize", Deserialize);
		L.RegFunction("Serialize", Serialize);
		L.RegFunction("ToBsonValue", ToBsonValue);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Deserialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.Serialization.IBsonSerializer arg0 = (MongoDB.Bson.Serialization.IBsonSerializer)ToLua.CheckObject<MongoDB.Bson.Serialization.IBsonSerializer>(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext arg1 = (MongoDB.Bson.Serialization.BsonDeserializationContext)ToLua.CheckObject<MongoDB.Bson.Serialization.BsonDeserializationContext>(L, 2);
			object o = MongoDB.Bson.Serialization.IBsonSerializerExtensions.Deserialize(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			MongoDB.Bson.Serialization.IBsonSerializer arg0 = (MongoDB.Bson.Serialization.IBsonSerializer)ToLua.CheckObject<MongoDB.Bson.Serialization.IBsonSerializer>(L, 1);
			MongoDB.Bson.Serialization.BsonSerializationContext arg1 = (MongoDB.Bson.Serialization.BsonSerializationContext)ToLua.CheckObject<MongoDB.Bson.Serialization.BsonSerializationContext>(L, 2);
			object arg2 = ToLua.ToVarObject(L, 3);
			MongoDB.Bson.Serialization.IBsonSerializerExtensions.Serialize(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToBsonValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.Serialization.IBsonSerializer arg0 = (MongoDB.Bson.Serialization.IBsonSerializer)ToLua.CheckObject<MongoDB.Bson.Serialization.IBsonSerializer>(L, 1);
			object arg1 = ToLua.ToVarObject(L, 2);
			MongoDB.Bson.BsonValue o = MongoDB.Bson.Serialization.IBsonSerializerExtensions.ToBsonValue(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

