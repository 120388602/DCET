//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_Attributes_BsonConstructorAttributeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute), typeof(System.Attribute));
		L.RegFunction("Apply", Apply);
		L.RegFunction("New", _CreateMongoDB_Bson_Serialization_Attributes_BsonConstructorAttribute);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ArgumentNames", get_ArgumentNames, null);
		L.RegFunction("getArgumentNames", get_ArgumentNames);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_Serialization_Attributes_BsonConstructorAttribute(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute obj = new MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (TypeChecker.CheckParamsType<string>(L, 1, count))
			{
				string[] arg0 = ToLua.ToParamsString(L, 1, count);
				MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute obj = new MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute)ToLua.CheckObject<MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute>(L, 1);
			MongoDB.Bson.Serialization.BsonCreatorMap arg0 = (MongoDB.Bson.Serialization.BsonCreatorMap)ToLua.CheckObject<MongoDB.Bson.Serialization.BsonCreatorMap>(L, 2);
			obj.Apply(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ArgumentNames(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute)o;
			string[] ret = obj.ArgumentNames;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ArgumentNames on a nil value");
		}
	}
}

