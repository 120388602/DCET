//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_Util_RetainedGizmos_BuilderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.Util.RetainedGizmos.Builder), typeof(System.Object));
		L.RegFunction("DrawMesh", DrawMesh);
		L.RegFunction("DrawWireCube", DrawWireCube);
		L.RegFunction("DrawLine", DrawLine);
		L.RegFunction("Submit", Submit);
		L.RegFunction("New", _CreatePathfinding_Util_RetainedGizmos_Builder);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_Util_RetainedGizmos_Builder(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Pathfinding.Util.RetainedGizmos.Builder obj = new Pathfinding.Util.RetainedGizmos.Builder();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.Util.RetainedGizmos.Builder.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Pathfinding.Util.RetainedGizmos.Builder obj = (Pathfinding.Util.RetainedGizmos.Builder)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos.Builder>(L, 1);
			Pathfinding.Util.RetainedGizmos arg0 = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 2);
			UnityEngine.Vector3[] arg1 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 3);
			System.Collections.Generic.List<int> arg2 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 4, typeof(System.Collections.Generic.List<int>));
			UnityEngine.Color[] arg3 = ToLua.CheckStructArray<UnityEngine.Color>(L, 5);
			obj.DrawMesh(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawWireCube(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Util.RetainedGizmos.Builder obj = (Pathfinding.Util.RetainedGizmos.Builder)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos.Builder>(L, 1);
			PF.GraphTransform arg0 = (PF.GraphTransform)ToLua.CheckObject<PF.GraphTransform>(L, 2);
			UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 3);
			UnityEngine.Color arg2 = ToLua.ToColor(L, 4);
			obj.DrawWireCube(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawLine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.Util.RetainedGizmos.Builder obj = (Pathfinding.Util.RetainedGizmos.Builder)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos.Builder>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			UnityEngine.Color arg2 = ToLua.ToColor(L, 4);
			obj.DrawLine(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Submit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.Util.RetainedGizmos.Builder obj = (Pathfinding.Util.RetainedGizmos.Builder)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos.Builder>(L, 1);
			Pathfinding.Util.RetainedGizmos arg0 = (Pathfinding.Util.RetainedGizmos)ToLua.CheckObject<Pathfinding.Util.RetainedGizmos>(L, 2);
			Pathfinding.Util.RetainedGizmos.Hasher arg1 = StackTraits<Pathfinding.Util.RetainedGizmos.Hasher>.Check(L, 3);
			obj.Submit(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

