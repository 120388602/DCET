//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PF_AstarDeserializerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("AstarDeserializer");
		L.RegFunction("DeserializeGraphs", DeserializeGraphs);
		L.RegFunction("DeserializeGraphsAdditive", DeserializeGraphsAdditive);
		L.RegFunction("DeserializeGraphsPartAdditive", DeserializeGraphsPartAdditive);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeGraphs(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
			PF.NavGraph[] o = PF.AstarDeserializer.DeserializeGraphs(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeGraphsAdditive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.NavGraph[] arg0 = ToLua.CheckObjectArray<PF.NavGraph>(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			PF.AstarDeserializer.DeserializeGraphsAdditive(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeGraphsPartAdditive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.NavGraph[] arg0 = ToLua.CheckObjectArray<PF.NavGraph>(L, 1);
			PF.AstarSerializer arg1 = (PF.AstarSerializer)ToLua.CheckObject<PF.AstarSerializer>(L, 2);
			PF.AstarDeserializer.DeserializeGraphsPartAdditive(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

