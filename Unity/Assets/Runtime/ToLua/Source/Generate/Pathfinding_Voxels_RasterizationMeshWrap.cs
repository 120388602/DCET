//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_Voxels_RasterizationMeshWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.Voxels.RasterizationMesh), typeof(System.Object));
		L.RegFunction("RecalculateBounds", RecalculateBounds);
		L.RegFunction("Pool", Pool);
		L.RegFunction("New", _CreatePathfinding_Voxels_RasterizationMesh);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("original", get_original, set_original);
		L.RegVar("area", get_area, set_area);
		L.RegVar("vertices", get_vertices, set_vertices);
		L.RegVar("triangles", get_triangles, set_triangles);
		L.RegVar("numVertices", get_numVertices, set_numVertices);
		L.RegVar("numTriangles", get_numTriangles, set_numTriangles);
		L.RegVar("bounds", get_bounds, set_bounds);
		L.RegVar("matrix", get_matrix, set_matrix);
		L.RegVar("pool", get_pool, set_pool);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_Voxels_RasterizationMesh(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Pathfinding.Voxels.RasterizationMesh obj = new Pathfinding.Voxels.RasterizationMesh();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 3)
			{
				UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 1);
				int[] arg1 = ToLua.CheckNumberArray<int>(L, 2);
				UnityEngine.Bounds arg2 = ToLua.ToBounds(L, 3);
				Pathfinding.Voxels.RasterizationMesh obj = new Pathfinding.Voxels.RasterizationMesh(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 4)
			{
				UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 1);
				int[] arg1 = ToLua.CheckNumberArray<int>(L, 2);
				UnityEngine.Bounds arg2 = ToLua.ToBounds(L, 3);
				UnityEngine.Matrix4x4 arg3 = StackTraits<UnityEngine.Matrix4x4>.Check(L, 4);
				Pathfinding.Voxels.RasterizationMesh obj = new Pathfinding.Voxels.RasterizationMesh(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.Voxels.RasterizationMesh.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RecalculateBounds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)ToLua.CheckObject<Pathfinding.Voxels.RasterizationMesh>(L, 1);
			obj.RecalculateBounds();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)ToLua.CheckObject<Pathfinding.Voxels.RasterizationMesh>(L, 1);
			obj.Pool();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_original(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.MeshFilter ret = obj.original;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index original on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_area(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int ret = obj.area;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index area on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_vertices(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.Vector3[] ret = obj.vertices;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vertices on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_triangles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int[] ret = obj.triangles;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index triangles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_numVertices(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int ret = obj.numVertices;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index numVertices on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_numTriangles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int ret = obj.numTriangles;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index numTriangles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.Bounds ret = obj.bounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_matrix(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.Matrix4x4 ret = obj.matrix;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index matrix on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			bool ret = obj.pool;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pool on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_original(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.MeshFilter arg0 = (UnityEngine.MeshFilter)ToLua.CheckObject(L, 2, typeof(UnityEngine.MeshFilter));
			obj.original = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index original on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_area(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.area = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index area on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_vertices(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 2);
			obj.vertices = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vertices on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_triangles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			obj.triangles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index triangles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_numVertices(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.numVertices = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index numVertices on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_numTriangles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.numTriangles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index numTriangles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.Bounds arg0 = ToLua.ToBounds(L, 2);
			obj.bounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_matrix(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			UnityEngine.Matrix4x4 arg0 = StackTraits<UnityEngine.Matrix4x4>.Check(L, 2);
			obj.matrix = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index matrix on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.RasterizationMesh obj = (Pathfinding.Voxels.RasterizationMesh)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.pool = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pool on a nil value");
		}
	}
}

