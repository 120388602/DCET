//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_BsonTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(MongoDB.Bson.BsonType));
		L.RegConstant("EndOfDocument", MongoDB.Bson.BsonType.EndOfDocument);
		L.RegConstant("Double", MongoDB.Bson.BsonType.Double);
		L.RegConstant("String", MongoDB.Bson.BsonType.String);
		L.RegConstant("Document", MongoDB.Bson.BsonType.Document);
		L.RegConstant("Array", MongoDB.Bson.BsonType.Array);
		L.RegConstant("Binary", MongoDB.Bson.BsonType.Binary);
		L.RegConstant("Undefined", MongoDB.Bson.BsonType.Undefined);
		L.RegConstant("ObjectId", MongoDB.Bson.BsonType.ObjectId);
		L.RegConstant("Boolean", MongoDB.Bson.BsonType.Boolean);
		L.RegConstant("DateTime", MongoDB.Bson.BsonType.DateTime);
		L.RegConstant("Null", MongoDB.Bson.BsonType.Null);
		L.RegConstant("RegularExpression", MongoDB.Bson.BsonType.RegularExpression);
		L.RegConstant("JavaScript", MongoDB.Bson.BsonType.JavaScript);
		L.RegConstant("Symbol", MongoDB.Bson.BsonType.Symbol);
		L.RegConstant("JavaScriptWithScope", MongoDB.Bson.BsonType.JavaScriptWithScope);
		L.RegConstant("Int32", MongoDB.Bson.BsonType.Int32);
		L.RegConstant("Timestamp", MongoDB.Bson.BsonType.Timestamp);
		L.RegConstant("Int64", MongoDB.Bson.BsonType.Int64);
		L.RegConstant("Decimal128", MongoDB.Bson.BsonType.Decimal128);
		L.RegConstant("MinKey", MongoDB.Bson.BsonType.MinKey);
		L.RegConstant("MaxKey", MongoDB.Bson.BsonType.MaxKey);
		L.EndEnum();
		TypeTraits<MongoDB.Bson.BsonType>.Check = CheckType;
		StackTraits<MongoDB.Bson.BsonType>.Push = Push;
	}

	static void Push(IntPtr L, MongoDB.Bson.BsonType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(MongoDB.Bson.BsonType), L, pos);
	}
}

