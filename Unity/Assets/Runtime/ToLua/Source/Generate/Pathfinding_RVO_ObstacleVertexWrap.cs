//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_RVO_ObstacleVertexWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.RVO.ObstacleVertex), typeof(System.Object));
		L.RegFunction("New", _CreatePathfinding_RVO_ObstacleVertex);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ignore", get_ignore, set_ignore);
		L.RegVar("position", get_position, set_position);
		L.RegVar("dir", get_dir, set_dir);
		L.RegVar("height", get_height, set_height);
		L.RegVar("layer", get_layer, set_layer);
		L.RegVar("next", get_next, set_next);
		L.RegVar("prev", get_prev, set_prev);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_RVO_ObstacleVertex(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Pathfinding.RVO.ObstacleVertex obj = new Pathfinding.RVO.ObstacleVertex();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.RVO.ObstacleVertex.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ignore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			bool ret = obj.ignore;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ignore on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			UnityEngine.Vector3 ret = obj.position;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index position on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			UnityEngine.Vector2 ret = obj.dir;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dir on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_height(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			float ret = obj.height;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index height on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_layer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			Pathfinding.RVO.RVOLayer ret = obj.layer;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index layer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_next(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			Pathfinding.RVO.ObstacleVertex ret = obj.next;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index next on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_prev(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			Pathfinding.RVO.ObstacleVertex ret = obj.prev;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prev on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ignore(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ignore = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ignore on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.position = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index position on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.dir = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dir on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_height(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.height = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index height on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_layer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			Pathfinding.RVO.RVOLayer arg0 = (Pathfinding.RVO.RVOLayer)LuaDLL.luaL_checknumber(L, 2);
			obj.layer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index layer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_next(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			Pathfinding.RVO.ObstacleVertex arg0 = (Pathfinding.RVO.ObstacleVertex)ToLua.CheckObject<Pathfinding.RVO.ObstacleVertex>(L, 2);
			obj.next = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index next on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_prev(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.RVO.ObstacleVertex obj = (Pathfinding.RVO.ObstacleVertex)o;
			Pathfinding.RVO.ObstacleVertex arg0 = (Pathfinding.RVO.ObstacleVertex)ToLua.CheckObject<Pathfinding.RVO.ObstacleVertex>(L, 2);
			obj.prev = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prev on a nil value");
		}
	}
}

