//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_IO_BsonReaderSettingsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.IO.BsonReaderSettings), typeof(System.Object));
		L.RegFunction("Clone", Clone);
		L.RegFunction("Freeze", Freeze);
		L.RegFunction("FrozenCopy", FrozenCopy);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("GuidRepresentation", get_GuidRepresentation, set_GuidRepresentation);
		L.RegFunction("getGuidRepresentation", get_GuidRepresentation);
		L.RegFunction("setGuidRepresentation", set_GuidRepresentation);
		L.RegVar("IsFrozen", get_IsFrozen, null);
		L.RegFunction("getIsFrozen", get_IsFrozen);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clone(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings obj = (MongoDB.Bson.IO.BsonReaderSettings)ToLua.CheckObject<MongoDB.Bson.IO.BsonReaderSettings>(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings o = obj.Clone();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Freeze(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings obj = (MongoDB.Bson.IO.BsonReaderSettings)ToLua.CheckObject<MongoDB.Bson.IO.BsonReaderSettings>(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings o = obj.Freeze();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FrozenCopy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings obj = (MongoDB.Bson.IO.BsonReaderSettings)ToLua.CheckObject<MongoDB.Bson.IO.BsonReaderSettings>(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings o = obj.FrozenCopy();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GuidRepresentation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings obj = (MongoDB.Bson.IO.BsonReaderSettings)o;
			MongoDB.Bson.GuidRepresentation ret = obj.GuidRepresentation;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GuidRepresentation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsFrozen(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings obj = (MongoDB.Bson.IO.BsonReaderSettings)o;
			bool ret = obj.IsFrozen;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsFrozen on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GuidRepresentation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.IO.BsonReaderSettings obj = (MongoDB.Bson.IO.BsonReaderSettings)o;
			MongoDB.Bson.GuidRepresentation arg0 = (MongoDB.Bson.GuidRepresentation)LuaDLL.luaL_checknumber(L, 2);
			obj.GuidRepresentation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GuidRepresentation on a nil value");
		}
	}
}

