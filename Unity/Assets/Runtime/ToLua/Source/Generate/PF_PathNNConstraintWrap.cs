//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PF_PathNNConstraintWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PF.PathNNConstraint), typeof(PF.NNConstraint));
		L.RegFunction("SetStart", SetStart);
		L.RegFunction("New", _CreatePF_PathNNConstraint);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Default", get_Default, null);
		L.RegFunction("getDefault", get_Default);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePF_PathNNConstraint(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				PF.PathNNConstraint obj = new PF.PathNNConstraint();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: PF.PathNNConstraint.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.PathNNConstraint obj = (PF.PathNNConstraint)ToLua.CheckObject<PF.PathNNConstraint>(L, 1);
			PF.GraphNode arg0 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 2);
			obj.SetStart(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Default(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, PF.PathNNConstraint.Default);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

