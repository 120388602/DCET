//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_UpdateContextWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.UpdateContext), typeof(System.Object));
		L.RegFunction("Begin", Begin);
		L.RegFunction("End", End);
		L.RegFunction("EnterClipping", EnterClipping);
		L.RegFunction("LeaveClipping", LeaveClipping);
		L.RegFunction("New", _CreateFairyGUI_UpdateContext);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("clipped", get_clipped, set_clipped);
		L.RegVar("clipInfo", get_clipInfo, set_clipInfo);
		L.RegVar("renderingOrder", get_renderingOrder, set_renderingOrder);
		L.RegVar("batchingDepth", get_batchingDepth, set_batchingDepth);
		L.RegVar("rectMaskDepth", get_rectMaskDepth, set_rectMaskDepth);
		L.RegVar("stencilReferenceValue", get_stencilReferenceValue, set_stencilReferenceValue);
		L.RegVar("alpha", get_alpha, set_alpha);
		L.RegVar("grayed", get_grayed, set_grayed);
		L.RegVar("current", get_current, set_current);
		L.RegVar("frameId", get_frameId, set_frameId);
		L.RegVar("working", get_working, set_working);
		L.RegVar("OnBegin", get_OnBegin, set_OnBegin);
		L.RegVar("OnEnd", get_OnEnd, set_OnEnd);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_UpdateContext(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.UpdateContext obj = new FairyGUI.UpdateContext();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.UpdateContext.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Begin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)ToLua.CheckObject<FairyGUI.UpdateContext>(L, 1);
			obj.Begin();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int End(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)ToLua.CheckObject<FairyGUI.UpdateContext>(L, 1);
			obj.End();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterClipping(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)ToLua.CheckObject<FairyGUI.UpdateContext>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			System.Nullable<UnityEngine.Rect> arg1 = ToLua.CheckNullable<UnityEngine.Rect>(L, 3);
			System.Nullable<UnityEngine.Vector4> arg2 = ToLua.CheckNullable<UnityEngine.Vector4>(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.EnterClipping(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LeaveClipping(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)ToLua.CheckObject<FairyGUI.UpdateContext>(L, 1);
			obj.LeaveClipping();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clipped(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			bool ret = obj.clipped;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipped on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clipInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			FairyGUI.UpdateContext.ClipInfo ret = obj.clipInfo;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_renderingOrder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int ret = obj.renderingOrder;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index renderingOrder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_batchingDepth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int ret = obj.batchingDepth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index batchingDepth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rectMaskDepth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int ret = obj.rectMaskDepth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rectMaskDepth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stencilReferenceValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int ret = obj.stencilReferenceValue;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stencilReferenceValue on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_alpha(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			float ret = obj.alpha;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index alpha on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_grayed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			bool ret = obj.grayed;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index grayed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_current(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, FairyGUI.UpdateContext.current);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameId(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, FairyGUI.UpdateContext.frameId);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_working(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, FairyGUI.UpdateContext.working);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnBegin(IntPtr L)
	{
		try
		{
			ToLua.Push(L, FairyGUI.UpdateContext.OnBegin);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnEnd(IntPtr L)
	{
		try
		{
			ToLua.Push(L, FairyGUI.UpdateContext.OnEnd);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clipped(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.clipped = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipped on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clipInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			FairyGUI.UpdateContext.ClipInfo arg0 = StackTraits<FairyGUI.UpdateContext.ClipInfo>.Check(L, 2);
			obj.clipInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_renderingOrder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.renderingOrder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index renderingOrder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_batchingDepth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.batchingDepth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index batchingDepth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rectMaskDepth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.rectMaskDepth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rectMaskDepth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stencilReferenceValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.stencilReferenceValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stencilReferenceValue on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_alpha(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.alpha = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index alpha on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_grayed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext obj = (FairyGUI.UpdateContext)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.grayed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index grayed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_current(IntPtr L)
	{
		try
		{
			FairyGUI.UpdateContext arg0 = (FairyGUI.UpdateContext)ToLua.CheckObject<FairyGUI.UpdateContext>(L, 2);
			FairyGUI.UpdateContext.current = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameId(IntPtr L)
	{
		try
		{
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			FairyGUI.UpdateContext.frameId = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_working(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			FairyGUI.UpdateContext.working = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnBegin(IntPtr L)
	{
		try
		{
			FairyGUI.EventCallback0 arg0 = (FairyGUI.EventCallback0)ToLua.CheckDelegate<FairyGUI.EventCallback0>(L, 2);
			FairyGUI.UpdateContext.OnBegin = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnEnd(IntPtr L)
	{
		try
		{
			FairyGUI.EventCallback0 arg0 = (FairyGUI.EventCallback0)ToLua.CheckDelegate<FairyGUI.EventCallback0>(L, 2);
			FairyGUI.UpdateContext.OnEnd = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

