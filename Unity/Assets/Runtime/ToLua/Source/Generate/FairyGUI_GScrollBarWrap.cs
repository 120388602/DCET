//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_GScrollBarWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.GScrollBar), typeof(FairyGUI.GComponent));
		L.RegFunction("SetScrollPane", SetScrollPane);
		L.RegFunction("New", _CreateFairyGUI_GScrollBar);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("displayPerc", null, set_displayPerc);
		L.RegFunction("setdisplayPerc", set_displayPerc);
		L.RegVar("scrollPerc", null, set_scrollPerc);
		L.RegFunction("setscrollPerc", set_scrollPerc);
		L.RegVar("minSize", get_minSize, null);
		L.RegFunction("getminSize", get_minSize);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_GScrollBar(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.GScrollBar obj = new FairyGUI.GScrollBar();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.GScrollBar.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetScrollPane(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.GScrollBar obj = (FairyGUI.GScrollBar)ToLua.CheckObject<FairyGUI.GScrollBar>(L, 1);
			FairyGUI.ScrollPane arg0 = (FairyGUI.ScrollPane)ToLua.CheckObject<FairyGUI.ScrollPane>(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetScrollPane(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GScrollBar obj = (FairyGUI.GScrollBar)o;
			float ret = obj.minSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_displayPerc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GScrollBar obj = (FairyGUI.GScrollBar)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.displayPerc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index displayPerc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scrollPerc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GScrollBar obj = (FairyGUI.GScrollBar)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.scrollPerc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollPerc on a nil value");
		}
	}
}

