//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_GPathPointWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.GPathPoint), null);
		L.RegFunction("New", _CreateFairyGUI_GPathPoint);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("pos", get_pos, set_pos);
		L.RegVar("control1", get_control1, set_control1);
		L.RegVar("control2", get_control2, set_control2);
		L.RegVar("curveType", get_curveType, set_curveType);
		L.RegFunction("default", __default__);
		L.RegFunction("__clone__", __clone__);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_GPathPoint(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
				FairyGUI.GPathPoint obj = new FairyGUI.GPathPoint(arg0);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.Vector3>(L, 2))
			{
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				FairyGUI.GPathPoint obj = new FairyGUI.GPathPoint(arg0, arg1);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<uint>(L, 2))
			{
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
				FairyGUI.GPathPoint.CurveType arg1 = (FairyGUI.GPathPoint.CurveType)LuaDLL.lua_tonumber(L, 2);
				FairyGUI.GPathPoint obj = new FairyGUI.GPathPoint(arg0, arg1);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 3)
			{
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 3);
				FairyGUI.GPathPoint obj = new FairyGUI.GPathPoint(arg0, arg1, arg2);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 0)
			{
				FairyGUI.GPathPoint obj = new FairyGUI.GPathPoint();
				ToLua.PushValue(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.GPathPoint.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			UnityEngine.Vector3 ret = obj.pos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_control1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			UnityEngine.Vector3 ret = obj.control1;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index control1 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_control2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			UnityEngine.Vector3 ret = obj.control2;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index control2 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_curveType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			FairyGUI.GPathPoint.CurveType ret = obj.curveType;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index curveType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.pos = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_control1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.control1 = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index control1 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_control2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.control2 = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index control2 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_curveType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GPathPoint obj = (FairyGUI.GPathPoint)o;
			FairyGUI.GPathPoint.CurveType arg0 = (FairyGUI.GPathPoint.CurveType)LuaDLL.luaL_checknumber(L, 2);
			obj.curveType = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index curveType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __default__(IntPtr L)
	{
		try
		{
			var o = new FairyGUI.GPathPoint();
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __clone__(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			var obj = (FairyGUI.GPathPoint)ToLua.CheckObject(L, 1, typeof(FairyGUI.GPathPoint));
			var o = obj;
			ToLua.PushValue(L, o);
			ToLua.SetBack(L, 1, obj);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

