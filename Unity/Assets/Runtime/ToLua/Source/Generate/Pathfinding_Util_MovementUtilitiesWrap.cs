//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_Util_MovementUtilitiesWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("MovementUtilities");
		L.RegFunction("ClampVelocity", ClampVelocity);
		L.RegFunction("CalculateAccelerationToReachPoint", CalculateAccelerationToReachPoint);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClampVelocity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
			UnityEngine.Vector2 arg4 = ToLua.ToVector2(L, 5);
			UnityEngine.Vector2 o = Pathfinding.Util.MovementUtilities.ClampVelocity(arg0, arg1, arg2, arg3, arg4);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalculateAccelerationToReachPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
			UnityEngine.Vector2 arg1 = ToLua.ToVector2(L, 2);
			UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 3);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg5 = (float)LuaDLL.luaL_checknumber(L, 6);
			UnityEngine.Vector2 arg6 = ToLua.ToVector2(L, 7);
			UnityEngine.Vector2 o = Pathfinding.Util.MovementUtilities.CalculateAccelerationToReachPoint(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

