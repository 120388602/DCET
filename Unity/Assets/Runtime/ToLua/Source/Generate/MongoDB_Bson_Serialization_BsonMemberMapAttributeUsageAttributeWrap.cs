//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_BsonMemberMapAttributeUsageAttributeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute), typeof(System.Attribute));
		L.RegFunction("New", _CreateMongoDB_Bson_Serialization_BsonMemberMapAttributeUsageAttribute);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AllowMultipleMembers", get_AllowMultipleMembers, set_AllowMultipleMembers);
		L.RegFunction("getAllowMultipleMembers", get_AllowMultipleMembers);
		L.RegFunction("setAllowMultipleMembers", set_AllowMultipleMembers);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_Serialization_BsonMemberMapAttributeUsageAttribute(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute obj = new MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AllowMultipleMembers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute obj = (MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute)o;
			bool ret = obj.AllowMultipleMembers;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowMultipleMembers on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AllowMultipleMembers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute obj = (MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AllowMultipleMembers = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllowMultipleMembers on a nil value");
		}
	}
}

