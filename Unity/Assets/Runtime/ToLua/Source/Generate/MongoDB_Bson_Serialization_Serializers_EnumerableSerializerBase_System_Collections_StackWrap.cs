//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_Serializers_EnumerableSerializerBase_System_Collections_StackWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>), typeof(MongoDB.Bson.Serialization.Serializers.SerializerBase<System.Collections.Stack>), "EnumerableSerializerBase_System_Collections_Stack");
		L.RegFunction("Deserialize", Deserialize);
		L.RegFunction("TryGetItemSerializationInfo", TryGetItemSerializationInfo);
		L.RegFunction("Serialize", Serialize);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ItemSerializer", get_ItemSerializer, null);
		L.RegFunction("getItemSerializer", get_ItemSerializer);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Deserialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack> obj = (MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>)ToLua.CheckObject<MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>>(L, 1);
			MongoDB.Bson.Serialization.BsonDeserializationContext arg0 = (MongoDB.Bson.Serialization.BsonDeserializationContext)ToLua.CheckObject<MongoDB.Bson.Serialization.BsonDeserializationContext>(L, 2);
			MongoDB.Bson.Serialization.BsonDeserializationArgs arg1 = StackTraits<MongoDB.Bson.Serialization.BsonDeserializationArgs>.Check(L, 3);
			System.Collections.Stack o = obj.Deserialize(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TryGetItemSerializationInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack> obj = (MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>)ToLua.CheckObject<MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>>(L, 1);
			MongoDB.Bson.Serialization.BsonSerializationInfo arg0 = null;
			bool o = obj.TryGetItemSerializationInfo(out arg0);
			LuaDLL.lua_pushboolean(L, o);
			ToLua.PushObject(L, arg0);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack> obj = (MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>)ToLua.CheckObject<MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>>(L, 1);
			MongoDB.Bson.Serialization.BsonSerializationContext arg0 = (MongoDB.Bson.Serialization.BsonSerializationContext)ToLua.CheckObject<MongoDB.Bson.Serialization.BsonSerializationContext>(L, 2);
			MongoDB.Bson.Serialization.BsonSerializationArgs arg1 = StackTraits<MongoDB.Bson.Serialization.BsonSerializationArgs>.Check(L, 3);
			System.Collections.Stack arg2 = (System.Collections.Stack)ToLua.CheckObject<System.Collections.Stack>(L, 4);
			obj.Serialize(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ItemSerializer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack> obj = (MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase<System.Collections.Stack>)o;
			MongoDB.Bson.Serialization.IBsonSerializer ret = obj.ItemSerializer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ItemSerializer on a nil value");
		}
	}
}

