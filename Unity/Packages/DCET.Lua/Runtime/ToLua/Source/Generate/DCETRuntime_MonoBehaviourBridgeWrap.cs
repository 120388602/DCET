//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCETRuntime_MonoBehaviourBridgeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DCETRuntime.MonoBehaviourBridge), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("onAwake", get_onAwake, set_onAwake);
		L.RegVar("onFixedUpdate", get_onFixedUpdate, set_onFixedUpdate);
		L.RegVar("onLateUpdate", get_onLateUpdate, set_onLateUpdate);
		L.RegVar("onAnimatorIK", get_onAnimatorIK, set_onAnimatorIK);
		L.RegVar("onAnimatorMove", get_onAnimatorMove, set_onAnimatorMove);
		L.RegVar("onApplicationFocus", get_onApplicationFocus, set_onApplicationFocus);
		L.RegVar("onApplicationPause", get_onApplicationPause, set_onApplicationPause);
		L.RegVar("onApplicationQuit", get_onApplicationQuit, set_onApplicationQuit);
		L.RegVar("onAudioFilterRead", get_onAudioFilterRead, set_onAudioFilterRead);
		L.RegVar("onBecameInvisible", get_onBecameInvisible, set_onBecameInvisible);
		L.RegVar("onBecameVisible", get_onBecameVisible, set_onBecameVisible);
		L.RegVar("onCollisionEnter", get_onCollisionEnter, set_onCollisionEnter);
		L.RegVar("onCollisionEnter2D", get_onCollisionEnter2D, set_onCollisionEnter2D);
		L.RegVar("onCollisionExit", get_onCollisionExit, set_onCollisionExit);
		L.RegVar("onCollisionExit2D", get_onCollisionExit2D, set_onCollisionExit2D);
		L.RegVar("onCollisionStay", get_onCollisionStay, set_onCollisionStay);
		L.RegVar("onCollisionStay2D", get_onCollisionStay2D, set_onCollisionStay2D);
		L.RegVar("onConnectedToServer", get_onConnectedToServer, set_onConnectedToServer);
		L.RegVar("onControllerColliderHit", get_onControllerColliderHit, set_onControllerColliderHit);
		L.RegVar("onDestroy", get_onDestroy, set_onDestroy);
		L.RegVar("onDisable", get_onDisable, set_onDisable);
		L.RegVar("onDrawGizmos", get_onDrawGizmos, set_onDrawGizmos);
		L.RegVar("onDrawGizmosSelected", get_onDrawGizmosSelected, set_onDrawGizmosSelected);
		L.RegVar("onEnable", get_onEnable, set_onEnable);
		L.RegVar("onJointBreak", get_onJointBreak, set_onJointBreak);
		L.RegVar("onJointBreak2D", get_onJointBreak2D, set_onJointBreak2D);
		L.RegVar("onMouseDown", get_onMouseDown, set_onMouseDown);
		L.RegVar("onMouseDrag", get_onMouseDrag, set_onMouseDrag);
		L.RegVar("onMouseEnter", get_onMouseEnter, set_onMouseEnter);
		L.RegVar("onMouseExit", get_onMouseExit, set_onMouseExit);
		L.RegVar("onMouseOver", get_onMouseOver, set_onMouseOver);
		L.RegVar("onMouseUp", get_onMouseUp, set_onMouseUp);
		L.RegVar("onMouseUpAsButton", get_onMouseUpAsButton, set_onMouseUpAsButton);
		L.RegVar("onParticleCollision", get_onParticleCollision, set_onParticleCollision);
		L.RegVar("onParticleTrigger", get_onParticleTrigger, set_onParticleTrigger);
		L.RegVar("onPostRender", get_onPostRender, set_onPostRender);
		L.RegVar("onPreCull", get_onPreCull, set_onPreCull);
		L.RegVar("onPreRender", get_onPreRender, set_onPreRender);
		L.RegVar("onRenderObject", get_onRenderObject, set_onRenderObject);
		L.RegVar("onServerInitialized", get_onServerInitialized, set_onServerInitialized);
		L.RegVar("onTransformChildrenChanged", get_onTransformChildrenChanged, set_onTransformChildrenChanged);
		L.RegVar("onTransformParentChanged", get_onTransformParentChanged, set_onTransformParentChanged);
		L.RegVar("onTriggerEnter", get_onTriggerEnter, set_onTriggerEnter);
		L.RegVar("onTriggerEnter2D", get_onTriggerEnter2D, set_onTriggerEnter2D);
		L.RegVar("onTriggerExit", get_onTriggerExit, set_onTriggerExit);
		L.RegVar("onTriggerExit2D", get_onTriggerExit2D, set_onTriggerExit2D);
		L.RegVar("onTriggerStay", get_onTriggerStay, set_onTriggerStay);
		L.RegVar("onTriggerStay2D", get_onTriggerStay2D, set_onTriggerStay2D);
		L.RegVar("onValidate", get_onValidate, set_onValidate);
		L.RegVar("onWillRenderObject", get_onWillRenderObject, set_onWillRenderObject);
		L.RegVar("onReset", get_onReset, set_onReset);
		L.RegVar("onStart", get_onStart, set_onStart);
		L.RegVar("onUpdate", get_onUpdate, set_onUpdate);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onAwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onAwake;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAwake on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onFixedUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onFixedUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onFixedUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onLateUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onLateUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onLateUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onAnimatorIK(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<int> ret = obj.onAnimatorIK;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAnimatorIK on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onAnimatorMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onAnimatorMove;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAnimatorMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onApplicationFocus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<bool> ret = obj.onApplicationFocus;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onApplicationFocus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onApplicationPause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<bool> ret = obj.onApplicationPause;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onApplicationPause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onApplicationQuit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onApplicationQuit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onApplicationQuit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onAudioFilterRead(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<float[],int> ret = obj.onAudioFilterRead;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAudioFilterRead on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onBecameInvisible(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onBecameInvisible;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBecameInvisible on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onBecameVisible(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onBecameVisible;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBecameVisible on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCollisionEnter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision> ret = obj.onCollisionEnter;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionEnter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCollisionEnter2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision2D> ret = obj.onCollisionEnter2D;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionEnter2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCollisionExit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision> ret = obj.onCollisionExit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionExit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCollisionExit2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision2D> ret = obj.onCollisionExit2D;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionExit2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCollisionStay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision> ret = obj.onCollisionStay;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionStay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCollisionStay2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision2D> ret = obj.onCollisionStay2D;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionStay2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onConnectedToServer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onConnectedToServer;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onConnectedToServer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onControllerColliderHit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.ControllerColliderHit> ret = obj.onControllerColliderHit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onControllerColliderHit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onDestroy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onDestroy;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDestroy on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onDisable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onDisable;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDisable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onDrawGizmos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onDrawGizmos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDrawGizmos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onDrawGizmosSelected(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onDrawGizmosSelected;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDrawGizmosSelected on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onEnable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onEnable;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onEnable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onJointBreak(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<float> ret = obj.onJointBreak;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onJointBreak on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onJointBreak2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Joint2D> ret = obj.onJointBreak2D;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onJointBreak2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMouseDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onMouseDown;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMouseDrag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onMouseDrag;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseDrag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMouseEnter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onMouseEnter;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseEnter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMouseExit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onMouseExit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseExit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMouseOver(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onMouseOver;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseOver on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMouseUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onMouseUp;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onMouseUpAsButton(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onMouseUpAsButton;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseUpAsButton on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onParticleCollision(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.GameObject> ret = obj.onParticleCollision;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onParticleCollision on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onParticleTrigger(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onParticleTrigger;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onParticleTrigger on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPostRender(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onPostRender;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPostRender on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPreCull(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onPreCull;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPreCull on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onPreRender(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onPreRender;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPreRender on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onRenderObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onRenderObject;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onRenderObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onServerInitialized(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onServerInitialized;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onServerInitialized on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTransformChildrenChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onTransformChildrenChanged;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTransformChildrenChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTransformParentChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onTransformParentChanged;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTransformParentChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTriggerEnter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider> ret = obj.onTriggerEnter;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerEnter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTriggerEnter2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider2D> ret = obj.onTriggerEnter2D;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerEnter2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTriggerExit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider> ret = obj.onTriggerExit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerExit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTriggerExit2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider2D> ret = obj.onTriggerExit2D;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerExit2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTriggerStay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider> ret = obj.onTriggerStay;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerStay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTriggerStay2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider2D> ret = obj.onTriggerStay2D;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerStay2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onValidate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onValidate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onValidate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onWillRenderObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onWillRenderObject;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onWillRenderObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onReset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onReset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onStart;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action ret = obj.onUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onAwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onAwake = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAwake on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onFixedUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onFixedUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onFixedUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onLateUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onLateUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onLateUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onAnimatorIK(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<int> arg0 = (System.Action<int>)ToLua.CheckDelegate<System.Action<int>>(L, 2);
			obj.onAnimatorIK = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAnimatorIK on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onAnimatorMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onAnimatorMove = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAnimatorMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onApplicationFocus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<bool> arg0 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 2);
			obj.onApplicationFocus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onApplicationFocus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onApplicationPause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<bool> arg0 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 2);
			obj.onApplicationPause = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onApplicationPause on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onApplicationQuit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onApplicationQuit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onApplicationQuit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onAudioFilterRead(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<float[],int> arg0 = (System.Action<float[],int>)ToLua.CheckDelegate<System.Action<float[],int>>(L, 2);
			obj.onAudioFilterRead = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onAudioFilterRead on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onBecameInvisible(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onBecameInvisible = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBecameInvisible on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onBecameVisible(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onBecameVisible = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onBecameVisible on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCollisionEnter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision> arg0 = (System.Action<UnityEngine.Collision>)ToLua.CheckDelegate<System.Action<UnityEngine.Collision>>(L, 2);
			obj.onCollisionEnter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionEnter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCollisionEnter2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision2D> arg0 = (System.Action<UnityEngine.Collision2D>)ToLua.CheckDelegate<System.Action<UnityEngine.Collision2D>>(L, 2);
			obj.onCollisionEnter2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionEnter2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCollisionExit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision> arg0 = (System.Action<UnityEngine.Collision>)ToLua.CheckDelegate<System.Action<UnityEngine.Collision>>(L, 2);
			obj.onCollisionExit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionExit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCollisionExit2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision2D> arg0 = (System.Action<UnityEngine.Collision2D>)ToLua.CheckDelegate<System.Action<UnityEngine.Collision2D>>(L, 2);
			obj.onCollisionExit2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionExit2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCollisionStay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision> arg0 = (System.Action<UnityEngine.Collision>)ToLua.CheckDelegate<System.Action<UnityEngine.Collision>>(L, 2);
			obj.onCollisionStay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionStay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCollisionStay2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collision2D> arg0 = (System.Action<UnityEngine.Collision2D>)ToLua.CheckDelegate<System.Action<UnityEngine.Collision2D>>(L, 2);
			obj.onCollisionStay2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCollisionStay2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onConnectedToServer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onConnectedToServer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onConnectedToServer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onControllerColliderHit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.ControllerColliderHit> arg0 = (System.Action<UnityEngine.ControllerColliderHit>)ToLua.CheckDelegate<System.Action<UnityEngine.ControllerColliderHit>>(L, 2);
			obj.onControllerColliderHit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onControllerColliderHit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onDestroy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onDestroy = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDestroy on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onDisable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onDisable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDisable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onDrawGizmos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onDrawGizmos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDrawGizmos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onDrawGizmosSelected(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onDrawGizmosSelected = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onDrawGizmosSelected on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onEnable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onEnable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onEnable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onJointBreak(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<float> arg0 = (System.Action<float>)ToLua.CheckDelegate<System.Action<float>>(L, 2);
			obj.onJointBreak = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onJointBreak on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onJointBreak2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Joint2D> arg0 = (System.Action<UnityEngine.Joint2D>)ToLua.CheckDelegate<System.Action<UnityEngine.Joint2D>>(L, 2);
			obj.onJointBreak2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onJointBreak2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMouseDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onMouseDown = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMouseDrag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onMouseDrag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseDrag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMouseEnter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onMouseEnter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseEnter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMouseExit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onMouseExit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseExit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMouseOver(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onMouseOver = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseOver on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMouseUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onMouseUp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onMouseUpAsButton(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onMouseUpAsButton = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onMouseUpAsButton on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onParticleCollision(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.GameObject> arg0 = (System.Action<UnityEngine.GameObject>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject>>(L, 2);
			obj.onParticleCollision = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onParticleCollision on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onParticleTrigger(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onParticleTrigger = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onParticleTrigger on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onPostRender(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onPostRender = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPostRender on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onPreCull(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onPreCull = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPreCull on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onPreRender(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onPreRender = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onPreRender on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onRenderObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onRenderObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onRenderObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onServerInitialized(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onServerInitialized = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onServerInitialized on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTransformChildrenChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onTransformChildrenChanged = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTransformChildrenChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTransformParentChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onTransformParentChanged = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTransformParentChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTriggerEnter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider> arg0 = (System.Action<UnityEngine.Collider>)ToLua.CheckDelegate<System.Action<UnityEngine.Collider>>(L, 2);
			obj.onTriggerEnter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerEnter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTriggerEnter2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider2D> arg0 = (System.Action<UnityEngine.Collider2D>)ToLua.CheckDelegate<System.Action<UnityEngine.Collider2D>>(L, 2);
			obj.onTriggerEnter2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerEnter2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTriggerExit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider> arg0 = (System.Action<UnityEngine.Collider>)ToLua.CheckDelegate<System.Action<UnityEngine.Collider>>(L, 2);
			obj.onTriggerExit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerExit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTriggerExit2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider2D> arg0 = (System.Action<UnityEngine.Collider2D>)ToLua.CheckDelegate<System.Action<UnityEngine.Collider2D>>(L, 2);
			obj.onTriggerExit2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerExit2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTriggerStay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider> arg0 = (System.Action<UnityEngine.Collider>)ToLua.CheckDelegate<System.Action<UnityEngine.Collider>>(L, 2);
			obj.onTriggerStay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerStay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTriggerStay2D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action<UnityEngine.Collider2D> arg0 = (System.Action<UnityEngine.Collider2D>)ToLua.CheckDelegate<System.Action<UnityEngine.Collider2D>>(L, 2);
			obj.onTriggerStay2D = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTriggerStay2D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onValidate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onValidate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onValidate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onWillRenderObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onWillRenderObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onWillRenderObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onReset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onReset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onStart(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onStart = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onStart on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.MonoBehaviourBridge obj = (DCETRuntime.MonoBehaviourBridge)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onUpdate on a nil value");
		}
	}
}

