//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_Voxels_VoxelSpanWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.Voxels.VoxelSpan), typeof(System.Object));
		L.RegFunction("New", _CreatePathfinding_Voxels_VoxelSpan);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("bottom", get_bottom, set_bottom);
		L.RegVar("top", get_top, set_top);
		L.RegVar("next", get_next, set_next);
		L.RegVar("area", get_area, set_area);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_Voxels_VoxelSpan(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
				uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				Pathfinding.Voxels.VoxelSpan obj = new Pathfinding.Voxels.VoxelSpan(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.Voxels.VoxelSpan.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bottom(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			uint ret = obj.bottom;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottom on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_top(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			uint ret = obj.top;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index top on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_next(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			Pathfinding.Voxels.VoxelSpan ret = obj.next;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index next on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_area(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			int ret = obj.area;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index area on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bottom(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.bottom = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottom on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_top(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.top = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index top on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_next(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			Pathfinding.Voxels.VoxelSpan arg0 = (Pathfinding.Voxels.VoxelSpan)ToLua.CheckObject<Pathfinding.Voxels.VoxelSpan>(L, 2);
			obj.next = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index next on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_area(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.Voxels.VoxelSpan obj = (Pathfinding.Voxels.VoxelSpan)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.area = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index area on a nil value");
		}
	}
}

