//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_UpdateContext_ClipInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.UpdateContext.ClipInfo), null);
		L.RegFunction("New", _CreateFairyGUI_UpdateContext_ClipInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("rect", get_rect, set_rect);
		L.RegVar("clipBox", get_clipBox, set_clipBox);
		L.RegVar("soft", get_soft, set_soft);
		L.RegVar("softness", get_softness, set_softness);
		L.RegVar("clipId", get_clipId, set_clipId);
		L.RegVar("stencil", get_stencil, set_stencil);
		L.RegVar("reversedMask", get_reversedMask, set_reversedMask);
		L.RegFunction("default", __default__);
		L.RegFunction("__clone__", __clone__);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_UpdateContext_ClipInfo(IntPtr L)
	{
		FairyGUI.UpdateContext.ClipInfo obj = new FairyGUI.UpdateContext.ClipInfo();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			UnityEngine.Rect ret = obj.rect;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clipBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			UnityEngine.Vector4 ret = obj.clipBox;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipBox on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_soft(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			bool ret = obj.soft;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index soft on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_softness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			UnityEngine.Vector4 ret = obj.softness;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index softness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clipId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			uint ret = obj.clipId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stencil(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			bool ret = obj.stencil;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stencil on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_reversedMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			bool ret = obj.reversedMask;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reversedMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
			obj.rect = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clipBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			UnityEngine.Vector4 arg0 = ToLua.ToVector4(L, 2);
			obj.clipBox = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipBox on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_soft(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.soft = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index soft on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_softness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			UnityEngine.Vector4 arg0 = ToLua.ToVector4(L, 2);
			obj.softness = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index softness on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clipId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.clipId = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stencil(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.stencil = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stencil on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_reversedMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.UpdateContext.ClipInfo obj = (FairyGUI.UpdateContext.ClipInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.reversedMask = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reversedMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __default__(IntPtr L)
	{
		try
		{
			var o = new FairyGUI.UpdateContext.ClipInfo();
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int __clone__(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			var obj = (FairyGUI.UpdateContext.ClipInfo)ToLua.CheckObject(L, 1, typeof(FairyGUI.UpdateContext.ClipInfo));
			var o = obj;
			ToLua.PushValue(L, o);
			ToLua.SetBack(L, 1, obj);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

