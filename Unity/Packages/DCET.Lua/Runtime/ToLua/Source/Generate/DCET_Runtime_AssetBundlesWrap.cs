//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCET_Runtime_AssetBundlesWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DCET.Runtime.AssetBundles), typeof(System.Object));
		L.RegFunction("LoadAssetAsync", LoadAssetAsync);
		L.RegFunction("LoadAsset", LoadAsset);
		L.RegFunction("LoadAssetBundleAsync", LoadAssetBundleAsync);
		L.RegFunction("LoadAssetBundle", LoadAssetBundle);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("New", _CreateDCET_Runtime_AssetBundles);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Default", get_Default, null);
		L.RegFunction("getDefault", get_Default);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDCET_Runtime_AssetBundles(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DCET.Runtime.AssetBundles obj = new DCET.Runtime.AssetBundles();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DCET.Runtime.AssetBundles.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DCET.Runtime.AssetBundles obj = (DCET.Runtime.AssetBundles)ToLua.CheckObject<DCET.Runtime.AssetBundles>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			System.Threading.Tasks.Task<UnityEngine.Object> o = obj.LoadAssetAsync(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAsset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			DCET.Runtime.AssetBundles obj = (DCET.Runtime.AssetBundles)ToLua.CheckObject<DCET.Runtime.AssetBundles>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			UnityEngine.Object o = obj.LoadAsset(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetBundleAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DCET.Runtime.AssetBundles obj = (DCET.Runtime.AssetBundles)ToLua.CheckObject<DCET.Runtime.AssetBundles>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Threading.Tasks.Task<UnityEngine.AssetBundle> o = obj.LoadAssetBundleAsync(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DCET.Runtime.AssetBundles obj = (DCET.Runtime.AssetBundles)ToLua.CheckObject<DCET.Runtime.AssetBundles>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.AssetBundle o = obj.LoadAssetBundle(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCET.Runtime.AssetBundles obj = (DCET.Runtime.AssetBundles)ToLua.CheckObject<DCET.Runtime.AssetBundles>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Default(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, DCET.Runtime.AssetBundles.Default);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

