//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCETRuntime_DefineWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("Define");
		L.RegVar("IsAsync", get_IsAsync, set_IsAsync);
		L.RegVar("IsEditorMode", get_IsEditorMode, set_IsEditorMode);
		L.RegVar("IsDevelopmentBuild", get_IsDevelopmentBuild, set_IsDevelopmentBuild);
		L.RegVar("IsLua", get_IsLua, set_IsLua);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsAsync(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, DCETRuntime.Define.IsAsync);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsEditorMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, DCETRuntime.Define.IsEditorMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsDevelopmentBuild(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, DCETRuntime.Define.IsDevelopmentBuild);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsLua(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, DCETRuntime.Define.IsLua);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsAsync(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			DCETRuntime.Define.IsAsync = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsEditorMode(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			DCETRuntime.Define.IsEditorMode = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsDevelopmentBuild(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			DCETRuntime.Define.IsDevelopmentBuild = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsLua(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			DCETRuntime.Define.IsLua = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

