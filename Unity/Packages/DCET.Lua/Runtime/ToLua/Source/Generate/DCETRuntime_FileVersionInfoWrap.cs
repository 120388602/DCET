//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCETRuntime_FileVersionInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DCETRuntime.FileVersionInfo), typeof(System.Object));
		L.RegFunction("New", _CreateDCETRuntime_FileVersionInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("File", get_File, set_File);
		L.RegVar("MD5", get_MD5, set_MD5);
		L.RegVar("Size", get_Size, set_Size);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDCETRuntime_FileVersionInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DCETRuntime.FileVersionInfo obj = new DCETRuntime.FileVersionInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DCETRuntime.FileVersionInfo.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_File(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.FileVersionInfo obj = (DCETRuntime.FileVersionInfo)o;
			string ret = obj.File;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index File on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MD5(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.FileVersionInfo obj = (DCETRuntime.FileVersionInfo)o;
			string ret = obj.MD5;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MD5 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.FileVersionInfo obj = (DCETRuntime.FileVersionInfo)o;
			long ret = obj.Size;
			LuaDLL.tolua_pushint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Size on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_File(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.FileVersionInfo obj = (DCETRuntime.FileVersionInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.File = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index File on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MD5(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.FileVersionInfo obj = (DCETRuntime.FileVersionInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.MD5 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MD5 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.FileVersionInfo obj = (DCETRuntime.FileVersionInfo)o;
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.Size = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Size on a nil value");
		}
	}
}

