//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_IAstarAIWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.IAstarAI), null);
		L.RegFunction("SearchPath", SearchPath);
		L.RegFunction("SetPath", SetPath);
		L.RegFunction("Teleport", Teleport);
		L.RegFunction("Move", Move);
		L.RegFunction("MovementUpdate", MovementUpdate);
		L.RegFunction("FinalizeMovement", FinalizeMovement);
		L.RegVar("position", get_position, null);
		L.RegFunction("getposition", get_position);
		L.RegVar("rotation", get_rotation, null);
		L.RegFunction("getrotation", get_rotation);
		L.RegVar("maxSpeed", get_maxSpeed, set_maxSpeed);
		L.RegFunction("getmaxSpeed", get_maxSpeed);
		L.RegFunction("setmaxSpeed", set_maxSpeed);
		L.RegVar("velocity", get_velocity, null);
		L.RegFunction("getvelocity", get_velocity);
		L.RegVar("desiredVelocity", get_desiredVelocity, null);
		L.RegFunction("getdesiredVelocity", get_desiredVelocity);
		L.RegVar("remainingDistance", get_remainingDistance, null);
		L.RegFunction("getremainingDistance", get_remainingDistance);
		L.RegVar("reachedEndOfPath", get_reachedEndOfPath, null);
		L.RegFunction("getreachedEndOfPath", get_reachedEndOfPath);
		L.RegVar("destination", get_destination, set_destination);
		L.RegFunction("getdestination", get_destination);
		L.RegFunction("setdestination", set_destination);
		L.RegVar("canSearch", get_canSearch, set_canSearch);
		L.RegFunction("getcanSearch", get_canSearch);
		L.RegFunction("setcanSearch", set_canSearch);
		L.RegVar("canMove", get_canMove, set_canMove);
		L.RegFunction("getcanMove", get_canMove);
		L.RegFunction("setcanMove", set_canMove);
		L.RegVar("hasPath", get_hasPath, null);
		L.RegFunction("gethasPath", get_hasPath);
		L.RegVar("pathPending", get_pathPending, null);
		L.RegFunction("getpathPending", get_pathPending);
		L.RegVar("isStopped", get_isStopped, set_isStopped);
		L.RegFunction("getisStopped", get_isStopped);
		L.RegFunction("setisStopped", set_isStopped);
		L.RegVar("steeringTarget", get_steeringTarget, null);
		L.RegFunction("getsteeringTarget", get_steeringTarget);
		L.RegVar("onSearchPath", get_onSearchPath, set_onSearchPath);
		L.RegFunction("getonSearchPath", get_onSearchPath);
		L.RegFunction("setonSearchPath", set_onSearchPath);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SearchPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)ToLua.CheckObject<Pathfinding.IAstarAI>(L, 1);
			obj.SearchPath();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)ToLua.CheckObject<Pathfinding.IAstarAI>(L, 1);
			PF.Path arg0 = (PF.Path)ToLua.CheckObject<PF.Path>(L, 2);
			obj.SetPath(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Teleport(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)ToLua.CheckObject<Pathfinding.IAstarAI>(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				obj.Teleport(arg0);
				return 0;
			}
			else if (count == 3)
			{
				Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)ToLua.CheckObject<Pathfinding.IAstarAI>(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.Teleport(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Pathfinding.IAstarAI.Teleport");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Move(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)ToLua.CheckObject<Pathfinding.IAstarAI>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.Move(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MovementUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)ToLua.CheckObject<Pathfinding.IAstarAI>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1;
			UnityEngine.Quaternion arg2;
			obj.MovementUpdate(arg0, out arg1, out arg2);
			ToLua.Push(L, arg1);
			ToLua.Push(L, arg2);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FinalizeMovement(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)ToLua.CheckObject<Pathfinding.IAstarAI>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Quaternion arg1 = ToLua.ToQuaternion(L, 3);
			obj.FinalizeMovement(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			UnityEngine.Vector3 ret = obj.position;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index position on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			UnityEngine.Quaternion ret = obj.rotation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			float ret = obj.maxSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_velocity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			UnityEngine.Vector3 ret = obj.velocity;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index velocity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_desiredVelocity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			UnityEngine.Vector3 ret = obj.desiredVelocity;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index desiredVelocity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_remainingDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			float ret = obj.remainingDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index remainingDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_reachedEndOfPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool ret = obj.reachedEndOfPath;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reachedEndOfPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_destination(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			UnityEngine.Vector3 ret = obj.destination;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index destination on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canSearch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool ret = obj.canSearch;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canSearch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool ret = obj.canMove;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hasPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool ret = obj.hasPath;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index hasPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pathPending(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool ret = obj.pathPending;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pathPending on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isStopped(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool ret = obj.isStopped;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isStopped on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_steeringTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			UnityEngine.Vector3 ret = obj.steeringTarget;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index steeringTarget on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onSearchPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			System.Action ret = obj.onSearchPath;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onSearchPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.maxSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_destination(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.destination = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index destination on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_canSearch(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.canSearch = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canSearch on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_canMove(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.canMove = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canMove on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isStopped(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isStopped = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isStopped on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onSearchPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.IAstarAI obj = (Pathfinding.IAstarAI)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onSearchPath = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onSearchPath on a nil value");
		}
	}
}

