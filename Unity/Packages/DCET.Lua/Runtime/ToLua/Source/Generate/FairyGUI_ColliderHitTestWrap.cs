//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_ColliderHitTestWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.ColliderHitTest), typeof(System.Object));
		L.RegFunction("HitTest", HitTest);
		L.RegFunction("New", _CreateFairyGUI_ColliderHitTest);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("collider", get_collider, set_collider);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_ColliderHitTest(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.ColliderHitTest obj = new FairyGUI.ColliderHitTest();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.ColliderHitTest.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HitTest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.ColliderHitTest obj = (FairyGUI.ColliderHitTest)ToLua.CheckObject<FairyGUI.ColliderHitTest>(L, 1);
			UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
			UnityEngine.Vector2 arg1 = ToLua.ToVector2(L, 3);
			bool o = obj.HitTest(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_collider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ColliderHitTest obj = (FairyGUI.ColliderHitTest)o;
			UnityEngine.Collider ret = obj.collider;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index collider on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_collider(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ColliderHitTest obj = (FairyGUI.ColliderHitTest)o;
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckObject<UnityEngine.Collider>(L, 2);
			obj.collider = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index collider on a nil value");
		}
	}
}

