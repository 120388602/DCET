//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MongoDB_Bson_Serialization_Attributes_BsonIdAttributeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MongoDB.Bson.Serialization.Attributes.BsonIdAttribute), typeof(System.Attribute));
		L.RegFunction("Apply", Apply);
		L.RegFunction("New", _CreateMongoDB_Bson_Serialization_Attributes_BsonIdAttribute);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("IdGenerator", get_IdGenerator, set_IdGenerator);
		L.RegFunction("getIdGenerator", get_IdGenerator);
		L.RegFunction("setIdGenerator", set_IdGenerator);
		L.RegVar("Order", get_Order, set_Order);
		L.RegFunction("getOrder", get_Order);
		L.RegFunction("setOrder", set_Order);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMongoDB_Bson_Serialization_Attributes_BsonIdAttribute(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MongoDB.Bson.Serialization.Attributes.BsonIdAttribute obj = new MongoDB.Bson.Serialization.Attributes.BsonIdAttribute();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MongoDB.Bson.Serialization.Attributes.BsonIdAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonIdAttribute)ToLua.CheckObject<MongoDB.Bson.Serialization.Attributes.BsonIdAttribute>(L, 1);
			MongoDB.Bson.Serialization.BsonMemberMap arg0 = (MongoDB.Bson.Serialization.BsonMemberMap)ToLua.CheckObject<MongoDB.Bson.Serialization.BsonMemberMap>(L, 2);
			obj.Apply(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IdGenerator(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonIdAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonIdAttribute)o;
			System.Type ret = obj.IdGenerator;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IdGenerator on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Order(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonIdAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonIdAttribute)o;
			int ret = obj.Order;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Order on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IdGenerator(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonIdAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonIdAttribute)o;
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			obj.IdGenerator = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IdGenerator on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Order(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MongoDB.Bson.Serialization.Attributes.BsonIdAttribute obj = (MongoDB.Bson.Serialization.Attributes.BsonIdAttribute)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Order = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Order on a nil value");
		}
	}
}

