//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PF_ConstantPathWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PF.ConstantPath), typeof(PF.Path));
		L.RegFunction("Construct", Construct);
		L.RegFunction("New", _CreatePF_ConstantPath);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("startNode", get_startNode, set_startNode);
		L.RegVar("startPoint", get_startPoint, set_startPoint);
		L.RegVar("originalStartPoint", get_originalStartPoint, set_originalStartPoint);
		L.RegVar("allNodes", get_allNodes, set_allNodes);
		L.RegVar("endingCondition", get_endingCondition, set_endingCondition);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePF_ConstantPath(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				PF.ConstantPath obj = new PF.ConstantPath();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: PF.ConstantPath.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Construct(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				PF.ConstantPath o = PF.ConstantPath.Construct(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3)
			{
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				PF.OnPathDelegate arg2 = (PF.OnPathDelegate)ToLua.CheckDelegate<PF.OnPathDelegate>(L, 3);
				PF.ConstantPath o = PF.ConstantPath.Construct(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: PF.ConstantPath.Construct");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			PF.GraphNode ret = obj.startNode;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startNode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			UnityEngine.Vector3 ret = obj.startPoint;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startPoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_originalStartPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			UnityEngine.Vector3 ret = obj.originalStartPoint;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index originalStartPoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allNodes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			System.Collections.Generic.List<PF.GraphNode> ret = obj.allNodes;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allNodes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_endingCondition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			PF.PathEndingCondition ret = obj.endingCondition;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index endingCondition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			PF.GraphNode arg0 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 2);
			obj.startNode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startNode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.startPoint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startPoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_originalStartPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.originalStartPoint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index originalStartPoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allNodes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			System.Collections.Generic.List<PF.GraphNode> arg0 = (System.Collections.Generic.List<PF.GraphNode>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<PF.GraphNode>));
			obj.allNodes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allNodes on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_endingCondition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.ConstantPath obj = (PF.ConstantPath)o;
			PF.PathEndingCondition arg0 = (PF.PathEndingCondition)ToLua.CheckObject<PF.PathEndingCondition>(L, 2);
			obj.endingCondition = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index endingCondition on a nil value");
		}
	}
}

