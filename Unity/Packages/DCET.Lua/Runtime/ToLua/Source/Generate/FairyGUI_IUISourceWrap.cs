//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_IUISourceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.IUISource), null);
		L.RegFunction("Load", Load);
		L.RegVar("fileName", get_fileName, set_fileName);
		L.RegFunction("getfileName", get_fileName);
		L.RegFunction("setfileName", set_fileName);
		L.RegVar("loaded", get_loaded, null);
		L.RegFunction("getloaded", get_loaded);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Load(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.IUISource obj = (FairyGUI.IUISource)ToLua.CheckObject<FairyGUI.IUISource>(L, 1);
			FairyGUI.UILoadCallback arg0 = (FairyGUI.UILoadCallback)ToLua.CheckDelegate<FairyGUI.UILoadCallback>(L, 2);
			obj.Load(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fileName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.IUISource obj = (FairyGUI.IUISource)o;
			string ret = obj.fileName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fileName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_loaded(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.IUISource obj = (FairyGUI.IUISource)o;
			bool ret = obj.loaded;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index loaded on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fileName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.IUISource obj = (FairyGUI.IUISource)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.fileName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fileName on a nil value");
		}
	}
}

