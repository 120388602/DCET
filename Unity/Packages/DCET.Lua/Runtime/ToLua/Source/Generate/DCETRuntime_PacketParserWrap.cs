//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCETRuntime_PacketParserWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DCETRuntime.PacketParser), typeof(System.Object));
		L.RegFunction("Parse", Parse);
		L.RegFunction("GetPacket", GetPacket);
		L.RegFunction("Copy", Copy);
		L.RegFunction("New", _CreateDCETRuntime_PacketParser);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("memoryStream", get_memoryStream, set_memoryStream);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDCETRuntime_PacketParser(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				DCETRuntime.CircularBuffer arg1 = (DCETRuntime.CircularBuffer)ToLua.CheckObject<DCETRuntime.CircularBuffer>(L, 2);
				System.IO.MemoryStream arg2 = (System.IO.MemoryStream)ToLua.CheckObject<System.IO.MemoryStream>(L, 3);
				DCETRuntime.PacketParser obj = new DCETRuntime.PacketParser(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DCETRuntime.PacketParser.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Parse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCETRuntime.PacketParser obj = (DCETRuntime.PacketParser)ToLua.CheckObject<DCETRuntime.PacketParser>(L, 1);
			bool o = obj.Parse();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPacket(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCETRuntime.PacketParser obj = (DCETRuntime.PacketParser)ToLua.CheckObject<DCETRuntime.PacketParser>(L, 1);
			System.IO.MemoryStream o = obj.GetPacket();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Copy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 1);
			System.IO.MemoryStream arg1 = (System.IO.MemoryStream)ToLua.CheckObject<System.IO.MemoryStream>(L, 2);
			DCETRuntime.PacketParser.Copy(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_memoryStream(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.PacketParser obj = (DCETRuntime.PacketParser)o;
			System.IO.MemoryStream ret = obj.memoryStream;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index memoryStream on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_memoryStream(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DCETRuntime.PacketParser obj = (DCETRuntime.PacketParser)o;
			System.IO.MemoryStream arg0 = (System.IO.MemoryStream)ToLua.CheckObject<System.IO.MemoryStream>(L, 2);
			obj.memoryStream = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index memoryStream on a nil value");
		}
	}
}

