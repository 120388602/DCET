//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_ITextColorGearWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.ITextColorGear), null);
		L.RegVar("strokeColor", get_strokeColor, set_strokeColor);
		L.RegFunction("getstrokeColor", get_strokeColor);
		L.RegFunction("setstrokeColor", set_strokeColor);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_strokeColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ITextColorGear obj = (FairyGUI.ITextColorGear)o;
			UnityEngine.Color ret = obj.strokeColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index strokeColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_strokeColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.ITextColorGear obj = (FairyGUI.ITextColorGear)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.strokeColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index strokeColor on a nil value");
		}
	}
}

