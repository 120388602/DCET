//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_AdvancedSmoothWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.AdvancedSmooth), typeof(Pathfinding.MonoModifier));
		L.RegFunction("Apply", Apply);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("turningRadius", get_turningRadius, set_turningRadius);
		L.RegVar("turnConstruct1", get_turnConstruct1, set_turnConstruct1);
		L.RegVar("turnConstruct2", get_turnConstruct2, set_turnConstruct2);
		L.RegVar("Order", get_Order, null);
		L.RegFunction("getOrder", get_Order);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)ToLua.CheckObject<Pathfinding.AdvancedSmooth>(L, 1);
			PF.Path arg0 = (PF.Path)ToLua.CheckObject<PF.Path>(L, 2);
			obj.Apply(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_turningRadius(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)o;
			float ret = obj.turningRadius;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index turningRadius on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_turnConstruct1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)o;
			Pathfinding.AdvancedSmooth.MaxTurn ret = obj.turnConstruct1;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index turnConstruct1 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_turnConstruct2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)o;
			Pathfinding.AdvancedSmooth.ConstantTurn ret = obj.turnConstruct2;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index turnConstruct2 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Order(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)o;
			int ret = obj.Order;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Order on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_turningRadius(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.turningRadius = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index turningRadius on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_turnConstruct1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)o;
			Pathfinding.AdvancedSmooth.MaxTurn arg0 = (Pathfinding.AdvancedSmooth.MaxTurn)ToLua.CheckObject<Pathfinding.AdvancedSmooth.MaxTurn>(L, 2);
			obj.turnConstruct1 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index turnConstruct1 on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_turnConstruct2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.AdvancedSmooth obj = (Pathfinding.AdvancedSmooth)o;
			Pathfinding.AdvancedSmooth.ConstantTurn arg0 = (Pathfinding.AdvancedSmooth.ConstantTurn)ToLua.CheckObject<Pathfinding.AdvancedSmooth.ConstantTurn>(L, 2);
			obj.turnConstruct2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index turnConstruct2 on a nil value");
		}
	}
}

