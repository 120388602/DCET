//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class System_Linq_Expressions_MemberBindingWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(System.Linq.Expressions.MemberBinding), typeof(System.Object));
		L.RegFunction("ToString", ToString);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("BindingType", get_BindingType, null);
		L.RegFunction("getBindingType", get_BindingType);
		L.RegVar("Member", get_Member, null);
		L.RegFunction("getMember", get_Member);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Linq.Expressions.MemberBinding obj = (System.Linq.Expressions.MemberBinding)ToLua.CheckObject<System.Linq.Expressions.MemberBinding>(L, 1);
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BindingType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Linq.Expressions.MemberBinding obj = (System.Linq.Expressions.MemberBinding)o;
			System.Linq.Expressions.MemberBindingType ret = obj.BindingType;
			LuaDLL.lua_pushinteger(L, (int)ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BindingType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Member(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Linq.Expressions.MemberBinding obj = (System.Linq.Expressions.MemberBinding)o;
			System.Reflection.MemberInfo ret = obj.Member;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Member on a nil value");
		}
	}
}

