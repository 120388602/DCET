//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class System_Net_Sockets_AddressFamilyWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(System.Net.Sockets.AddressFamily));
		L.RegConstant("Unknown", System.Net.Sockets.AddressFamily.Unknown);
		L.RegConstant("Unspecified", System.Net.Sockets.AddressFamily.Unspecified);
		L.RegConstant("Unix", System.Net.Sockets.AddressFamily.Unix);
		L.RegConstant("InterNetwork", System.Net.Sockets.AddressFamily.InterNetwork);
		L.RegConstant("ImpLink", System.Net.Sockets.AddressFamily.ImpLink);
		L.RegConstant("Pup", System.Net.Sockets.AddressFamily.Pup);
		L.RegConstant("Chaos", System.Net.Sockets.AddressFamily.Chaos);
		L.RegConstant("NS", System.Net.Sockets.AddressFamily.NS);
		L.RegConstant("Ipx", System.Net.Sockets.AddressFamily.Ipx);
		L.RegConstant("Iso", System.Net.Sockets.AddressFamily.Iso);
		L.RegConstant("Osi", System.Net.Sockets.AddressFamily.Osi);
		L.RegConstant("Ecma", System.Net.Sockets.AddressFamily.Ecma);
		L.RegConstant("DataKit", System.Net.Sockets.AddressFamily.DataKit);
		L.RegConstant("Ccitt", System.Net.Sockets.AddressFamily.Ccitt);
		L.RegConstant("Sna", System.Net.Sockets.AddressFamily.Sna);
		L.RegConstant("DecNet", System.Net.Sockets.AddressFamily.DecNet);
		L.RegConstant("DataLink", System.Net.Sockets.AddressFamily.DataLink);
		L.RegConstant("Lat", System.Net.Sockets.AddressFamily.Lat);
		L.RegConstant("HyperChannel", System.Net.Sockets.AddressFamily.HyperChannel);
		L.RegConstant("AppleTalk", System.Net.Sockets.AddressFamily.AppleTalk);
		L.RegConstant("NetBios", System.Net.Sockets.AddressFamily.NetBios);
		L.RegConstant("VoiceView", System.Net.Sockets.AddressFamily.VoiceView);
		L.RegConstant("FireFox", System.Net.Sockets.AddressFamily.FireFox);
		L.RegConstant("Banyan", System.Net.Sockets.AddressFamily.Banyan);
		L.RegConstant("Atm", System.Net.Sockets.AddressFamily.Atm);
		L.RegConstant("InterNetworkV6", System.Net.Sockets.AddressFamily.InterNetworkV6);
		L.RegConstant("Cluster", System.Net.Sockets.AddressFamily.Cluster);
		L.RegConstant("Ieee12844", System.Net.Sockets.AddressFamily.Ieee12844);
		L.RegConstant("Irda", System.Net.Sockets.AddressFamily.Irda);
		L.RegConstant("NetworkDesigners", System.Net.Sockets.AddressFamily.NetworkDesigners);
		L.RegConstant("Max", System.Net.Sockets.AddressFamily.Max);
		L.EndEnum();
		TypeTraits<System.Net.Sockets.AddressFamily>.Check = CheckType;
		StackTraits<System.Net.Sockets.AddressFamily>.Push = Push;
	}

	static void Push(IntPtr L, System.Net.Sockets.AddressFamily arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(System.Net.Sockets.AddressFamily), L, pos);
	}
}

