//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), factory.UnityEngine_Application_LowMemoryCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(System.Action<bool>), factory.System_Action_bool);
		dict.Add(typeof(System.Func<bool>), factory.System_Func_bool);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), factory.System_Action_UnityEngine_AsyncOperation);
		dict.Add(typeof(System.AsyncCallback), factory.System_AsyncCallback);
		dict.Add(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction>), factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		dict.Add(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction>), factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		dict.Add(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction>), factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		dict.Add(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite>), factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		dict.Add(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite>), factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		dict.Add(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite>), factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		dict.Add(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional>), factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		dict.Add(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional>), factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		dict.Add(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional>), factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		dict.Add(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>), factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		dict.Add(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>), factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		dict.Add(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>), factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		dict.Add(typeof(DCET.Runtime.KcpOutput), factory.DCET_Runtime_KcpOutput);
		dict.Add(typeof(BehaviorDesigner.Runtime.Behavior.BehaviorHandler), factory.BehaviorDesigner_Runtime_Behavior_BehaviorHandler);
		dict.Add(typeof(System.Func<float>), factory.System_Func_float);
		dict.Add(typeof(System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus>), factory.System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		dict.Add(typeof(System.Func<object,bool>), factory.System_Func_object_bool);
		dict.Add(typeof(System.Func<int>), factory.System_Func_int);
		dict.Add(typeof(System.Func<string>), factory.System_Func_string);
		dict.Add(typeof(System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus>), factory.System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		dict.Add(typeof(System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus>), factory.System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		dict.Add(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus>), factory.System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		dict.Add(typeof(Pathfinding.OnScanStatus), factory.Pathfinding_OnScanStatus);
		dict.Add(typeof(System.Action<System.Collections.Generic.List<int>,bool>), factory.System_Action_System_Collections_Generic_List_int_bool);
		dict.Add(typeof(System.Action<PF.GraphNode>), factory.System_Action_PF_GraphNode);
		dict.Add(typeof(System.Func<PF.GraphNode,bool>), factory.System_Func_PF_GraphNode_bool);
		dict.Add(typeof(System.Action<PF.NavmeshTile[]>), factory.System_Action_PF_NavmeshTiles);
		dict.Add(typeof(PF.OnPathDelegate), factory.PF_OnPathDelegate);
		dict.Add(typeof(System.Action<PF.Path>), factory.System_Action_PF_Path);
		dict.Add(typeof(System.Func<PF.NavGraph,bool>), factory.System_Func_PF_NavGraph_bool);
		dict.Add(typeof(System.Action<System.Collections.Generic.List<PF.Int3>,bool>), factory.System_Action_System_Collections_Generic_List_PF_Int3_bool);
		dict.Add(typeof(System.Action<Pathfinding.IWorkItemContext>), factory.System_Action_Pathfinding_IWorkItemContext);
		dict.Add(typeof(System.Func<bool,bool>), factory.System_Func_bool_bool);
		dict.Add(typeof(System.Func<Pathfinding.IWorkItemContext,bool,bool>), factory.System_Func_Pathfinding_IWorkItemContext_bool_bool);
		dict.Add(typeof(System.Action<UnityEngine.Bounds>), factory.System_Action_UnityEngine_Bounds);
		dict.Add(typeof(System.Func<UnityEngine.Vector3>), factory.System_Func_UnityEngine_Vector3);
		dict.Add(typeof(Pathfinding.OnGraphDelegate), factory.Pathfinding_OnGraphDelegate);
		dict.Add(typeof(Pathfinding.OnScanDelegate), factory.Pathfinding_OnScanDelegate);
		dict.Add(typeof(FairyGUI.EventCallback0), factory.FairyGUI_EventCallback0);
		dict.Add(typeof(FairyGUI.EventCallback1), factory.FairyGUI_EventCallback1);
		dict.Add(typeof(FairyGUI.NGraphics.MeshModifier), factory.FairyGUI_NGraphics_MeshModifier);
		dict.Add(typeof(FairyGUI.ShaderConfig.GetFunction), factory.FairyGUI_ShaderConfig_GetFunction);
		dict.Add(typeof(FairyGUI.InputTextField.CopyHandler), factory.FairyGUI_InputTextField_CopyHandler);
		dict.Add(typeof(FairyGUI.InputTextField.PasteHandler), factory.FairyGUI_InputTextField_PasteHandler);
		dict.Add(typeof(FairyGUI.GTweenCallback), factory.FairyGUI_GTweenCallback);
		dict.Add(typeof(FairyGUI.GTweenCallback1), factory.FairyGUI_GTweenCallback1);
		dict.Add(typeof(FairyGUI.UIPackage.CreateObjectCallback), factory.FairyGUI_UIPackage_CreateObjectCallback);
		dict.Add(typeof(FairyGUI.ListItemRenderer), factory.FairyGUI_ListItemRenderer);
		dict.Add(typeof(FairyGUI.ListItemProvider), factory.FairyGUI_ListItemProvider);
		dict.Add(typeof(FairyGUI.GObjectPool.InitCallbackDelegate), factory.FairyGUI_GObjectPool_InitCallbackDelegate);
		dict.Add(typeof(FairyGUI.UIObjectFactory.GComponentCreator), factory.FairyGUI_UIObjectFactory_GComponentCreator);
		dict.Add(typeof(FairyGUI.PlayCompleteCallback), factory.FairyGUI_PlayCompleteCallback);
		dict.Add(typeof(FairyGUI.TransitionHook), factory.FairyGUI_TransitionHook);
		dict.Add(typeof(FairyGUI.TreeView.TreeNodeCreateCellDelegate), factory.FairyGUI_TreeView_TreeNodeCreateCellDelegate);
		dict.Add(typeof(FairyGUI.TreeView.TreeNodeRenderDelegate), factory.FairyGUI_TreeView_TreeNodeRenderDelegate);
		dict.Add(typeof(FairyGUI.TreeView.TreeNodeWillExpandDelegate), factory.FairyGUI_TreeView_TreeNodeWillExpandDelegate);
		dict.Add(typeof(FairyGUI.UIConfig.SoundLoader), factory.FairyGUI_UIConfig_SoundLoader);
		dict.Add(typeof(FairyGUI.UIObjectFactory.GLoaderCreator), factory.FairyGUI_UIObjectFactory_GLoaderCreator);
		dict.Add(typeof(FairyGUI.UIPackage.LoadResource), factory.FairyGUI_UIPackage_LoadResource);
		dict.Add(typeof(FairyGUI.TimerCallback), factory.FairyGUI_TimerCallback);
		dict.Add(typeof(System.Action<float[],int>), factory.System_Action_floats_int);
		dict.Add(typeof(System.Action<UnityEngine.Collision>), factory.System_Action_UnityEngine_Collision);
		dict.Add(typeof(System.Action<UnityEngine.Collision2D>), factory.System_Action_UnityEngine_Collision2D);
		dict.Add(typeof(System.Action<UnityEngine.ControllerColliderHit>), factory.System_Action_UnityEngine_ControllerColliderHit);
		dict.Add(typeof(System.Action<float>), factory.System_Action_float);
		dict.Add(typeof(System.Action<UnityEngine.Joint2D>), factory.System_Action_UnityEngine_Joint2D);
		dict.Add(typeof(System.Action<UnityEngine.GameObject>), factory.System_Action_UnityEngine_GameObject);
		dict.Add(typeof(System.Action<UnityEngine.Collider>), factory.System_Action_UnityEngine_Collider);
		dict.Add(typeof(System.Action<UnityEngine.Collider2D>), factory.System_Action_UnityEngine_Collider2D);
		dict.Add(typeof(System.Threading.SendOrPostCallback), factory.System_Threading_SendOrPostCallback);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.UnityEngine_Application_LowMemoryCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<System.Action<bool>>.Init(factory.System_Action_bool);
		DelegateTraits<System.Func<bool>>.Init(factory.System_Func_bool);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<System.AsyncCallback>.Init(factory.System_AsyncCallback);
		DelegateTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Init(factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		DelegateTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Init(factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		DelegateTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Init(factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		DelegateTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Init(factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		DelegateTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Init(factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		DelegateTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Init(factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		DelegateTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Init(factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		DelegateTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Init(factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		DelegateTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Init(factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		DelegateTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Init(factory.System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		DelegateTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Init(factory.System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		DelegateTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Init(factory.System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		DelegateTraits<DCET.Runtime.KcpOutput>.Init(factory.DCET_Runtime_KcpOutput);
		DelegateTraits<BehaviorDesigner.Runtime.Behavior.BehaviorHandler>.Init(factory.BehaviorDesigner_Runtime_Behavior_BehaviorHandler);
		DelegateTraits<System.Func<float>>.Init(factory.System_Func_float);
		DelegateTraits<System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		DelegateTraits<System.Func<object,bool>>.Init(factory.System_Func_object_bool);
		DelegateTraits<System.Func<int>>.Init(factory.System_Func_int);
		DelegateTraits<System.Func<string>>.Init(factory.System_Func_string);
		DelegateTraits<System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		DelegateTraits<System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		DelegateTraits<System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		DelegateTraits<Pathfinding.OnScanStatus>.Init(factory.Pathfinding_OnScanStatus);
		DelegateTraits<System.Action<System.Collections.Generic.List<int>,bool>>.Init(factory.System_Action_System_Collections_Generic_List_int_bool);
		DelegateTraits<System.Action<PF.GraphNode>>.Init(factory.System_Action_PF_GraphNode);
		DelegateTraits<System.Func<PF.GraphNode,bool>>.Init(factory.System_Func_PF_GraphNode_bool);
		DelegateTraits<System.Action<PF.NavmeshTile[]>>.Init(factory.System_Action_PF_NavmeshTiles);
		DelegateTraits<PF.OnPathDelegate>.Init(factory.PF_OnPathDelegate);
		DelegateTraits<System.Action<PF.Path>>.Init(factory.System_Action_PF_Path);
		DelegateTraits<System.Func<PF.NavGraph,bool>>.Init(factory.System_Func_PF_NavGraph_bool);
		DelegateTraits<System.Action<System.Collections.Generic.List<PF.Int3>,bool>>.Init(factory.System_Action_System_Collections_Generic_List_PF_Int3_bool);
		DelegateTraits<System.Action<Pathfinding.IWorkItemContext>>.Init(factory.System_Action_Pathfinding_IWorkItemContext);
		DelegateTraits<System.Func<bool,bool>>.Init(factory.System_Func_bool_bool);
		DelegateTraits<System.Func<Pathfinding.IWorkItemContext,bool,bool>>.Init(factory.System_Func_Pathfinding_IWorkItemContext_bool_bool);
		DelegateTraits<System.Action<UnityEngine.Bounds>>.Init(factory.System_Action_UnityEngine_Bounds);
		DelegateTraits<System.Func<UnityEngine.Vector3>>.Init(factory.System_Func_UnityEngine_Vector3);
		DelegateTraits<Pathfinding.OnGraphDelegate>.Init(factory.Pathfinding_OnGraphDelegate);
		DelegateTraits<Pathfinding.OnScanDelegate>.Init(factory.Pathfinding_OnScanDelegate);
		DelegateTraits<FairyGUI.EventCallback0>.Init(factory.FairyGUI_EventCallback0);
		DelegateTraits<FairyGUI.EventCallback1>.Init(factory.FairyGUI_EventCallback1);
		DelegateTraits<FairyGUI.NGraphics.MeshModifier>.Init(factory.FairyGUI_NGraphics_MeshModifier);
		DelegateTraits<FairyGUI.ShaderConfig.GetFunction>.Init(factory.FairyGUI_ShaderConfig_GetFunction);
		DelegateTraits<FairyGUI.InputTextField.CopyHandler>.Init(factory.FairyGUI_InputTextField_CopyHandler);
		DelegateTraits<FairyGUI.InputTextField.PasteHandler>.Init(factory.FairyGUI_InputTextField_PasteHandler);
		DelegateTraits<FairyGUI.GTweenCallback>.Init(factory.FairyGUI_GTweenCallback);
		DelegateTraits<FairyGUI.GTweenCallback1>.Init(factory.FairyGUI_GTweenCallback1);
		DelegateTraits<FairyGUI.UIPackage.CreateObjectCallback>.Init(factory.FairyGUI_UIPackage_CreateObjectCallback);
		DelegateTraits<FairyGUI.ListItemRenderer>.Init(factory.FairyGUI_ListItemRenderer);
		DelegateTraits<FairyGUI.ListItemProvider>.Init(factory.FairyGUI_ListItemProvider);
		DelegateTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Init(factory.FairyGUI_GObjectPool_InitCallbackDelegate);
		DelegateTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Init(factory.FairyGUI_UIObjectFactory_GComponentCreator);
		DelegateTraits<FairyGUI.PlayCompleteCallback>.Init(factory.FairyGUI_PlayCompleteCallback);
		DelegateTraits<FairyGUI.TransitionHook>.Init(factory.FairyGUI_TransitionHook);
		DelegateTraits<FairyGUI.TreeView.TreeNodeCreateCellDelegate>.Init(factory.FairyGUI_TreeView_TreeNodeCreateCellDelegate);
		DelegateTraits<FairyGUI.TreeView.TreeNodeRenderDelegate>.Init(factory.FairyGUI_TreeView_TreeNodeRenderDelegate);
		DelegateTraits<FairyGUI.TreeView.TreeNodeWillExpandDelegate>.Init(factory.FairyGUI_TreeView_TreeNodeWillExpandDelegate);
		DelegateTraits<FairyGUI.UIConfig.SoundLoader>.Init(factory.FairyGUI_UIConfig_SoundLoader);
		DelegateTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Init(factory.FairyGUI_UIObjectFactory_GLoaderCreator);
		DelegateTraits<FairyGUI.UIPackage.LoadResource>.Init(factory.FairyGUI_UIPackage_LoadResource);
		DelegateTraits<FairyGUI.TimerCallback>.Init(factory.FairyGUI_TimerCallback);
		DelegateTraits<System.Action<float[],int>>.Init(factory.System_Action_floats_int);
		DelegateTraits<System.Action<UnityEngine.Collision>>.Init(factory.System_Action_UnityEngine_Collision);
		DelegateTraits<System.Action<UnityEngine.Collision2D>>.Init(factory.System_Action_UnityEngine_Collision2D);
		DelegateTraits<System.Action<UnityEngine.ControllerColliderHit>>.Init(factory.System_Action_UnityEngine_ControllerColliderHit);
		DelegateTraits<System.Action<float>>.Init(factory.System_Action_float);
		DelegateTraits<System.Action<UnityEngine.Joint2D>>.Init(factory.System_Action_UnityEngine_Joint2D);
		DelegateTraits<System.Action<UnityEngine.GameObject>>.Init(factory.System_Action_UnityEngine_GameObject);
		DelegateTraits<System.Action<UnityEngine.Collider>>.Init(factory.System_Action_UnityEngine_Collider);
		DelegateTraits<System.Action<UnityEngine.Collider2D>>.Init(factory.System_Action_UnityEngine_Collider2D);
		DelegateTraits<System.Threading.SendOrPostCallback>.Init(factory.System_Threading_SendOrPostCallback);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<System.Action<bool>>.Init(factory.Check_System_Action_bool);
		TypeTraits<System.Func<bool>>.Init(factory.Check_System_Func_bool);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<System.AsyncCallback>.Init(factory.Check_System_AsyncCallback);
		TypeTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Init(factory.Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		TypeTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Init(factory.Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		TypeTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Init(factory.Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction);
		TypeTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Init(factory.Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		TypeTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Init(factory.Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		TypeTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Init(factory.Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite);
		TypeTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Init(factory.Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		TypeTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Init(factory.Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		TypeTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Init(factory.Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional);
		TypeTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Init(factory.Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		TypeTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Init(factory.Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		TypeTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Init(factory.Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator);
		TypeTraits<DCET.Runtime.KcpOutput>.Init(factory.Check_DCET_Runtime_KcpOutput);
		TypeTraits<BehaviorDesigner.Runtime.Behavior.BehaviorHandler>.Init(factory.Check_BehaviorDesigner_Runtime_Behavior_BehaviorHandler);
		TypeTraits<System.Func<float>>.Init(factory.Check_System_Func_float);
		TypeTraits<System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.Check_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		TypeTraits<System.Func<object,bool>>.Init(factory.Check_System_Func_object_bool);
		TypeTraits<System.Func<int>>.Init(factory.Check_System_Func_int);
		TypeTraits<System.Func<string>>.Init(factory.Check_System_Func_string);
		TypeTraits<System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.Check_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		TypeTraits<System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.Check_System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		TypeTraits<System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Init(factory.Check_System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus);
		TypeTraits<Pathfinding.OnScanStatus>.Init(factory.Check_Pathfinding_OnScanStatus);
		TypeTraits<System.Action<System.Collections.Generic.List<int>,bool>>.Init(factory.Check_System_Action_System_Collections_Generic_List_int_bool);
		TypeTraits<System.Action<PF.GraphNode>>.Init(factory.Check_System_Action_PF_GraphNode);
		TypeTraits<System.Func<PF.GraphNode,bool>>.Init(factory.Check_System_Func_PF_GraphNode_bool);
		TypeTraits<System.Action<PF.NavmeshTile[]>>.Init(factory.Check_System_Action_PF_NavmeshTiles);
		TypeTraits<PF.OnPathDelegate>.Init(factory.Check_PF_OnPathDelegate);
		TypeTraits<System.Action<PF.Path>>.Init(factory.Check_System_Action_PF_Path);
		TypeTraits<System.Func<PF.NavGraph,bool>>.Init(factory.Check_System_Func_PF_NavGraph_bool);
		TypeTraits<System.Action<System.Collections.Generic.List<PF.Int3>,bool>>.Init(factory.Check_System_Action_System_Collections_Generic_List_PF_Int3_bool);
		TypeTraits<System.Action<Pathfinding.IWorkItemContext>>.Init(factory.Check_System_Action_Pathfinding_IWorkItemContext);
		TypeTraits<System.Func<bool,bool>>.Init(factory.Check_System_Func_bool_bool);
		TypeTraits<System.Func<Pathfinding.IWorkItemContext,bool,bool>>.Init(factory.Check_System_Func_Pathfinding_IWorkItemContext_bool_bool);
		TypeTraits<System.Action<UnityEngine.Bounds>>.Init(factory.Check_System_Action_UnityEngine_Bounds);
		TypeTraits<System.Func<UnityEngine.Vector3>>.Init(factory.Check_System_Func_UnityEngine_Vector3);
		TypeTraits<Pathfinding.OnGraphDelegate>.Init(factory.Check_Pathfinding_OnGraphDelegate);
		TypeTraits<Pathfinding.OnScanDelegate>.Init(factory.Check_Pathfinding_OnScanDelegate);
		TypeTraits<FairyGUI.EventCallback0>.Init(factory.Check_FairyGUI_EventCallback0);
		TypeTraits<FairyGUI.EventCallback1>.Init(factory.Check_FairyGUI_EventCallback1);
		TypeTraits<FairyGUI.NGraphics.MeshModifier>.Init(factory.Check_FairyGUI_NGraphics_MeshModifier);
		TypeTraits<FairyGUI.ShaderConfig.GetFunction>.Init(factory.Check_FairyGUI_ShaderConfig_GetFunction);
		TypeTraits<FairyGUI.InputTextField.CopyHandler>.Init(factory.Check_FairyGUI_InputTextField_CopyHandler);
		TypeTraits<FairyGUI.InputTextField.PasteHandler>.Init(factory.Check_FairyGUI_InputTextField_PasteHandler);
		TypeTraits<FairyGUI.GTweenCallback>.Init(factory.Check_FairyGUI_GTweenCallback);
		TypeTraits<FairyGUI.GTweenCallback1>.Init(factory.Check_FairyGUI_GTweenCallback1);
		TypeTraits<FairyGUI.UIPackage.CreateObjectCallback>.Init(factory.Check_FairyGUI_UIPackage_CreateObjectCallback);
		TypeTraits<FairyGUI.ListItemRenderer>.Init(factory.Check_FairyGUI_ListItemRenderer);
		TypeTraits<FairyGUI.ListItemProvider>.Init(factory.Check_FairyGUI_ListItemProvider);
		TypeTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Init(factory.Check_FairyGUI_GObjectPool_InitCallbackDelegate);
		TypeTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Init(factory.Check_FairyGUI_UIObjectFactory_GComponentCreator);
		TypeTraits<FairyGUI.PlayCompleteCallback>.Init(factory.Check_FairyGUI_PlayCompleteCallback);
		TypeTraits<FairyGUI.TransitionHook>.Init(factory.Check_FairyGUI_TransitionHook);
		TypeTraits<FairyGUI.TreeView.TreeNodeCreateCellDelegate>.Init(factory.Check_FairyGUI_TreeView_TreeNodeCreateCellDelegate);
		TypeTraits<FairyGUI.TreeView.TreeNodeRenderDelegate>.Init(factory.Check_FairyGUI_TreeView_TreeNodeRenderDelegate);
		TypeTraits<FairyGUI.TreeView.TreeNodeWillExpandDelegate>.Init(factory.Check_FairyGUI_TreeView_TreeNodeWillExpandDelegate);
		TypeTraits<FairyGUI.UIConfig.SoundLoader>.Init(factory.Check_FairyGUI_UIConfig_SoundLoader);
		TypeTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Init(factory.Check_FairyGUI_UIObjectFactory_GLoaderCreator);
		TypeTraits<FairyGUI.UIPackage.LoadResource>.Init(factory.Check_FairyGUI_UIPackage_LoadResource);
		TypeTraits<FairyGUI.TimerCallback>.Init(factory.Check_FairyGUI_TimerCallback);
		TypeTraits<System.Action<float[],int>>.Init(factory.Check_System_Action_floats_int);
		TypeTraits<System.Action<UnityEngine.Collision>>.Init(factory.Check_System_Action_UnityEngine_Collision);
		TypeTraits<System.Action<UnityEngine.Collision2D>>.Init(factory.Check_System_Action_UnityEngine_Collision2D);
		TypeTraits<System.Action<UnityEngine.ControllerColliderHit>>.Init(factory.Check_System_Action_UnityEngine_ControllerColliderHit);
		TypeTraits<System.Action<float>>.Init(factory.Check_System_Action_float);
		TypeTraits<System.Action<UnityEngine.Joint2D>>.Init(factory.Check_System_Action_UnityEngine_Joint2D);
		TypeTraits<System.Action<UnityEngine.GameObject>>.Init(factory.Check_System_Action_UnityEngine_GameObject);
		TypeTraits<System.Action<UnityEngine.Collider>>.Init(factory.Check_System_Action_UnityEngine_Collider);
		TypeTraits<System.Action<UnityEngine.Collider2D>>.Init(factory.Check_System_Action_UnityEngine_Collider2D);
		TypeTraits<System.Threading.SendOrPostCallback>.Init(factory.Check_System_Threading_SendOrPostCallback);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = factory.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<System.Action<bool>>.Push = factory.Push_System_Action_bool;
		StackTraits<System.Func<bool>>.Push = factory.Push_System_Func_bool;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = factory.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<System.AsyncCallback>.Push = factory.Push_System_AsyncCallback;
		StackTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Push = factory.Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction;
		StackTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Push = factory.Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction;
		StackTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction>>.Push = factory.Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction;
		StackTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Push = factory.Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite;
		StackTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Push = factory.Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite;
		StackTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite>>.Push = factory.Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite;
		StackTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Push = factory.Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional;
		StackTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Push = factory.Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional;
		StackTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional>>.Push = factory.Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional;
		StackTraits<System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Push = factory.Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator;
		StackTraits<System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Push = factory.Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator;
		StackTraits<System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>>.Push = factory.Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator;
		StackTraits<DCET.Runtime.KcpOutput>.Push = factory.Push_DCET_Runtime_KcpOutput;
		StackTraits<BehaviorDesigner.Runtime.Behavior.BehaviorHandler>.Push = factory.Push_BehaviorDesigner_Runtime_Behavior_BehaviorHandler;
		StackTraits<System.Func<float>>.Push = factory.Push_System_Func_float;
		StackTraits<System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Push = factory.Push_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus;
		StackTraits<System.Func<object,bool>>.Push = factory.Push_System_Func_object_bool;
		StackTraits<System.Func<int>>.Push = factory.Push_System_Func_int;
		StackTraits<System.Func<string>>.Push = factory.Push_System_Func_string;
		StackTraits<System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Push = factory.Push_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus;
		StackTraits<System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Push = factory.Push_System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus;
		StackTraits<System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus>>.Push = factory.Push_System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus;
		StackTraits<Pathfinding.OnScanStatus>.Push = factory.Push_Pathfinding_OnScanStatus;
		StackTraits<System.Action<System.Collections.Generic.List<int>,bool>>.Push = factory.Push_System_Action_System_Collections_Generic_List_int_bool;
		StackTraits<System.Action<PF.GraphNode>>.Push = factory.Push_System_Action_PF_GraphNode;
		StackTraits<System.Func<PF.GraphNode,bool>>.Push = factory.Push_System_Func_PF_GraphNode_bool;
		StackTraits<System.Action<PF.NavmeshTile[]>>.Push = factory.Push_System_Action_PF_NavmeshTiles;
		StackTraits<PF.OnPathDelegate>.Push = factory.Push_PF_OnPathDelegate;
		StackTraits<System.Action<PF.Path>>.Push = factory.Push_System_Action_PF_Path;
		StackTraits<System.Func<PF.NavGraph,bool>>.Push = factory.Push_System_Func_PF_NavGraph_bool;
		StackTraits<System.Action<System.Collections.Generic.List<PF.Int3>,bool>>.Push = factory.Push_System_Action_System_Collections_Generic_List_PF_Int3_bool;
		StackTraits<System.Action<Pathfinding.IWorkItemContext>>.Push = factory.Push_System_Action_Pathfinding_IWorkItemContext;
		StackTraits<System.Func<bool,bool>>.Push = factory.Push_System_Func_bool_bool;
		StackTraits<System.Func<Pathfinding.IWorkItemContext,bool,bool>>.Push = factory.Push_System_Func_Pathfinding_IWorkItemContext_bool_bool;
		StackTraits<System.Action<UnityEngine.Bounds>>.Push = factory.Push_System_Action_UnityEngine_Bounds;
		StackTraits<System.Func<UnityEngine.Vector3>>.Push = factory.Push_System_Func_UnityEngine_Vector3;
		StackTraits<Pathfinding.OnGraphDelegate>.Push = factory.Push_Pathfinding_OnGraphDelegate;
		StackTraits<Pathfinding.OnScanDelegate>.Push = factory.Push_Pathfinding_OnScanDelegate;
		StackTraits<FairyGUI.EventCallback0>.Push = factory.Push_FairyGUI_EventCallback0;
		StackTraits<FairyGUI.EventCallback1>.Push = factory.Push_FairyGUI_EventCallback1;
		StackTraits<FairyGUI.NGraphics.MeshModifier>.Push = factory.Push_FairyGUI_NGraphics_MeshModifier;
		StackTraits<FairyGUI.ShaderConfig.GetFunction>.Push = factory.Push_FairyGUI_ShaderConfig_GetFunction;
		StackTraits<FairyGUI.InputTextField.CopyHandler>.Push = factory.Push_FairyGUI_InputTextField_CopyHandler;
		StackTraits<FairyGUI.InputTextField.PasteHandler>.Push = factory.Push_FairyGUI_InputTextField_PasteHandler;
		StackTraits<FairyGUI.GTweenCallback>.Push = factory.Push_FairyGUI_GTweenCallback;
		StackTraits<FairyGUI.GTweenCallback1>.Push = factory.Push_FairyGUI_GTweenCallback1;
		StackTraits<FairyGUI.UIPackage.CreateObjectCallback>.Push = factory.Push_FairyGUI_UIPackage_CreateObjectCallback;
		StackTraits<FairyGUI.ListItemRenderer>.Push = factory.Push_FairyGUI_ListItemRenderer;
		StackTraits<FairyGUI.ListItemProvider>.Push = factory.Push_FairyGUI_ListItemProvider;
		StackTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Push = factory.Push_FairyGUI_GObjectPool_InitCallbackDelegate;
		StackTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Push = factory.Push_FairyGUI_UIObjectFactory_GComponentCreator;
		StackTraits<FairyGUI.PlayCompleteCallback>.Push = factory.Push_FairyGUI_PlayCompleteCallback;
		StackTraits<FairyGUI.TransitionHook>.Push = factory.Push_FairyGUI_TransitionHook;
		StackTraits<FairyGUI.TreeView.TreeNodeCreateCellDelegate>.Push = factory.Push_FairyGUI_TreeView_TreeNodeCreateCellDelegate;
		StackTraits<FairyGUI.TreeView.TreeNodeRenderDelegate>.Push = factory.Push_FairyGUI_TreeView_TreeNodeRenderDelegate;
		StackTraits<FairyGUI.TreeView.TreeNodeWillExpandDelegate>.Push = factory.Push_FairyGUI_TreeView_TreeNodeWillExpandDelegate;
		StackTraits<FairyGUI.UIConfig.SoundLoader>.Push = factory.Push_FairyGUI_UIConfig_SoundLoader;
		StackTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Push = factory.Push_FairyGUI_UIObjectFactory_GLoaderCreator;
		StackTraits<FairyGUI.UIPackage.LoadResource>.Push = factory.Push_FairyGUI_UIPackage_LoadResource;
		StackTraits<FairyGUI.TimerCallback>.Push = factory.Push_FairyGUI_TimerCallback;
		StackTraits<System.Action<float[],int>>.Push = factory.Push_System_Action_floats_int;
		StackTraits<System.Action<UnityEngine.Collision>>.Push = factory.Push_System_Action_UnityEngine_Collision;
		StackTraits<System.Action<UnityEngine.Collision2D>>.Push = factory.Push_System_Action_UnityEngine_Collision2D;
		StackTraits<System.Action<UnityEngine.ControllerColliderHit>>.Push = factory.Push_System_Action_UnityEngine_ControllerColliderHit;
		StackTraits<System.Action<float>>.Push = factory.Push_System_Action_float;
		StackTraits<System.Action<UnityEngine.Joint2D>>.Push = factory.Push_System_Action_UnityEngine_Joint2D;
		StackTraits<System.Action<UnityEngine.GameObject>>.Push = factory.Push_System_Action_UnityEngine_GameObject;
		StackTraits<System.Action<UnityEngine.Collider>>.Push = factory.Push_System_Action_UnityEngine_Collider;
		StackTraits<System.Action<UnityEngine.Collider2D>>.Push = factory.Push_System_Action_UnityEngine_Collider2D;
		StackTraits<System.Threading.SendOrPostCallback>.Push = factory.Push_System_Threading_SendOrPostCallback;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LowMemoryCallback), L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<bool>), L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<bool>), L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.AsyncOperation>), L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class System_AsyncCallback_Event : LuaDelegate
	{
		public System_AsyncCallback_Event(LuaFunction func) : base(func) { }
		public System_AsyncCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(System.IAsyncResult param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(System.IAsyncResult param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.AsyncCallback System_AsyncCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.AsyncCallback fn = delegate(System.IAsyncResult param0) { };
			return fn;
		}

		if(!flag)
		{
			System_AsyncCallback_Event target = new System_AsyncCallback_Event(func);
			System.AsyncCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_AsyncCallback_Event target = new System_AsyncCallback_Event(func, self);
			System.AsyncCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_AsyncCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.AsyncCallback), L, pos);
	}

	void Push_System_AsyncCallback(IntPtr L, System.AsyncCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event : LuaDelegate
	{
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(LuaFunction func) : base(func) { }
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(BehaviorDesigner.Runtime.Tasks.HotfixAction param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixAction param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction> System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixAction param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(func);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(func, self);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction>), L, pos);
	}

	void Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixAction(IntPtr L, System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixAction> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event : LuaDelegate
	{
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(LuaFunction func) : base(func) { }
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BehaviorDesigner.Runtime.Tasks.HotfixAction param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixAction param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction> System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixAction param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(func);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(func, self);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction>), L, pos);
	}

	void Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixAction(IntPtr L, System.Action<BehaviorDesigner.Runtime.Tasks.HotfixAction> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event : LuaDelegate
	{
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(LuaFunction func) : base(func) { }
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(BehaviorDesigner.Runtime.Tasks.HotfixAction param0, BehaviorDesigner.Runtime.Tasks.HotfixAction param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixAction param0, BehaviorDesigner.Runtime.Tasks.HotfixAction param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction> System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixAction param0, BehaviorDesigner.Runtime.Tasks.HotfixAction param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(func);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction_Event(func, self);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction>), L, pos);
	}

	void Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixAction(IntPtr L, System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixAction> o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event : LuaDelegate
	{
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(LuaFunction func) : base(func) { }
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite> System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(func);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(func, self);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite>), L, pos);
	}

	void Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixComposite(IntPtr L, System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixComposite> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event : LuaDelegate
	{
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(LuaFunction func) : base(func) { }
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite> System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(func);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(func, self);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite>), L, pos);
	}

	void Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixComposite(IntPtr L, System.Action<BehaviorDesigner.Runtime.Tasks.HotfixComposite> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event : LuaDelegate
	{
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(LuaFunction func) : base(func) { }
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0, BehaviorDesigner.Runtime.Tasks.HotfixComposite param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0, BehaviorDesigner.Runtime.Tasks.HotfixComposite param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite> System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixComposite param0, BehaviorDesigner.Runtime.Tasks.HotfixComposite param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(func);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite_Event(func, self);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite>), L, pos);
	}

	void Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixComposite(IntPtr L, System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixComposite> o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event : LuaDelegate
	{
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(LuaFunction func) : base(func) { }
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional> System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(func);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(func, self);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional>), L, pos);
	}

	void Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixConditional(IntPtr L, System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixConditional> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event : LuaDelegate
	{
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(LuaFunction func) : base(func) { }
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional> System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(func);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(func, self);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional>), L, pos);
	}

	void Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixConditional(IntPtr L, System.Action<BehaviorDesigner.Runtime.Tasks.HotfixConditional> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event : LuaDelegate
	{
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(LuaFunction func) : base(func) { }
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0, BehaviorDesigner.Runtime.Tasks.HotfixConditional param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0, BehaviorDesigner.Runtime.Tasks.HotfixConditional param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional> System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixConditional param0, BehaviorDesigner.Runtime.Tasks.HotfixConditional param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(func);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional_Event(func, self);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional>), L, pos);
	}

	void Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixConditional(IntPtr L, System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixConditional> o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event : LuaDelegate
	{
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(LuaFunction func) : base(func) { }
		public System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(func);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event target = new System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(func, self);
			System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>), L, pos);
	}

	void Push_System_Predicate_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(IntPtr L, System.Predicate<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event : LuaDelegate
	{
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(LuaFunction func) : base(func) { }
		public System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(func);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(func, self);
			System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>), L, pos);
	}

	void Push_System_Action_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(IntPtr L, System.Action<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event : LuaDelegate
	{
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(LuaFunction func) : base(func) { }
		public System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0, BehaviorDesigner.Runtime.Tasks.HotfixDecorator param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0, BehaviorDesigner.Runtime.Tasks.HotfixDecorator param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> fn = delegate(BehaviorDesigner.Runtime.Tasks.HotfixDecorator param0, BehaviorDesigner.Runtime.Tasks.HotfixDecorator param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(func);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event target = new System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator_Event(func, self);
			System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator>), L, pos);
	}

	void Push_System_Comparison_BehaviorDesigner_Runtime_Tasks_HotfixDecorator(IntPtr L, System.Comparison<BehaviorDesigner.Runtime.Tasks.HotfixDecorator> o)
	{
		ToLua.Push(L, o);
	}

	class DCET_Runtime_KcpOutput_Event : LuaDelegate
	{
		public DCET_Runtime_KcpOutput_Event(LuaFunction func) : base(func) { }
		public DCET_Runtime_KcpOutput_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(System.IntPtr param0, int param1, System.IntPtr param2, System.IntPtr param3)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(System.IntPtr param0, int param1, System.IntPtr param2, System.IntPtr param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DCET.Runtime.KcpOutput DCET_Runtime_KcpOutput(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DCET.Runtime.KcpOutput fn = delegate(System.IntPtr param0, int param1, System.IntPtr param2, System.IntPtr param3) { return 0; };
			return fn;
		}

		if(!flag)
		{
			DCET_Runtime_KcpOutput_Event target = new DCET_Runtime_KcpOutput_Event(func);
			DCET.Runtime.KcpOutput d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DCET_Runtime_KcpOutput_Event target = new DCET_Runtime_KcpOutput_Event(func, self);
			DCET.Runtime.KcpOutput d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DCET_Runtime_KcpOutput(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DCET.Runtime.KcpOutput), L, pos);
	}

	void Push_DCET_Runtime_KcpOutput(IntPtr L, DCET.Runtime.KcpOutput o)
	{
		ToLua.Push(L, o);
	}

	class BehaviorDesigner_Runtime_Behavior_BehaviorHandler_Event : LuaDelegate
	{
		public BehaviorDesigner_Runtime_Behavior_BehaviorHandler_Event(LuaFunction func) : base(func) { }
		public BehaviorDesigner_Runtime_Behavior_BehaviorHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BehaviorDesigner.Runtime.Behavior param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BehaviorDesigner.Runtime.Behavior param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public BehaviorDesigner.Runtime.Behavior.BehaviorHandler BehaviorDesigner_Runtime_Behavior_BehaviorHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BehaviorDesigner.Runtime.Behavior.BehaviorHandler fn = delegate(BehaviorDesigner.Runtime.Behavior param0) { };
			return fn;
		}

		if(!flag)
		{
			BehaviorDesigner_Runtime_Behavior_BehaviorHandler_Event target = new BehaviorDesigner_Runtime_Behavior_BehaviorHandler_Event(func);
			BehaviorDesigner.Runtime.Behavior.BehaviorHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BehaviorDesigner_Runtime_Behavior_BehaviorHandler_Event target = new BehaviorDesigner_Runtime_Behavior_BehaviorHandler_Event(func, self);
			BehaviorDesigner.Runtime.Behavior.BehaviorHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BehaviorDesigner_Runtime_Behavior_BehaviorHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BehaviorDesigner.Runtime.Behavior.BehaviorHandler), L, pos);
	}

	void Push_BehaviorDesigner_Runtime_Behavior_BehaviorHandler(IntPtr L, BehaviorDesigner.Runtime.Behavior.BehaviorHandler o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_float_Event : LuaDelegate
	{
		public System_Func_float_Event(LuaFunction func) : base(func) { }
		public System_Func_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call()
		{
			func.BeginPCall();
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<float> System_Func_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<float> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_float_Event target = new System_Func_float_Event(func);
			System.Func<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_float_Event target = new System_Func_float_Event(func, self);
			System.Func<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<float>), L, pos);
	}

	void Push_System_Func_float(IntPtr L, System.Func<float> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event : LuaDelegate
	{
		public System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func) : base(func) { }
		public System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public BehaviorDesigner.Runtime.Tasks.TaskStatus Call()
		{
			func.BeginPCall();
			func.PCall();
			BehaviorDesigner.Runtime.Tasks.TaskStatus ret = (BehaviorDesigner.Runtime.Tasks.TaskStatus)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public BehaviorDesigner.Runtime.Tasks.TaskStatus CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			BehaviorDesigner.Runtime.Tasks.TaskStatus ret = (BehaviorDesigner.Runtime.Tasks.TaskStatus)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus> System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus> fn = delegate() { return default(BehaviorDesigner.Runtime.Tasks.TaskStatus); };
			return fn;
		}

		if(!flag)
		{
			System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func);
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func, self);
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus>), L, pos);
	}

	void Push_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_object_bool_Event : LuaDelegate
	{
		public System_Func_object_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_object_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<object,bool> System_Func_object_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<object,bool> fn = delegate(object param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_object_bool_Event target = new System_Func_object_bool_Event(func);
			System.Func<object,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_object_bool_Event target = new System_Func_object_bool_Event(func, self);
			System.Func<object,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_object_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<object,bool>), L, pos);
	}

	void Push_System_Func_object_bool(IntPtr L, System.Func<object,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_Event : LuaDelegate
	{
		public System_Func_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call()
		{
			func.BeginPCall();
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int> System_Func_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_Event target = new System_Func_int_Event(func);
			System.Func<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_Event target = new System_Func_int_Event(func, self);
			System.Func<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int>), L, pos);
	}

	void Push_System_Func_int(IntPtr L, System.Func<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_string_Event : LuaDelegate
	{
		public System_Func_string_Event(LuaFunction func) : base(func) { }
		public System_Func_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call()
		{
			func.BeginPCall();
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<string> System_Func_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<string> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			System_Func_string_Event target = new System_Func_string_Event(func);
			System.Func<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_string_Event target = new System_Func_string_Event(func, self);
			System.Func<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<string>), L, pos);
	}

	void Push_System_Func_string(IntPtr L, System.Func<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event : LuaDelegate
	{
		public System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func) : base(func) { }
		public System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public BehaviorDesigner.Runtime.Tasks.TaskStatus Call(BehaviorDesigner.Runtime.Tasks.TaskStatus param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			BehaviorDesigner.Runtime.Tasks.TaskStatus ret = (BehaviorDesigner.Runtime.Tasks.TaskStatus)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public BehaviorDesigner.Runtime.Tasks.TaskStatus CallWithSelf(BehaviorDesigner.Runtime.Tasks.TaskStatus param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			BehaviorDesigner.Runtime.Tasks.TaskStatus ret = (BehaviorDesigner.Runtime.Tasks.TaskStatus)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus> System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus> fn = delegate(BehaviorDesigner.Runtime.Tasks.TaskStatus param0) { return default(BehaviorDesigner.Runtime.Tasks.TaskStatus); };
			return fn;
		}

		if(!flag)
		{
			System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func);
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func, self);
			System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus>), L, pos);
	}

	void Push_System_Func_BehaviorDesigner_Runtime_Tasks_TaskStatus_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, System.Func<BehaviorDesigner.Runtime.Tasks.TaskStatus,BehaviorDesigner.Runtime.Tasks.TaskStatus> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event : LuaDelegate
	{
		public System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func) : base(func) { }
		public System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, BehaviorDesigner.Runtime.Tasks.TaskStatus param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, BehaviorDesigner.Runtime.Tasks.TaskStatus param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus> System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus> fn = delegate(int param0, BehaviorDesigner.Runtime.Tasks.TaskStatus param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func);
			System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func, self);
			System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus>), L, pos);
	}

	void Push_System_Action_int_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, System.Action<int,BehaviorDesigner.Runtime.Tasks.TaskStatus> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event : LuaDelegate
	{
		public System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func) : base(func) { }
		public System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BehaviorDesigner.Runtime.Tasks.TaskStatus param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BehaviorDesigner.Runtime.Tasks.TaskStatus param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus> System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus> fn = delegate(BehaviorDesigner.Runtime.Tasks.TaskStatus param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func);
			System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event target = new System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus_Event(func, self);
			System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus>), L, pos);
	}

	void Push_System_Action_BehaviorDesigner_Runtime_Tasks_TaskStatus(IntPtr L, System.Action<BehaviorDesigner.Runtime.Tasks.TaskStatus> o)
	{
		ToLua.Push(L, o);
	}

	class Pathfinding_OnScanStatus_Event : LuaDelegate
	{
		public Pathfinding_OnScanStatus_Event(LuaFunction func) : base(func) { }
		public Pathfinding_OnScanStatus_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Pathfinding.Progress param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Pathfinding.Progress param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Pathfinding.OnScanStatus Pathfinding_OnScanStatus(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Pathfinding.OnScanStatus fn = delegate(Pathfinding.Progress param0) { };
			return fn;
		}

		if(!flag)
		{
			Pathfinding_OnScanStatus_Event target = new Pathfinding_OnScanStatus_Event(func);
			Pathfinding.OnScanStatus d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Pathfinding_OnScanStatus_Event target = new Pathfinding_OnScanStatus_Event(func, self);
			Pathfinding.OnScanStatus d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Pathfinding_OnScanStatus(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Pathfinding.OnScanStatus), L, pos);
	}

	void Push_Pathfinding_OnScanStatus(IntPtr L, Pathfinding.OnScanStatus o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_System_Collections_Generic_List_int_bool_Event : LuaDelegate
	{
		public System_Action_System_Collections_Generic_List_int_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_System_Collections_Generic_List_int_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(System.Collections.Generic.List<int> param0, bool param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(System.Collections.Generic.List<int> param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<System.Collections.Generic.List<int>,bool> System_Action_System_Collections_Generic_List_int_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<System.Collections.Generic.List<int>,bool> fn = delegate(System.Collections.Generic.List<int> param0, bool param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_System_Collections_Generic_List_int_bool_Event target = new System_Action_System_Collections_Generic_List_int_bool_Event(func);
			System.Action<System.Collections.Generic.List<int>,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_System_Collections_Generic_List_int_bool_Event target = new System_Action_System_Collections_Generic_List_int_bool_Event(func, self);
			System.Action<System.Collections.Generic.List<int>,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_System_Collections_Generic_List_int_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<System.Collections.Generic.List<int>,bool>), L, pos);
	}

	void Push_System_Action_System_Collections_Generic_List_int_bool(IntPtr L, System.Action<System.Collections.Generic.List<int>,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_PF_GraphNode_Event : LuaDelegate
	{
		public System_Action_PF_GraphNode_Event(LuaFunction func) : base(func) { }
		public System_Action_PF_GraphNode_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(PF.GraphNode param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(PF.GraphNode param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<PF.GraphNode> System_Action_PF_GraphNode(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<PF.GraphNode> fn = delegate(PF.GraphNode param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_PF_GraphNode_Event target = new System_Action_PF_GraphNode_Event(func);
			System.Action<PF.GraphNode> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_PF_GraphNode_Event target = new System_Action_PF_GraphNode_Event(func, self);
			System.Action<PF.GraphNode> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_PF_GraphNode(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<PF.GraphNode>), L, pos);
	}

	void Push_System_Action_PF_GraphNode(IntPtr L, System.Action<PF.GraphNode> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_PF_GraphNode_bool_Event : LuaDelegate
	{
		public System_Func_PF_GraphNode_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_PF_GraphNode_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(PF.GraphNode param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(PF.GraphNode param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<PF.GraphNode,bool> System_Func_PF_GraphNode_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<PF.GraphNode,bool> fn = delegate(PF.GraphNode param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_PF_GraphNode_bool_Event target = new System_Func_PF_GraphNode_bool_Event(func);
			System.Func<PF.GraphNode,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_PF_GraphNode_bool_Event target = new System_Func_PF_GraphNode_bool_Event(func, self);
			System.Func<PF.GraphNode,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_PF_GraphNode_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<PF.GraphNode,bool>), L, pos);
	}

	void Push_System_Func_PF_GraphNode_bool(IntPtr L, System.Func<PF.GraphNode,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_PF_NavmeshTiles_Event : LuaDelegate
	{
		public System_Action_PF_NavmeshTiles_Event(LuaFunction func) : base(func) { }
		public System_Action_PF_NavmeshTiles_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(PF.NavmeshTile[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(PF.NavmeshTile[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<PF.NavmeshTile[]> System_Action_PF_NavmeshTiles(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<PF.NavmeshTile[]> fn = delegate(PF.NavmeshTile[] param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_PF_NavmeshTiles_Event target = new System_Action_PF_NavmeshTiles_Event(func);
			System.Action<PF.NavmeshTile[]> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_PF_NavmeshTiles_Event target = new System_Action_PF_NavmeshTiles_Event(func, self);
			System.Action<PF.NavmeshTile[]> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_PF_NavmeshTiles(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<PF.NavmeshTile[]>), L, pos);
	}

	void Push_System_Action_PF_NavmeshTiles(IntPtr L, System.Action<PF.NavmeshTile[]> o)
	{
		ToLua.Push(L, o);
	}

	class PF_OnPathDelegate_Event : LuaDelegate
	{
		public PF_OnPathDelegate_Event(LuaFunction func) : base(func) { }
		public PF_OnPathDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(PF.Path param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(PF.Path param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public PF.OnPathDelegate PF_OnPathDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			PF.OnPathDelegate fn = delegate(PF.Path param0) { };
			return fn;
		}

		if(!flag)
		{
			PF_OnPathDelegate_Event target = new PF_OnPathDelegate_Event(func);
			PF.OnPathDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			PF_OnPathDelegate_Event target = new PF_OnPathDelegate_Event(func, self);
			PF.OnPathDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_PF_OnPathDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(PF.OnPathDelegate), L, pos);
	}

	void Push_PF_OnPathDelegate(IntPtr L, PF.OnPathDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_PF_Path_Event : LuaDelegate
	{
		public System_Action_PF_Path_Event(LuaFunction func) : base(func) { }
		public System_Action_PF_Path_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(PF.Path param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(PF.Path param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<PF.Path> System_Action_PF_Path(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<PF.Path> fn = delegate(PF.Path param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_PF_Path_Event target = new System_Action_PF_Path_Event(func);
			System.Action<PF.Path> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_PF_Path_Event target = new System_Action_PF_Path_Event(func, self);
			System.Action<PF.Path> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_PF_Path(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<PF.Path>), L, pos);
	}

	void Push_System_Action_PF_Path(IntPtr L, System.Action<PF.Path> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_PF_NavGraph_bool_Event : LuaDelegate
	{
		public System_Func_PF_NavGraph_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_PF_NavGraph_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(PF.NavGraph param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(PF.NavGraph param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<PF.NavGraph,bool> System_Func_PF_NavGraph_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<PF.NavGraph,bool> fn = delegate(PF.NavGraph param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_PF_NavGraph_bool_Event target = new System_Func_PF_NavGraph_bool_Event(func);
			System.Func<PF.NavGraph,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_PF_NavGraph_bool_Event target = new System_Func_PF_NavGraph_bool_Event(func, self);
			System.Func<PF.NavGraph,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_PF_NavGraph_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<PF.NavGraph,bool>), L, pos);
	}

	void Push_System_Func_PF_NavGraph_bool(IntPtr L, System.Func<PF.NavGraph,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_System_Collections_Generic_List_PF_Int3_bool_Event : LuaDelegate
	{
		public System_Action_System_Collections_Generic_List_PF_Int3_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_System_Collections_Generic_List_PF_Int3_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(System.Collections.Generic.List<PF.Int3> param0, bool param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(System.Collections.Generic.List<PF.Int3> param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<System.Collections.Generic.List<PF.Int3>,bool> System_Action_System_Collections_Generic_List_PF_Int3_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<System.Collections.Generic.List<PF.Int3>,bool> fn = delegate(System.Collections.Generic.List<PF.Int3> param0, bool param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_System_Collections_Generic_List_PF_Int3_bool_Event target = new System_Action_System_Collections_Generic_List_PF_Int3_bool_Event(func);
			System.Action<System.Collections.Generic.List<PF.Int3>,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_System_Collections_Generic_List_PF_Int3_bool_Event target = new System_Action_System_Collections_Generic_List_PF_Int3_bool_Event(func, self);
			System.Action<System.Collections.Generic.List<PF.Int3>,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_System_Collections_Generic_List_PF_Int3_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<System.Collections.Generic.List<PF.Int3>,bool>), L, pos);
	}

	void Push_System_Action_System_Collections_Generic_List_PF_Int3_bool(IntPtr L, System.Action<System.Collections.Generic.List<PF.Int3>,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_Pathfinding_IWorkItemContext_Event : LuaDelegate
	{
		public System_Action_Pathfinding_IWorkItemContext_Event(LuaFunction func) : base(func) { }
		public System_Action_Pathfinding_IWorkItemContext_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Pathfinding.IWorkItemContext param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Pathfinding.IWorkItemContext param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<Pathfinding.IWorkItemContext> System_Action_Pathfinding_IWorkItemContext(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<Pathfinding.IWorkItemContext> fn = delegate(Pathfinding.IWorkItemContext param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Pathfinding_IWorkItemContext_Event target = new System_Action_Pathfinding_IWorkItemContext_Event(func);
			System.Action<Pathfinding.IWorkItemContext> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Pathfinding_IWorkItemContext_Event target = new System_Action_Pathfinding_IWorkItemContext_Event(func, self);
			System.Action<Pathfinding.IWorkItemContext> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_Pathfinding_IWorkItemContext(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<Pathfinding.IWorkItemContext>), L, pos);
	}

	void Push_System_Action_Pathfinding_IWorkItemContext(IntPtr L, System.Action<Pathfinding.IWorkItemContext> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_bool_Event : LuaDelegate
	{
		public System_Func_bool_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool,bool> System_Func_bool_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool,bool> fn = delegate(bool param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_bool_Event target = new System_Func_bool_bool_Event(func);
			System.Func<bool,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_bool_Event target = new System_Func_bool_bool_Event(func, self);
			System.Func<bool,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<bool,bool>), L, pos);
	}

	void Push_System_Func_bool_bool(IntPtr L, System.Func<bool,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_Pathfinding_IWorkItemContext_bool_bool_Event : LuaDelegate
	{
		public System_Func_Pathfinding_IWorkItemContext_bool_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_Pathfinding_IWorkItemContext_bool_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(Pathfinding.IWorkItemContext param0, bool param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(Pathfinding.IWorkItemContext param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<Pathfinding.IWorkItemContext,bool,bool> System_Func_Pathfinding_IWorkItemContext_bool_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<Pathfinding.IWorkItemContext,bool,bool> fn = delegate(Pathfinding.IWorkItemContext param0, bool param1) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_Pathfinding_IWorkItemContext_bool_bool_Event target = new System_Func_Pathfinding_IWorkItemContext_bool_bool_Event(func);
			System.Func<Pathfinding.IWorkItemContext,bool,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_Pathfinding_IWorkItemContext_bool_bool_Event target = new System_Func_Pathfinding_IWorkItemContext_bool_bool_Event(func, self);
			System.Func<Pathfinding.IWorkItemContext,bool,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_Pathfinding_IWorkItemContext_bool_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<Pathfinding.IWorkItemContext,bool,bool>), L, pos);
	}

	void Push_System_Func_Pathfinding_IWorkItemContext_bool_bool(IntPtr L, System.Func<Pathfinding.IWorkItemContext,bool,bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Bounds_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Bounds_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Bounds_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Bounds param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Bounds param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Bounds> System_Action_UnityEngine_Bounds(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Bounds> fn = delegate(UnityEngine.Bounds param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Bounds_Event target = new System_Action_UnityEngine_Bounds_Event(func);
			System.Action<UnityEngine.Bounds> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Bounds_Event target = new System_Action_UnityEngine_Bounds_Event(func, self);
			System.Action<UnityEngine.Bounds> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Bounds(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Bounds>), L, pos);
	}

	void Push_System_Action_UnityEngine_Bounds(IntPtr L, System.Action<UnityEngine.Bounds> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_UnityEngine_Vector3_Event : LuaDelegate
	{
		public System_Func_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public System_Func_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector3 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector3 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<UnityEngine.Vector3> System_Func_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<UnityEngine.Vector3> fn = delegate() { return default(UnityEngine.Vector3); };
			return fn;
		}

		if(!flag)
		{
			System_Func_UnityEngine_Vector3_Event target = new System_Func_UnityEngine_Vector3_Event(func);
			System.Func<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_UnityEngine_Vector3_Event target = new System_Func_UnityEngine_Vector3_Event(func, self);
			System.Func<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<UnityEngine.Vector3>), L, pos);
	}

	void Push_System_Func_UnityEngine_Vector3(IntPtr L, System.Func<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class Pathfinding_OnGraphDelegate_Event : LuaDelegate
	{
		public Pathfinding_OnGraphDelegate_Event(LuaFunction func) : base(func) { }
		public Pathfinding_OnGraphDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(PF.NavGraph param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(PF.NavGraph param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Pathfinding.OnGraphDelegate Pathfinding_OnGraphDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Pathfinding.OnGraphDelegate fn = delegate(PF.NavGraph param0) { };
			return fn;
		}

		if(!flag)
		{
			Pathfinding_OnGraphDelegate_Event target = new Pathfinding_OnGraphDelegate_Event(func);
			Pathfinding.OnGraphDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Pathfinding_OnGraphDelegate_Event target = new Pathfinding_OnGraphDelegate_Event(func, self);
			Pathfinding.OnGraphDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Pathfinding_OnGraphDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Pathfinding.OnGraphDelegate), L, pos);
	}

	void Push_Pathfinding_OnGraphDelegate(IntPtr L, Pathfinding.OnGraphDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Pathfinding_OnScanDelegate_Event : LuaDelegate
	{
		public Pathfinding_OnScanDelegate_Event(LuaFunction func) : base(func) { }
		public Pathfinding_OnScanDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(AstarPath param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(AstarPath param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Pathfinding.OnScanDelegate Pathfinding_OnScanDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Pathfinding.OnScanDelegate fn = delegate(AstarPath param0) { };
			return fn;
		}

		if(!flag)
		{
			Pathfinding_OnScanDelegate_Event target = new Pathfinding_OnScanDelegate_Event(func);
			Pathfinding.OnScanDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Pathfinding_OnScanDelegate_Event target = new Pathfinding_OnScanDelegate_Event(func, self);
			Pathfinding.OnScanDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Pathfinding_OnScanDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Pathfinding.OnScanDelegate), L, pos);
	}

	void Push_Pathfinding_OnScanDelegate(IntPtr L, Pathfinding.OnScanDelegate o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_EventCallback0_Event : LuaDelegate
	{
		public FairyGUI_EventCallback0_Event(LuaFunction func) : base(func) { }
		public FairyGUI_EventCallback0_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.EventCallback0 FairyGUI_EventCallback0(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.EventCallback0 fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_EventCallback0_Event target = new FairyGUI_EventCallback0_Event(func);
			FairyGUI.EventCallback0 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_EventCallback0_Event target = new FairyGUI_EventCallback0_Event(func, self);
			FairyGUI.EventCallback0 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_EventCallback0(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.EventCallback0), L, pos);
	}

	void Push_FairyGUI_EventCallback0(IntPtr L, FairyGUI.EventCallback0 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_EventCallback1_Event : LuaDelegate
	{
		public FairyGUI_EventCallback1_Event(LuaFunction func) : base(func) { }
		public FairyGUI_EventCallback1_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.EventContext param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.EventContext param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.EventCallback1 FairyGUI_EventCallback1(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.EventCallback1 fn = delegate(FairyGUI.EventContext param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_EventCallback1_Event target = new FairyGUI_EventCallback1_Event(func);
			FairyGUI.EventCallback1 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_EventCallback1_Event target = new FairyGUI_EventCallback1_Event(func, self);
			FairyGUI.EventCallback1 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_EventCallback1(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.EventCallback1), L, pos);
	}

	void Push_FairyGUI_EventCallback1(IntPtr L, FairyGUI.EventCallback1 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_NGraphics_MeshModifier_Event : LuaDelegate
	{
		public FairyGUI_NGraphics_MeshModifier_Event(LuaFunction func) : base(func) { }
		public FairyGUI_NGraphics_MeshModifier_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.NGraphics.MeshModifier FairyGUI_NGraphics_MeshModifier(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.NGraphics.MeshModifier fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_NGraphics_MeshModifier_Event target = new FairyGUI_NGraphics_MeshModifier_Event(func);
			FairyGUI.NGraphics.MeshModifier d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_NGraphics_MeshModifier_Event target = new FairyGUI_NGraphics_MeshModifier_Event(func, self);
			FairyGUI.NGraphics.MeshModifier d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_NGraphics_MeshModifier(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.NGraphics.MeshModifier), L, pos);
	}

	void Push_FairyGUI_NGraphics_MeshModifier(IntPtr L, FairyGUI.NGraphics.MeshModifier o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_ShaderConfig_GetFunction_Event : LuaDelegate
	{
		public FairyGUI_ShaderConfig_GetFunction_Event(LuaFunction func) : base(func) { }
		public FairyGUI_ShaderConfig_GetFunction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Shader Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			UnityEngine.Shader ret = (UnityEngine.Shader)func.CheckObject(typeof(UnityEngine.Shader));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Shader CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			UnityEngine.Shader ret = (UnityEngine.Shader)func.CheckObject(typeof(UnityEngine.Shader));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.ShaderConfig.GetFunction FairyGUI_ShaderConfig_GetFunction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.ShaderConfig.GetFunction fn = delegate(string param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_ShaderConfig_GetFunction_Event target = new FairyGUI_ShaderConfig_GetFunction_Event(func);
			FairyGUI.ShaderConfig.GetFunction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_ShaderConfig_GetFunction_Event target = new FairyGUI_ShaderConfig_GetFunction_Event(func, self);
			FairyGUI.ShaderConfig.GetFunction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_ShaderConfig_GetFunction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.ShaderConfig.GetFunction), L, pos);
	}

	void Push_FairyGUI_ShaderConfig_GetFunction(IntPtr L, FairyGUI.ShaderConfig.GetFunction o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_InputTextField_CopyHandler_Event : LuaDelegate
	{
		public FairyGUI_InputTextField_CopyHandler_Event(LuaFunction func) : base(func) { }
		public FairyGUI_InputTextField_CopyHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.InputTextField param0, string param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.InputTextField param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.InputTextField.CopyHandler FairyGUI_InputTextField_CopyHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.InputTextField.CopyHandler fn = delegate(FairyGUI.InputTextField param0, string param1) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_InputTextField_CopyHandler_Event target = new FairyGUI_InputTextField_CopyHandler_Event(func);
			FairyGUI.InputTextField.CopyHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_InputTextField_CopyHandler_Event target = new FairyGUI_InputTextField_CopyHandler_Event(func, self);
			FairyGUI.InputTextField.CopyHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_InputTextField_CopyHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.InputTextField.CopyHandler), L, pos);
	}

	void Push_FairyGUI_InputTextField_CopyHandler(IntPtr L, FairyGUI.InputTextField.CopyHandler o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_InputTextField_PasteHandler_Event : LuaDelegate
	{
		public FairyGUI_InputTextField_PasteHandler_Event(LuaFunction func) : base(func) { }
		public FairyGUI_InputTextField_PasteHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.InputTextField param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.InputTextField param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.InputTextField.PasteHandler FairyGUI_InputTextField_PasteHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.InputTextField.PasteHandler fn = delegate(FairyGUI.InputTextField param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_InputTextField_PasteHandler_Event target = new FairyGUI_InputTextField_PasteHandler_Event(func);
			FairyGUI.InputTextField.PasteHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_InputTextField_PasteHandler_Event target = new FairyGUI_InputTextField_PasteHandler_Event(func, self);
			FairyGUI.InputTextField.PasteHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_InputTextField_PasteHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.InputTextField.PasteHandler), L, pos);
	}

	void Push_FairyGUI_InputTextField_PasteHandler(IntPtr L, FairyGUI.InputTextField.PasteHandler o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GTweenCallback_Event : LuaDelegate
	{
		public FairyGUI_GTweenCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GTweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GTweenCallback FairyGUI_GTweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GTweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GTweenCallback_Event target = new FairyGUI_GTweenCallback_Event(func);
			FairyGUI.GTweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GTweenCallback_Event target = new FairyGUI_GTweenCallback_Event(func, self);
			FairyGUI.GTweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GTweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GTweenCallback), L, pos);
	}

	void Push_FairyGUI_GTweenCallback(IntPtr L, FairyGUI.GTweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GTweenCallback1_Event : LuaDelegate
	{
		public FairyGUI_GTweenCallback1_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GTweenCallback1_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GTweener param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GTweener param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GTweenCallback1 FairyGUI_GTweenCallback1(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GTweenCallback1 fn = delegate(FairyGUI.GTweener param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GTweenCallback1_Event target = new FairyGUI_GTweenCallback1_Event(func);
			FairyGUI.GTweenCallback1 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GTweenCallback1_Event target = new FairyGUI_GTweenCallback1_Event(func, self);
			FairyGUI.GTweenCallback1 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GTweenCallback1(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GTweenCallback1), L, pos);
	}

	void Push_FairyGUI_GTweenCallback1(IntPtr L, FairyGUI.GTweenCallback1 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIPackage_CreateObjectCallback_Event : LuaDelegate
	{
		public FairyGUI_UIPackage_CreateObjectCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIPackage_CreateObjectCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.UIPackage.CreateObjectCallback FairyGUI_UIPackage_CreateObjectCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIPackage.CreateObjectCallback fn = delegate(FairyGUI.GObject param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIPackage_CreateObjectCallback_Event target = new FairyGUI_UIPackage_CreateObjectCallback_Event(func);
			FairyGUI.UIPackage.CreateObjectCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIPackage_CreateObjectCallback_Event target = new FairyGUI_UIPackage_CreateObjectCallback_Event(func, self);
			FairyGUI.UIPackage.CreateObjectCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIPackage_CreateObjectCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIPackage.CreateObjectCallback), L, pos);
	}

	void Push_FairyGUI_UIPackage_CreateObjectCallback(IntPtr L, FairyGUI.UIPackage.CreateObjectCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_ListItemRenderer_Event : LuaDelegate
	{
		public FairyGUI_ListItemRenderer_Event(LuaFunction func) : base(func) { }
		public FairyGUI_ListItemRenderer_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, FairyGUI.GObject param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, FairyGUI.GObject param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.ListItemRenderer FairyGUI_ListItemRenderer(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.ListItemRenderer fn = delegate(int param0, FairyGUI.GObject param1) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_ListItemRenderer_Event target = new FairyGUI_ListItemRenderer_Event(func);
			FairyGUI.ListItemRenderer d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_ListItemRenderer_Event target = new FairyGUI_ListItemRenderer_Event(func, self);
			FairyGUI.ListItemRenderer d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_ListItemRenderer(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.ListItemRenderer), L, pos);
	}

	void Push_FairyGUI_ListItemRenderer(IntPtr L, FairyGUI.ListItemRenderer o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_ListItemProvider_Event : LuaDelegate
	{
		public FairyGUI_ListItemProvider_Event(LuaFunction func) : base(func) { }
		public FairyGUI_ListItemProvider_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.ListItemProvider FairyGUI_ListItemProvider(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.ListItemProvider fn = delegate(int param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_ListItemProvider_Event target = new FairyGUI_ListItemProvider_Event(func);
			FairyGUI.ListItemProvider d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_ListItemProvider_Event target = new FairyGUI_ListItemProvider_Event(func, self);
			FairyGUI.ListItemProvider d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_ListItemProvider(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.ListItemProvider), L, pos);
	}

	void Push_FairyGUI_ListItemProvider(IntPtr L, FairyGUI.ListItemProvider o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GObjectPool_InitCallbackDelegate_Event : LuaDelegate
	{
		public FairyGUI_GObjectPool_InitCallbackDelegate_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GObjectPool_InitCallbackDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GObjectPool.InitCallbackDelegate FairyGUI_GObjectPool_InitCallbackDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GObjectPool.InitCallbackDelegate fn = delegate(FairyGUI.GObject param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GObjectPool_InitCallbackDelegate_Event target = new FairyGUI_GObjectPool_InitCallbackDelegate_Event(func);
			FairyGUI.GObjectPool.InitCallbackDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GObjectPool_InitCallbackDelegate_Event target = new FairyGUI_GObjectPool_InitCallbackDelegate_Event(func, self);
			FairyGUI.GObjectPool.InitCallbackDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GObjectPool_InitCallbackDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GObjectPool.InitCallbackDelegate), L, pos);
	}

	void Push_FairyGUI_GObjectPool_InitCallbackDelegate(IntPtr L, FairyGUI.GObjectPool.InitCallbackDelegate o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIObjectFactory_GComponentCreator_Event : LuaDelegate
	{
		public FairyGUI_UIObjectFactory_GComponentCreator_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIObjectFactory_GComponentCreator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.GComponent Call()
		{
			func.BeginPCall();
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.GComponent CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIObjectFactory.GComponentCreator FairyGUI_UIObjectFactory_GComponentCreator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIObjectFactory.GComponentCreator fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIObjectFactory_GComponentCreator_Event target = new FairyGUI_UIObjectFactory_GComponentCreator_Event(func);
			FairyGUI.UIObjectFactory.GComponentCreator d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIObjectFactory_GComponentCreator_Event target = new FairyGUI_UIObjectFactory_GComponentCreator_Event(func, self);
			FairyGUI.UIObjectFactory.GComponentCreator d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIObjectFactory_GComponentCreator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIObjectFactory.GComponentCreator), L, pos);
	}

	void Push_FairyGUI_UIObjectFactory_GComponentCreator(IntPtr L, FairyGUI.UIObjectFactory.GComponentCreator o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_PlayCompleteCallback_Event : LuaDelegate
	{
		public FairyGUI_PlayCompleteCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_PlayCompleteCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.PlayCompleteCallback FairyGUI_PlayCompleteCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.PlayCompleteCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_PlayCompleteCallback_Event target = new FairyGUI_PlayCompleteCallback_Event(func);
			FairyGUI.PlayCompleteCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_PlayCompleteCallback_Event target = new FairyGUI_PlayCompleteCallback_Event(func, self);
			FairyGUI.PlayCompleteCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_PlayCompleteCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.PlayCompleteCallback), L, pos);
	}

	void Push_FairyGUI_PlayCompleteCallback(IntPtr L, FairyGUI.PlayCompleteCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TransitionHook_Event : LuaDelegate
	{
		public FairyGUI_TransitionHook_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TransitionHook_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TransitionHook FairyGUI_TransitionHook(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TransitionHook fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TransitionHook_Event target = new FairyGUI_TransitionHook_Event(func);
			FairyGUI.TransitionHook d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TransitionHook_Event target = new FairyGUI_TransitionHook_Event(func, self);
			FairyGUI.TransitionHook d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TransitionHook(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TransitionHook), L, pos);
	}

	void Push_FairyGUI_TransitionHook(IntPtr L, FairyGUI.TransitionHook o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TreeView_TreeNodeCreateCellDelegate_Event : LuaDelegate
	{
		public FairyGUI_TreeView_TreeNodeCreateCellDelegate_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TreeView_TreeNodeCreateCellDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.GComponent Call(FairyGUI.TreeNode param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.GComponent CallWithSelf(FairyGUI.TreeNode param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.TreeView.TreeNodeCreateCellDelegate FairyGUI_TreeView_TreeNodeCreateCellDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TreeView.TreeNodeCreateCellDelegate fn = delegate(FairyGUI.TreeNode param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TreeView_TreeNodeCreateCellDelegate_Event target = new FairyGUI_TreeView_TreeNodeCreateCellDelegate_Event(func);
			FairyGUI.TreeView.TreeNodeCreateCellDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TreeView_TreeNodeCreateCellDelegate_Event target = new FairyGUI_TreeView_TreeNodeCreateCellDelegate_Event(func, self);
			FairyGUI.TreeView.TreeNodeCreateCellDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TreeView_TreeNodeCreateCellDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TreeView.TreeNodeCreateCellDelegate), L, pos);
	}

	void Push_FairyGUI_TreeView_TreeNodeCreateCellDelegate(IntPtr L, FairyGUI.TreeView.TreeNodeCreateCellDelegate o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TreeView_TreeNodeRenderDelegate_Event : LuaDelegate
	{
		public FairyGUI_TreeView_TreeNodeRenderDelegate_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TreeView_TreeNodeRenderDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.TreeNode param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.TreeNode param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TreeView.TreeNodeRenderDelegate FairyGUI_TreeView_TreeNodeRenderDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TreeView.TreeNodeRenderDelegate fn = delegate(FairyGUI.TreeNode param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TreeView_TreeNodeRenderDelegate_Event target = new FairyGUI_TreeView_TreeNodeRenderDelegate_Event(func);
			FairyGUI.TreeView.TreeNodeRenderDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TreeView_TreeNodeRenderDelegate_Event target = new FairyGUI_TreeView_TreeNodeRenderDelegate_Event(func, self);
			FairyGUI.TreeView.TreeNodeRenderDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TreeView_TreeNodeRenderDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TreeView.TreeNodeRenderDelegate), L, pos);
	}

	void Push_FairyGUI_TreeView_TreeNodeRenderDelegate(IntPtr L, FairyGUI.TreeView.TreeNodeRenderDelegate o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TreeView_TreeNodeWillExpandDelegate_Event : LuaDelegate
	{
		public FairyGUI_TreeView_TreeNodeWillExpandDelegate_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TreeView_TreeNodeWillExpandDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.TreeNode param0, bool param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.TreeNode param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TreeView.TreeNodeWillExpandDelegate FairyGUI_TreeView_TreeNodeWillExpandDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TreeView.TreeNodeWillExpandDelegate fn = delegate(FairyGUI.TreeNode param0, bool param1) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TreeView_TreeNodeWillExpandDelegate_Event target = new FairyGUI_TreeView_TreeNodeWillExpandDelegate_Event(func);
			FairyGUI.TreeView.TreeNodeWillExpandDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TreeView_TreeNodeWillExpandDelegate_Event target = new FairyGUI_TreeView_TreeNodeWillExpandDelegate_Event(func, self);
			FairyGUI.TreeView.TreeNodeWillExpandDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TreeView_TreeNodeWillExpandDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TreeView.TreeNodeWillExpandDelegate), L, pos);
	}

	void Push_FairyGUI_TreeView_TreeNodeWillExpandDelegate(IntPtr L, FairyGUI.TreeView.TreeNodeWillExpandDelegate o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIConfig_SoundLoader_Event : LuaDelegate
	{
		public FairyGUI_UIConfig_SoundLoader_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIConfig_SoundLoader_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.NAudioClip Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			FairyGUI.NAudioClip ret = (FairyGUI.NAudioClip)func.CheckObject(typeof(FairyGUI.NAudioClip));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.NAudioClip CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			FairyGUI.NAudioClip ret = (FairyGUI.NAudioClip)func.CheckObject(typeof(FairyGUI.NAudioClip));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIConfig.SoundLoader FairyGUI_UIConfig_SoundLoader(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIConfig.SoundLoader fn = delegate(string param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIConfig_SoundLoader_Event target = new FairyGUI_UIConfig_SoundLoader_Event(func);
			FairyGUI.UIConfig.SoundLoader d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIConfig_SoundLoader_Event target = new FairyGUI_UIConfig_SoundLoader_Event(func, self);
			FairyGUI.UIConfig.SoundLoader d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIConfig_SoundLoader(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIConfig.SoundLoader), L, pos);
	}

	void Push_FairyGUI_UIConfig_SoundLoader(IntPtr L, FairyGUI.UIConfig.SoundLoader o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIObjectFactory_GLoaderCreator_Event : LuaDelegate
	{
		public FairyGUI_UIObjectFactory_GLoaderCreator_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIObjectFactory_GLoaderCreator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.GLoader Call()
		{
			func.BeginPCall();
			func.PCall();
			FairyGUI.GLoader ret = (FairyGUI.GLoader)func.CheckObject(typeof(FairyGUI.GLoader));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.GLoader CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			FairyGUI.GLoader ret = (FairyGUI.GLoader)func.CheckObject(typeof(FairyGUI.GLoader));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIObjectFactory.GLoaderCreator FairyGUI_UIObjectFactory_GLoaderCreator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIObjectFactory.GLoaderCreator fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIObjectFactory_GLoaderCreator_Event target = new FairyGUI_UIObjectFactory_GLoaderCreator_Event(func);
			FairyGUI.UIObjectFactory.GLoaderCreator d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIObjectFactory_GLoaderCreator_Event target = new FairyGUI_UIObjectFactory_GLoaderCreator_Event(func, self);
			FairyGUI.UIObjectFactory.GLoaderCreator d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIObjectFactory_GLoaderCreator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIObjectFactory.GLoaderCreator), L, pos);
	}

	void Push_FairyGUI_UIObjectFactory_GLoaderCreator(IntPtr L, FairyGUI.UIObjectFactory.GLoaderCreator o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIPackage_LoadResource_Event : LuaDelegate
	{
		public FairyGUI_UIPackage_LoadResource_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIPackage_LoadResource_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public object Call(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			object ret = func.CheckVariant();
			param3 = (FairyGUI.DestroyMethod)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public object CallWithSelf(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			object ret = func.CheckVariant();
			param3 = (FairyGUI.DestroyMethod)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIPackage.LoadResource FairyGUI_UIPackage_LoadResource(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIPackage.LoadResource fn = delegate(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3) 
			{
				param3 = default(FairyGUI.DestroyMethod);
			return null;			};

			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIPackage_LoadResource_Event target = new FairyGUI_UIPackage_LoadResource_Event(func);
			FairyGUI.UIPackage.LoadResource d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIPackage_LoadResource_Event target = new FairyGUI_UIPackage_LoadResource_Event(func, self);
			FairyGUI.UIPackage.LoadResource d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIPackage_LoadResource(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIPackage.LoadResource), L, pos);
	}

	void Push_FairyGUI_UIPackage_LoadResource(IntPtr L, FairyGUI.UIPackage.LoadResource o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TimerCallback_Event : LuaDelegate
	{
		public FairyGUI_TimerCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TimerCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TimerCallback FairyGUI_TimerCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TimerCallback fn = delegate(object param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TimerCallback_Event target = new FairyGUI_TimerCallback_Event(func);
			FairyGUI.TimerCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TimerCallback_Event target = new FairyGUI_TimerCallback_Event(func, self);
			FairyGUI.TimerCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TimerCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TimerCallback), L, pos);
	}

	void Push_FairyGUI_TimerCallback(IntPtr L, FairyGUI.TimerCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_floats_int_Event : LuaDelegate
	{
		public System_Action_floats_int_Event(LuaFunction func) : base(func) { }
		public System_Action_floats_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float[],int> System_Action_floats_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float[],int> fn = delegate(float[] param0, int param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_floats_int_Event target = new System_Action_floats_int_Event(func);
			System.Action<float[],int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_floats_int_Event target = new System_Action_floats_int_Event(func, self);
			System.Action<float[],int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_floats_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float[],int>), L, pos);
	}

	void Push_System_Action_floats_int(IntPtr L, System.Action<float[],int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Collision_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Collision_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Collision_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Collision param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Collision param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Collision> System_Action_UnityEngine_Collision(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Collision> fn = delegate(UnityEngine.Collision param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Collision_Event target = new System_Action_UnityEngine_Collision_Event(func);
			System.Action<UnityEngine.Collision> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Collision_Event target = new System_Action_UnityEngine_Collision_Event(func, self);
			System.Action<UnityEngine.Collision> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Collision(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Collision>), L, pos);
	}

	void Push_System_Action_UnityEngine_Collision(IntPtr L, System.Action<UnityEngine.Collision> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Collision2D_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Collision2D_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Collision2D_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Collision2D param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Collision2D param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Collision2D> System_Action_UnityEngine_Collision2D(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Collision2D> fn = delegate(UnityEngine.Collision2D param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Collision2D_Event target = new System_Action_UnityEngine_Collision2D_Event(func);
			System.Action<UnityEngine.Collision2D> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Collision2D_Event target = new System_Action_UnityEngine_Collision2D_Event(func, self);
			System.Action<UnityEngine.Collision2D> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Collision2D(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Collision2D>), L, pos);
	}

	void Push_System_Action_UnityEngine_Collision2D(IntPtr L, System.Action<UnityEngine.Collision2D> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_ControllerColliderHit_Event : LuaDelegate
	{
		public System_Action_UnityEngine_ControllerColliderHit_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_ControllerColliderHit_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.ControllerColliderHit param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.ControllerColliderHit param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.ControllerColliderHit> System_Action_UnityEngine_ControllerColliderHit(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.ControllerColliderHit> fn = delegate(UnityEngine.ControllerColliderHit param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_ControllerColliderHit_Event target = new System_Action_UnityEngine_ControllerColliderHit_Event(func);
			System.Action<UnityEngine.ControllerColliderHit> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_ControllerColliderHit_Event target = new System_Action_UnityEngine_ControllerColliderHit_Event(func, self);
			System.Action<UnityEngine.ControllerColliderHit> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_ControllerColliderHit(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.ControllerColliderHit>), L, pos);
	}

	void Push_System_Action_UnityEngine_ControllerColliderHit(IntPtr L, System.Action<UnityEngine.ControllerColliderHit> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_Event : LuaDelegate
	{
		public System_Action_float_Event(LuaFunction func) : base(func) { }
		public System_Action_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float> System_Action_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_Event target = new System_Action_float_Event(func);
			System.Action<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_Event target = new System_Action_float_Event(func, self);
			System.Action<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float>), L, pos);
	}

	void Push_System_Action_float(IntPtr L, System.Action<float> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Joint2D_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Joint2D_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Joint2D_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Joint2D param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Joint2D param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Joint2D> System_Action_UnityEngine_Joint2D(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Joint2D> fn = delegate(UnityEngine.Joint2D param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Joint2D_Event target = new System_Action_UnityEngine_Joint2D_Event(func);
			System.Action<UnityEngine.Joint2D> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Joint2D_Event target = new System_Action_UnityEngine_Joint2D_Event(func, self);
			System.Action<UnityEngine.Joint2D> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Joint2D(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Joint2D>), L, pos);
	}

	void Push_System_Action_UnityEngine_Joint2D(IntPtr L, System.Action<UnityEngine.Joint2D> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_GameObject_Event : LuaDelegate
	{
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_GameObject_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.GameObject> System_Action_UnityEngine_GameObject(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.GameObject> fn = delegate(UnityEngine.GameObject param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_GameObject_Event target = new System_Action_UnityEngine_GameObject_Event(func);
			System.Action<UnityEngine.GameObject> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_GameObject_Event target = new System_Action_UnityEngine_GameObject_Event(func, self);
			System.Action<UnityEngine.GameObject> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_GameObject(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.GameObject>), L, pos);
	}

	void Push_System_Action_UnityEngine_GameObject(IntPtr L, System.Action<UnityEngine.GameObject> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Collider_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Collider_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Collider_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Collider param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Collider param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Collider> System_Action_UnityEngine_Collider(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Collider> fn = delegate(UnityEngine.Collider param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Collider_Event target = new System_Action_UnityEngine_Collider_Event(func);
			System.Action<UnityEngine.Collider> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Collider_Event target = new System_Action_UnityEngine_Collider_Event(func, self);
			System.Action<UnityEngine.Collider> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Collider(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Collider>), L, pos);
	}

	void Push_System_Action_UnityEngine_Collider(IntPtr L, System.Action<UnityEngine.Collider> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Collider2D_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Collider2D_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Collider2D_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Collider2D param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Collider2D param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Collider2D> System_Action_UnityEngine_Collider2D(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Collider2D> fn = delegate(UnityEngine.Collider2D param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Collider2D_Event target = new System_Action_UnityEngine_Collider2D_Event(func);
			System.Action<UnityEngine.Collider2D> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Collider2D_Event target = new System_Action_UnityEngine_Collider2D_Event(func, self);
			System.Action<UnityEngine.Collider2D> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Collider2D(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Collider2D>), L, pos);
	}

	void Push_System_Action_UnityEngine_Collider2D(IntPtr L, System.Action<UnityEngine.Collider2D> o)
	{
		ToLua.Push(L, o);
	}

	class System_Threading_SendOrPostCallback_Event : LuaDelegate
	{
		public System_Threading_SendOrPostCallback_Event(LuaFunction func) : base(func) { }
		public System_Threading_SendOrPostCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Threading.SendOrPostCallback System_Threading_SendOrPostCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Threading.SendOrPostCallback fn = delegate(object param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Threading_SendOrPostCallback_Event target = new System_Threading_SendOrPostCallback_Event(func);
			System.Threading.SendOrPostCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Threading_SendOrPostCallback_Event target = new System_Threading_SendOrPostCallback_Event(func, self);
			System.Threading.SendOrPostCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Threading_SendOrPostCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Threading.SendOrPostCallback), L, pos);
	}

	void Push_System_Threading_SendOrPostCallback(IntPtr L, System.Threading.SendOrPostCallback o)
	{
		ToLua.Push(L, o);
	}

}

