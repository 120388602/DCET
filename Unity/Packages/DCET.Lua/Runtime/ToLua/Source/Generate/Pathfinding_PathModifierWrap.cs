//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_PathModifierWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.PathModifier), typeof(System.Object));
		L.RegFunction("Awake", Awake);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("PreProcess", PreProcess);
		L.RegFunction("Apply", Apply);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("seeker", get_seeker, set_seeker);
		L.RegVar("Order", get_Order, null);
		L.RegFunction("getOrder", get_Order);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Awake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.PathModifier obj = (Pathfinding.PathModifier)ToLua.CheckObject<Pathfinding.PathModifier>(L, 1);
			Pathfinding.Seeker arg0 = (Pathfinding.Seeker)ToLua.CheckObject<Pathfinding.Seeker>(L, 2);
			obj.Awake(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.PathModifier obj = (Pathfinding.PathModifier)ToLua.CheckObject<Pathfinding.PathModifier>(L, 1);
			Pathfinding.Seeker arg0 = (Pathfinding.Seeker)ToLua.CheckObject<Pathfinding.Seeker>(L, 2);
			obj.OnDestroy(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PreProcess(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.PathModifier obj = (Pathfinding.PathModifier)ToLua.CheckObject<Pathfinding.PathModifier>(L, 1);
			PF.Path arg0 = (PF.Path)ToLua.CheckObject<PF.Path>(L, 2);
			obj.PreProcess(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Apply(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.PathModifier obj = (Pathfinding.PathModifier)ToLua.CheckObject<Pathfinding.PathModifier>(L, 1);
			PF.Path arg0 = (PF.Path)ToLua.CheckObject<PF.Path>(L, 2);
			obj.Apply(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_seeker(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.PathModifier obj = (Pathfinding.PathModifier)o;
			Pathfinding.Seeker ret = obj.seeker;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index seeker on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Order(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.PathModifier obj = (Pathfinding.PathModifier)o;
			int ret = obj.Order;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Order on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_seeker(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.PathModifier obj = (Pathfinding.PathModifier)o;
			Pathfinding.Seeker arg0 = (Pathfinding.Seeker)ToLua.CheckObject<Pathfinding.Seeker>(L, 2);
			obj.seeker = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index seeker on a nil value");
		}
	}
}

