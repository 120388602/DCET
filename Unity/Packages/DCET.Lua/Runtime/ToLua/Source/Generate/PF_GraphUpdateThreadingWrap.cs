//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PF_GraphUpdateThreadingWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(PF.GraphUpdateThreading));
		L.RegConstant("UnityThread", PF.GraphUpdateThreading.UnityThread);
		L.RegConstant("SeparateThread", PF.GraphUpdateThreading.SeparateThread);
		L.RegConstant("UnityInit", PF.GraphUpdateThreading.UnityInit);
		L.RegConstant("UnityPost", PF.GraphUpdateThreading.UnityPost);
		L.RegConstant("SeparateAndUnityInit", PF.GraphUpdateThreading.SeparateAndUnityInit);
		L.EndEnum();
		TypeTraits<PF.GraphUpdateThreading>.Check = CheckType;
		StackTraits<PF.GraphUpdateThreading>.Push = Push;
	}

	static void Push(IntPtr L, PF.GraphUpdateThreading arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(PF.GraphUpdateThreading), L, pos);
	}
}

