//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PF_IRaycastableGraphWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PF.IRaycastableGraph), null);
		L.RegFunction("Linecast", Linecast);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Linecast(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				PF.IRaycastableGraph obj = (PF.IRaycastableGraph)ToLua.CheckObject<PF.IRaycastableGraph>(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
				bool o = obj.Linecast(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 4)
			{
				PF.IRaycastableGraph obj = (PF.IRaycastableGraph)ToLua.CheckObject<PF.IRaycastableGraph>(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
				PF.GraphNode arg2 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 4);
				bool o = obj.Linecast(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 5)
			{
				PF.IRaycastableGraph obj = (PF.IRaycastableGraph)ToLua.CheckObject<PF.IRaycastableGraph>(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
				PF.GraphNode arg2 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 4);
				PF.GraphHitInfo arg3;
				bool o = obj.Linecast(arg0, arg1, arg2, out arg3);
				LuaDLL.lua_pushboolean(L, o);
				ToLua.PushValue(L, arg3);
				return 2;
			}
			else if (count == 6)
			{
				PF.IRaycastableGraph obj = (PF.IRaycastableGraph)ToLua.CheckObject<PF.IRaycastableGraph>(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
				PF.GraphNode arg2 = (PF.GraphNode)ToLua.CheckObject<PF.GraphNode>(L, 4);
				PF.GraphHitInfo arg3;
				System.Collections.Generic.List<PF.GraphNode> arg4 = (System.Collections.Generic.List<PF.GraphNode>)ToLua.CheckObject(L, 6, typeof(System.Collections.Generic.List<PF.GraphNode>));
				bool o = obj.Linecast(arg0, arg1, arg2, out arg3, arg4);
				LuaDLL.lua_pushboolean(L, o);
				ToLua.PushValue(L, arg3);
				return 2;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: PF.IRaycastableGraph.Linecast");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

