//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DCETRuntime_AssetLoaderAsyncWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DCETRuntime.AssetLoaderAsync), typeof(System.Object));
		L.RegFunction("Update", Update);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("LoadAllAssetsAsync", LoadAllAssetsAsync);
		L.RegFunction("New", _CreateDCETRuntime_AssetLoaderAsync);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDCETRuntime_AssetLoaderAsync(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckObject<UnityEngine.AssetBundle>(L, 1);
				DCETRuntime.AssetLoaderAsync obj = new DCETRuntime.AssetLoaderAsync(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DCETRuntime.AssetLoaderAsync.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCETRuntime.AssetLoaderAsync obj = (DCETRuntime.AssetLoaderAsync)ToLua.CheckObject<DCETRuntime.AssetLoaderAsync>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCETRuntime.AssetLoaderAsync obj = (DCETRuntime.AssetLoaderAsync)ToLua.CheckObject<DCETRuntime.AssetLoaderAsync>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAllAssetsAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DCETRuntime.AssetLoaderAsync obj = (DCETRuntime.AssetLoaderAsync)ToLua.CheckObject<DCETRuntime.AssetLoaderAsync>(L, 1);
			System.Threading.Tasks.Task<UnityEngine.Object[]> o = obj.LoadAllAssetsAsync();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

