//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PF_IGraphInternalsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PF.IGraphInternals), null);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("DestroyAllNodes", DestroyAllNodes);
		L.RegFunction("SerializeExtraInfo", SerializeExtraInfo);
		L.RegFunction("DeserializeExtraInfo", DeserializeExtraInfo);
		L.RegFunction("PostDeserialization", PostDeserialization);
		L.RegFunction("DeserializeSettingsCompatibility", DeserializeSettingsCompatibility);
		L.RegVar("SerializedEditorSettings", get_SerializedEditorSettings, set_SerializedEditorSettings);
		L.RegFunction("getSerializedEditorSettings", get_SerializedEditorSettings);
		L.RegFunction("setSerializedEditorSettings", set_SerializedEditorSettings);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PF.IGraphInternals obj = (PF.IGraphInternals)ToLua.CheckObject<PF.IGraphInternals>(L, 1);
			obj.OnDestroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyAllNodes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PF.IGraphInternals obj = (PF.IGraphInternals)ToLua.CheckObject<PF.IGraphInternals>(L, 1);
			obj.DestroyAllNodes();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SerializeExtraInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.IGraphInternals obj = (PF.IGraphInternals)ToLua.CheckObject<PF.IGraphInternals>(L, 1);
			PF.GraphSerializationContext arg0 = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 2);
			obj.SerializeExtraInfo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeExtraInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.IGraphInternals obj = (PF.IGraphInternals)ToLua.CheckObject<PF.IGraphInternals>(L, 1);
			PF.GraphSerializationContext arg0 = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 2);
			obj.DeserializeExtraInfo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PostDeserialization(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.IGraphInternals obj = (PF.IGraphInternals)ToLua.CheckObject<PF.IGraphInternals>(L, 1);
			PF.GraphSerializationContext arg0 = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 2);
			obj.PostDeserialization(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeSettingsCompatibility(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PF.IGraphInternals obj = (PF.IGraphInternals)ToLua.CheckObject<PF.IGraphInternals>(L, 1);
			PF.GraphSerializationContext arg0 = (PF.GraphSerializationContext)ToLua.CheckObject<PF.GraphSerializationContext>(L, 2);
			obj.DeserializeSettingsCompatibility(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SerializedEditorSettings(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.IGraphInternals obj = (PF.IGraphInternals)o;
			string ret = obj.SerializedEditorSettings;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SerializedEditorSettings on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SerializedEditorSettings(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PF.IGraphInternals obj = (PF.IGraphInternals)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.SerializedEditorSettings = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SerializedEditorSettings on a nil value");
		}
	}
}

