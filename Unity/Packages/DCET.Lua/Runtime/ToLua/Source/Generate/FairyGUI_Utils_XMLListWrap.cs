//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_Utils_XMLListWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.Utils.XMLList), typeof(System.Object));
		L.RegFunction("Add", Add);
		L.RegFunction("Clear", Clear);
		L.RegFunction(".geti", get_Item);
		L.RegFunction("get", get_Item);
		L.RegFunction("get_Item", get_Item);
		L.RegFunction("get", get_Item);
		L.RegFunction("GetEnumerator", GetEnumerator);
		L.RegFunction("Filter", Filter);
		L.RegFunction("Find", Find);
		L.RegFunction("New", _CreateFairyGUI_Utils_XMLList);
		L.RegVar("this", _this, null);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("rawList", get_rawList, set_rawList);
		L.RegVar("Count", get_Count, null);
		L.RegFunction("getCount", get_Count);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_Utils_XMLList(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.Utils.XMLList obj = new FairyGUI.Utils.XMLList();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				System.Collections.Generic.List<FairyGUI.Utils.XML> arg0 = (System.Collections.Generic.List<FairyGUI.Utils.XML>)ToLua.CheckObject(L, 1, typeof(System.Collections.Generic.List<FairyGUI.Utils.XML>));
				FairyGUI.Utils.XMLList obj = new FairyGUI.Utils.XMLList(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.Utils.XMLList.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _get_this(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			FairyGUI.Utils.XML o = obj[arg0];
			ToLua.PushObject(L, o);
			return 1;

		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _this(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushvalue(L, 1);
			LuaDLL.tolua_bindthis(L, _get_this, null);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
			FairyGUI.Utils.XML arg0 = (FairyGUI.Utils.XML)ToLua.CheckObject<FairyGUI.Utils.XML>(L, 2);
			obj.Add(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Item(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			FairyGUI.Utils.XML o = obj[arg0];
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEnumerator(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
				FairyGUI.Utils.XMLList.Enumerator o = obj.GetEnumerator();
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (count == 2)
			{
				FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				FairyGUI.Utils.XMLList.Enumerator o = obj.GetEnumerator(arg0);
				ToLua.PushValue(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.Utils.XMLList.GetEnumerator");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Filter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			FairyGUI.Utils.XMLList o = obj.Filter(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Find(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)ToLua.CheckObject<FairyGUI.Utils.XMLList>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			FairyGUI.Utils.XML o = obj.Find(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rawList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)o;
			System.Collections.Generic.List<FairyGUI.Utils.XML> ret = obj.rawList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)o;
			int ret = obj.Count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Count on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rawList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.Utils.XMLList obj = (FairyGUI.Utils.XMLList)o;
			System.Collections.Generic.List<FairyGUI.Utils.XML> arg0 = (System.Collections.Generic.List<FairyGUI.Utils.XML>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<FairyGUI.Utils.XML>));
			obj.rawList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawList on a nil value");
		}
	}
}

