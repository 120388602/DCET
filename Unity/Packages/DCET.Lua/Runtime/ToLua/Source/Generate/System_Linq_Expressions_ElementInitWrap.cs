//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class System_Linq_Expressions_ElementInitWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(System.Linq.Expressions.ElementInit), typeof(System.Object));
		L.RegFunction("ToString", ToString);
		L.RegFunction("Update", Update);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("AddMethod", get_AddMethod, null);
		L.RegFunction("getAddMethod", get_AddMethod);
		L.RegVar("Arguments", get_Arguments, null);
		L.RegFunction("getArguments", get_Arguments);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Linq.Expressions.ElementInit obj = (System.Linq.Expressions.ElementInit)ToLua.CheckObject(L, 1, typeof(System.Linq.Expressions.ElementInit));
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			System.Linq.Expressions.ElementInit obj = (System.Linq.Expressions.ElementInit)ToLua.CheckObject(L, 1, typeof(System.Linq.Expressions.ElementInit));
			System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arg0 = (System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)ToLua.CheckObject<System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>>(L, 2);
			System.Linq.Expressions.ElementInit o = obj.Update(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AddMethod(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Linq.Expressions.ElementInit obj = (System.Linq.Expressions.ElementInit)o;
			System.Reflection.MethodInfo ret = obj.AddMethod;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AddMethod on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Arguments(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			System.Linq.Expressions.ElementInit obj = (System.Linq.Expressions.ElementInit)o;
			System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> ret = obj.Arguments;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Arguments on a nil value");
		}
	}
}

